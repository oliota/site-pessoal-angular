{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Renderer2, Input, HostBinding, NgModule, forwardRef, Directive, HostListener, ViewChild, Injectable, EventEmitter, Inject, PLATFORM_ID, ChangeDetectorRef, ContentChildren, Output, isDevMode, Injector, TemplateRef, RendererFactory2, NgZone, ComponentFactoryResolver, ApplicationRef, ViewContainerRef, Attribute, NO_ERRORS_SCHEMA, ContentChild } from '@angular/core';\nimport { CommonModule, isPlatformBrowser, DOCUMENT } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, FormsModule, NG_VALIDATORS } from '@angular/forms';\nimport { takeUntil, take, throttleTime, map, pairwise, distinctUntilChanged, share, filter, skip } from 'rxjs/operators';\nimport { Subject, timer, merge, fromEvent, of, animationFrameScheduler, Observable } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ConfigurableFocusTrapFactory, A11yModule } from '@angular/cdk/a11y';\nimport { RouterLinkWithHref } from '@angular/router';\nimport { __decorate } from 'tslib';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nconst _c0 = [\"*\"];\nconst _c1 = [\"mdbBtn\", \"\"];\nconst _c2 = [\"card\"];\n\nfunction CarouselComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_div_1_Template_a_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.previousSlide();\n    });\n    ɵngcc0.ɵɵelement(2, \"i\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"a\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_div_1_Template_a_click_3_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.nextSlide();\n    });\n    ɵngcc0.ɵɵelement(4, \"i\", 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r0.activeSlide === 0 && ctx_r0.noWrap);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r0.isLast(ctx_r0.activeSlide) && ctx_r0.noWrap);\n  }\n}\n\nfunction CarouselComponent_ol_2_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_ol_2_li_1_Template_li_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12);\n      const i_r10 = restoredCtx.index;\n      const ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r11.selectSlide(i_r10);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const slidez_r9 = ctx.$implicit;\n    ɵngcc0.ɵɵclassProp(\"active\", slidez_r9.active === true);\n  }\n}\n\nfunction CarouselComponent_ol_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ol\", 10);\n    ɵngcc0.ɵɵtemplate(1, CarouselComponent_ol_2_li_1_Template, 1, 2, \"li\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.slides);\n  }\n}\n\nfunction CarouselComponent_ol_5_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_ol_5_li_1_Template_li_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r17);\n      const i_r15 = restoredCtx.index;\n      const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r16.selectSlide(i_r15);\n    });\n    ɵngcc0.ɵɵelement(1, \"img\", 13);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const slidez_r14 = ctx.$implicit;\n    const ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"active\", slidez_r14.active === true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵpropertyInterpolate(\"src\", ctx_r13.getImg(slidez_r14), ɵngcc0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction CarouselComponent_ol_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ol\", 10);\n    ɵngcc0.ɵɵtemplate(1, CarouselComponent_ol_5_li_1_Template, 2, 3, \"li\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r2.slides);\n  }\n}\n\nfunction CarouselComponent_a_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 14);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_a_6_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r19);\n      const ctx_r18 = ɵngcc0.ɵɵnextContext();\n      return ctx_r18.previousSlide();\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 16);\n    ɵngcc0.ɵɵtext(3, \"Previous\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r3.activeSlide === 0 && ctx_r3.noWrap);\n  }\n}\n\nfunction CarouselComponent_a_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 17);\n    ɵngcc0.ɵɵlistener(\"click\", function CarouselComponent_a_7_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r21);\n      const ctx_r20 = ɵngcc0.ɵɵnextContext();\n      return ctx_r20.nextSlide();\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 18);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 16);\n    ɵngcc0.ɵɵtext(3, \"Next\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r4.isLast(ctx_r4.activeSlide) && ctx_r4.noWrap);\n  }\n}\n\nconst _c3 = [\"input\"];\n\nconst _c4 = function (a0, a1, a2, a3) {\n  return {\n    \"custom-control custom-checkbox\": a0,\n    \"form-check\": a1,\n    \"custom-control-inline\": a2,\n    \"form-check-inline\": a3\n  };\n};\n\nconst _c5 = function (a0, a1, a2) {\n  return {\n    \"filled-in\": a0,\n    \"custom-control-input\": a1,\n    \"form-check-input\": a2\n  };\n};\n\nconst _c6 = function (a0, a1, a2, a3, a4) {\n  return {\n    \"custom-control-label\": a0,\n    \"form-check-label\": a1,\n    \"label-before\": a2,\n    \"checkbox-rounded\": a3,\n    \"disabled\": a4\n  };\n};\n\nconst _c7 = [\"mdbCollapse\", \"\"];\nconst _c8 = [\"mdbDropdown\", \"\"];\n\nconst _c9 = function (a0, a1, a2, a3, a4) {\n  return {\n    fas: a0,\n    far: a1,\n    fab: a2,\n    fal: a3,\n    fad: a4\n  };\n};\n\nconst _c10 = \".error-message,.success-message{position:absolute;top:40px;left:0;font-size:.8rem}textarea~.error-message,textarea~.success-message{top:unset;bottom:-20px}.error-message{color:#f44336}.success-message{color:#00c851}\\n\";\nconst _c11 = [\"mdbModal\", \"\"];\nconst _c12 = \".img-fluid,.modal-dialog.cascading-modal.modal-avatar .modal-header,.video-fluid{max-width:100%;height:auto}.flex-center{display:flex;justify-content:center;align-items:center;height:100%}.flex-center p{margin:0}.flex-center ul{text-align:center}.flex-center ul li{margin-bottom:1rem}.flex-center ul li:last-of-type{margin-bottom:0}.hr-light{border-top:1px solid #fff}.hr-dark{border-top:1px solid #666}.w-responsive{width:75%}@media (max-width: 740px){.w-responsive{width:100%}}.collapsible-body{display:none}.jumbotron{box-shadow:0 2px 5px #00000029,0 2px 10px #0000001f;border-radius:.125rem;background-color:#fff}.bg-primary{background-color:#4285f4!important}a.bg-primary:hover,a.bg-primary:focus,button.bg-primary:hover,button.bg-primary:focus{background-color:#1266f1!important}.border-primary{border-color:#4285f4!important}.bg-danger{background-color:#ff3547!important}a.bg-danger:hover,a.bg-danger:focus,button.bg-danger:hover,button.bg-danger:focus{background-color:#ff0219!important}.border-danger{border-color:#ff3547!important}.bg-warning{background-color:#fb3!important}a.bg-warning:hover,a.bg-warning:focus,button.bg-warning:hover,button.bg-warning:focus{background-color:#fa0!important}.border-warning{border-color:#fb3!important}.bg-success{background-color:#00c851!important}a.bg-success:hover,a.bg-success:focus,button.bg-success:hover,button.bg-success:focus{background-color:#00953c!important}.border-success{border-color:#00c851!important}.bg-info{background-color:#33b5e5!important}a.bg-info:hover,a.bg-info:focus,button.bg-info:hover,button.bg-info:focus{background-color:#1a9bcb!important}.border-info{border-color:#33b5e5!important}.bg-default{background-color:#2bbbad!important}a.bg-default:hover,a.bg-default:focus,button.bg-default:hover,button.bg-default:focus{background-color:#219287!important}.border-default{border-color:#2bbbad!important}.bg-secondary{background-color:#a6c!important}a.bg-secondary:hover,a.bg-secondary:focus,button.bg-secondary:hover,button.bg-secondary:focus{background-color:#9540bf!important}.border-secondary{border-color:#a6c!important}.bg-dark{background-color:#212121!important}a.bg-dark:hover,a.bg-dark:focus,button.bg-dark:hover,button.bg-dark:focus{background-color:#080808!important}.border-dark{border-color:#212121!important}.bg-light{background-color:#e0e0e0!important}a.bg-light:hover,a.bg-light:focus,button.bg-light:hover,button.bg-light:focus{background-color:#c7c7c7!important}.border-light{border-color:#e0e0e0!important}.card-img-100{width:100px;height:100px}.card-img-64{width:64px;height:64px}.mml-1{margin-left:-.25rem!important}.flex-1{flex:1}body.modal-open{overflow:auto}.modal-dialog .modal-content{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;border:0;border-radius:.125rem}.modal-dialog .modal-content .modal-header{border-top-left-radius:.125rem;border-top-right-radius:.125rem}.modal-dialog.cascading-modal .close{opacity:1;text-shadow:none;color:#fff;outline:0}.modal-dialog.cascading-modal .modal-header{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;margin:-2rem 1rem 1rem;border:none;border-radius:.125rem;padding:1.5rem;text-align:center}.modal-dialog.cascading-modal .modal-header .close{margin-right:1rem}.modal-dialog.cascading-modal .modal-header .title{margin-bottom:0;width:100%;font-size:1.25rem}.modal-dialog.cascading-modal .modal-header .title .fas,.modal-dialog.cascading-modal .modal-header .title .fab,.modal-dialog.cascading-modal .modal-header .title .far{margin-right:9px}.modal-dialog.cascading-modal .modal-c-tabs .md-tabs{box-shadow:0 2px 5px #00000029,0 2px 10px #0000001f;margin:-1.5rem 1rem 0;display:flex}.modal-dialog.cascading-modal .modal-c-tabs .md-tabs li{flex:1}.modal-dialog.cascading-modal .modal-c-tabs .md-tabs li a{text-align:center}.modal-dialog.cascading-modal .modal-c-tabs .tab-content{padding:1.7rem 0 0;box-shadow:unset}.modal-dialog.cascading-modal .modal-body,.modal-dialog.cascading-modal .modal-footer{padding-left:2rem;padding-right:2rem;color:#616161}.modal-dialog.cascading-modal .modal-body .additional-option,.modal-dialog.cascading-modal .modal-footer .additional-option{margin-top:1rem;text-align:center}.modal-dialog.cascading-modal.modal-avatar .modal-header{box-shadow:none;margin:-6rem 0 -1rem}.modal-dialog.cascading-modal.modal-avatar .modal-header img{width:130px;box-shadow:0 8px 17px #0003,0 6px 20px #00000030;margin-left:auto;margin-right:auto}.modal-dialog.modal-notify .heading{margin:0;padding:.3rem;font-size:1.15rem;color:#fff}.modal-dialog.modal-notify .modal-header{box-shadow:0 2px 5px #00000029,0 2px 10px #0000001f;border:0}.modal-dialog.modal-notify.modal-primary .modal-header{background-color:#4285f4}.modal-dialog.modal-notify.modal-primary .fas,.modal-dialog.modal-notify.modal-primary .fab,.modal-dialog.modal-notify.modal-primary .far{color:#4285f4}.modal-dialog.modal-notify.modal-primary .badge{background-color:#4285f4}.modal-dialog.modal-notify.modal-primary .btn .fas,.modal-dialog.modal-notify.modal-primary .btn .fab,.modal-dialog.modal-notify.modal-primary .btn .far{color:#fff}.modal-dialog.modal-notify.modal-primary .btn.btn-outline-primary .fas,.modal-dialog.modal-notify.modal-primary .btn.btn-outline-primary .fab,.modal-dialog.modal-notify.modal-primary .btn.btn-outline-primary .far{color:#4285f4}.modal-dialog.modal-notify.modal-danger .modal-header{background-color:#ff3547}.modal-dialog.modal-notify.modal-danger .fas,.modal-dialog.modal-notify.modal-danger .fab,.modal-dialog.modal-notify.modal-danger .far{color:#ff3547}.modal-dialog.modal-notify.modal-danger .badge{background-color:#ff3547}.modal-dialog.modal-notify.modal-danger .btn .fas,.modal-dialog.modal-notify.modal-danger .btn .fab,.modal-dialog.modal-notify.modal-danger .btn .far{color:#fff}.modal-dialog.modal-notify.modal-danger .btn.btn-outline-danger .fas,.modal-dialog.modal-notify.modal-danger .btn.btn-outline-danger .fab,.modal-dialog.modal-notify.modal-danger .btn.btn-outline-danger .far{color:#ff3547}.modal-dialog.modal-notify.modal-warning .modal-header{background-color:#fb3}.modal-dialog.modal-notify.modal-warning .fas,.modal-dialog.modal-notify.modal-warning .fab,.modal-dialog.modal-notify.modal-warning .far{color:#fb3}.modal-dialog.modal-notify.modal-warning .badge{background-color:#fb3}.modal-dialog.modal-notify.modal-warning .btn .fas,.modal-dialog.modal-notify.modal-warning .btn .fab,.modal-dialog.modal-notify.modal-warning .btn .far{color:#fff}.modal-dialog.modal-notify.modal-warning .btn.btn-outline-warning .fas,.modal-dialog.modal-notify.modal-warning .btn.btn-outline-warning .fab,.modal-dialog.modal-notify.modal-warning .btn.btn-outline-warning .far{color:#fb3}.modal-dialog.modal-notify.modal-success .modal-header{background-color:#00c851}.modal-dialog.modal-notify.modal-success .fas,.modal-dialog.modal-notify.modal-success .fab,.modal-dialog.modal-notify.modal-success .far{color:#00c851}.modal-dialog.modal-notify.modal-success .badge{background-color:#00c851}.modal-dialog.modal-notify.modal-success .btn .fas,.modal-dialog.modal-notify.modal-success .btn .fab,.modal-dialog.modal-notify.modal-success .btn .far{color:#fff}.modal-dialog.modal-notify.modal-success .btn.btn-outline-success .fas,.modal-dialog.modal-notify.modal-success .btn.btn-outline-success .fab,.modal-dialog.modal-notify.modal-success .btn.btn-outline-success .far{color:#00c851}.modal-dialog.modal-notify.modal-info .modal-header{background-color:#33b5e5}.modal-dialog.modal-notify.modal-info .fas,.modal-dialog.modal-notify.modal-info .fab,.modal-dialog.modal-notify.modal-info .far{color:#33b5e5}.modal-dialog.modal-notify.modal-info .badge{background-color:#33b5e5}.modal-dialog.modal-notify.modal-info .btn .fas,.modal-dialog.modal-notify.modal-info .btn .fab,.modal-dialog.modal-notify.modal-info .btn .far{color:#fff}.modal-dialog.modal-notify.modal-info .btn.btn-outline-info .fas,.modal-dialog.modal-notify.modal-info .btn.btn-outline-info .fab,.modal-dialog.modal-notify.modal-info .btn.btn-outline-info .far{color:#33b5e5}@media (min-width: 768px){.modal .modal-dialog.modal-top{top:0}.modal .modal-dialog.modal-left{left:0}.modal .modal-dialog.modal-right{right:0}.modal .modal-dialog.modal-bottom{bottom:0}.modal .modal-dialog.modal-top-left{top:10px;left:10px}.modal .modal-dialog.modal-top-right{top:10px;right:10px}.modal .modal-dialog.modal-bottom-left{bottom:10px;left:10px}.modal .modal-dialog.modal-bottom-right{bottom:10px;right:10px}}@media (min-width: 992px){.modal.modal-scrolling{position:relative}.modal.modal-scrolling .modal-dialog{position:fixed;z-index:1050}.modal.modal-content-clickable{top:auto;bottom:auto}.modal.modal-content-clickable .modal-dialog{position:fixed}.modal .modal-fluid{width:100%;max-width:100%}.modal .modal-fluid .modal-content{width:100%}.modal .modal-frame{position:absolute;margin:0!important;width:100%;max-width:100%!important}.modal .modal-frame.modal-bottom{bottom:0}.modal .modal-frame.modal-dialog{height:inherit}.modal .modal-full-height{position:absolute;display:flex;margin:0;width:400px;height:auto;min-height:100%;top:0;right:0}.modal .modal-full-height.modal-top,.modal .modal-full-height.modal-bottom{display:block;width:100%;max-width:100%;height:auto}.modal .modal-full-height.modal-top{bottom:auto}.modal .modal-full-height.modal-bottom{min-height:0;top:auto}.modal .modal-full-height .modal-content{width:100%}.modal .modal-full-height.modal-lg{width:90%;max-width:90%}}@media (min-width: 992px) and (min-width: 992px){.modal .modal-full-height.modal-lg{width:800px;max-width:800px}}@media (min-width: 992px) and (min-width: 1200px){.modal .modal-full-height.modal-lg{width:1000px;max-width:1000px}}@media (min-width: 992px){.modal .modal-side{position:absolute;bottom:10px;right:10px;margin:0;width:400px}}body.scrollable{overflow-y:auto}.modal-dialog .modal-content{border:0}.modal{padding-right:0!important}@media (min-width: 768px){.modal .modal-dialog.modal-top{top:0;left:0;right:0}.modal .modal-dialog.modal-left{left:0}.modal .modal-dialog.modal-right{right:0}.modal .modal-dialog.modal-bottom>.modal-content{position:absolute;bottom:0}.modal .modal-dialog.modal-top-left{top:10px;left:10px}.modal .modal-dialog.modal-top-right{top:10px;right:10px}.modal .modal-dialog.modal-bottom-left{left:10px;bottom:10px}.modal .modal-dialog.modal-bottom-right{right:10px;bottom:10px}}.modal .modal-side.modal-top{top:0}.modal .modal-side.modal-left{left:0}.modal .modal-side.modal-right{right:0}.modal .modal-side.modal-bottom{bottom:0}.modal .modal-side.modal-top-left{top:10px;left:10px}.modal .modal-side.modal-top-right{top:10px;right:10px}.modal .modal-side.modal-bottom-left{left:10px;bottom:10px}.modal .modal-side.modal-bottom-right{right:10px;bottom:10px}.modal.fade.top:not(.show) .modal-dialog{transform:translateY(-25%)}.modal.fade.left:not(.show) .modal-dialog{transform:translate(-25%)}.modal.fade.right:not(.show) .modal-dialog{transform:translate(25%)}.modal.fade.bottom:not(.show) .modal-dialog{transform:translateY(25%)}.modal.fade.in{opacity:1}.modal.fade.in .modal-dialog{transform:translate(0)}.modal.fade.in .modal-dialog .relative{display:inline-block}.modal.modal-scrolling{position:relative}.modal.modal-scrolling .modal-dialog{position:fixed;z-index:1050}.modal.modal-content-clickable{top:auto;bottom:auto}.modal.modal-content-clickable .modal-dialog{position:fixed}.modal .modal-fluid{width:100%;max-width:100%}.modal .modal-fluid .modal-content{width:100%}.modal .modal-frame{position:absolute;width:100%;max-width:100%;margin:0}@media (max-width: 767px){.modal .modal-frame{padding:.5rem}}.modal .modal-frame.modal-bottom{bottom:0}.modal .modal-full-height{display:flex;position:absolute;width:400px;min-height:100%;margin:0;top:0;right:0}@media (max-width: 576px){.modal .modal-full-height{width:100%;padding:.5rem}}@media (max-width: 992px){.modal .modal-full-height{width:100%;height:unset;position:unset}}@media (max-width: 992px){.modal .modal-full-height.modal-top,.modal .modal-full-height.modal-left,.modal .modal-full-height.modal-right{margin:1.75rem auto;min-height:unset}}@media (max-width: 768px){.modal .modal-full-height.modal-bottom{margin-top:1.75rem}}@media (min-width: 768px) and (max-width: 992px){.modal .modal-full-height.modal-bottom{margin-bottom:1.75rem}.modal .modal-full-height.modal-bottom .modal-content{bottom:1rem}}@media (max-width: 992px){.modal .modal-full-height.modal-top,.modal .modal-full-height.modal-bottom,.modal .modal-full-height.modal-left,.modal .modal-full-height.modal-right{margin-left:auto;margin-right:auto}}.modal .modal-full-height.modal-top,.modal .modal-full-height.modal-bottom{display:block;width:100%;height:auto}.modal .modal-full-height.modal-top{bottom:auto}.modal .modal-full-height.modal-bottom{bottom:0}.modal .modal-full-height .modal-content{width:100%}.modal .modal-full-height.modal-lg{max-width:90%;width:90%}@media (min-width: 992px){.modal .modal-full-height.modal-lg{max-width:800px;width:800px}}@media (min-width: 1200px){.modal .modal-full-height.modal-lg{max-width:1000px;width:1000px}}.modal .modal-side{position:absolute;right:10px;bottom:10px;margin:0;min-width:100px}@media (max-width: 768px){.modal .modal-side{padding-left:.5rem}}.modal-dialog.cascading-modal{margin-top:10%}.modal-dialog.cascading-modal .modal-header{text-align:center;margin:-2rem 1rem 1rem;padding:1.5rem;border:none;flex-direction:column}.modal-dialog.cascading-modal .modal-header .close{margin-right:2.5rem}.modal-dialog.cascading-modal .modal-header.white-text .close{color:#fff;opacity:1}.modal-dialog.cascading-modal .modal-header .title{width:100%;margin-bottom:0;font-size:1.25rem}.modal-dialog.cascading-modal .modal-header .title .fa{margin-right:9px}.modal-dialog.cascading-modal .modal-header .social-buttons{margin-top:1.5rem}.modal-dialog.cascading-modal .modal-header .social-buttons a{font-size:1rem}.modal-dialog.cascading-modal .modal-c-tabs .md-tabs{margin:-1.5rem 1rem 0}.modal-dialog.cascading-modal .modal-c-tabs .tab-content{padding:1.7rem 0 0}.modal-dialog.cascading-modal .modal-body,.modal-dialog.cascading-modal .modal-footer{color:#616161;padding-right:2rem;padding-left:2rem}.modal-dialog.cascading-modal .modal-body .additional-option,.modal-dialog.cascading-modal .modal-footer .additional-option{text-align:center;margin-top:1rem}.modal-dialog.cascading-modal.modal-avatar{margin-top:6rem}.modal-dialog.cascading-modal.modal-avatar .modal-header{margin:-6rem 2rem -1rem}.modal-dialog.cascading-modal.modal-avatar .modal-header img{width:130px}.modal-dialog.modal-notify .heading{margin:0;padding:.3rem;color:#fff;font-size:1.15rem}.modal-dialog.modal-notify .modal-header{border:0}.modal-dialog.modal-notify .close{opacity:1}.modal-dialog.modal-notify .modal-body{padding:1.5rem;color:#616161}.modal-dialog.modal-notify .btn-outline-secondary-modal{background-color:transparent}.modal-dialog.modal-notify.modal-info .modal-header{background-color:#5394ff}.modal-dialog.modal-notify.modal-info .fa{color:#5394ff}.modal-dialog.modal-notify.modal-info .badge{background-color:#5394ff}.modal-dialog.modal-notify.modal-info .btn-primary-modal{background:#5394ff}.modal-dialog.modal-notify.modal-info .btn-primary-modal:hover,.modal-dialog.modal-notify.modal-info .btn-primary-modal:focus,.modal-dialog.modal-notify.modal-info .btn-primary-modal:active{background-color:#6da4ff!important}.modal-dialog.modal-notify.modal-info .btn-primary-modal.active{background-color:#0059ec!important}.modal-dialog.modal-notify.modal-info .btn-outline-secondary-modal{border:2px solid #5394ff;color:#5394ff!important}.modal-dialog.modal-notify.modal-warning .modal-header{background-color:#ff8e38}.modal-dialog.modal-notify.modal-warning .fa{color:#ff8e38}.modal-dialog.modal-notify.modal-warning .badge{background-color:#ff8e38}.modal-dialog.modal-notify.modal-warning .btn-primary-modal{background:#ff8e38}.modal-dialog.modal-notify.modal-warning .btn-primary-modal:hover,.modal-dialog.modal-notify.modal-warning .btn-primary-modal:focus,.modal-dialog.modal-notify.modal-warning .btn-primary-modal:active{background-color:#ff9c52!important}.modal-dialog.modal-notify.modal-warning .btn-primary-modal.active{background-color:#d15a00!important}.modal-dialog.modal-notify.modal-warning .btn-outline-secondary-modal{border:2px solid #ff8e38;color:#ff8e38!important}.modal-dialog.modal-notify.modal-success .modal-header{background-color:#01d36b}.modal-dialog.modal-notify.modal-success .fa{color:#01d36b}.modal-dialog.modal-notify.modal-success .badge{background-color:#01d36b}.modal-dialog.modal-notify.modal-success .btn-primary-modal{background:#01d36b}.modal-dialog.modal-notify.modal-success .btn-primary-modal:hover,.modal-dialog.modal-notify.modal-success .btn-primary-modal:focus,.modal-dialog.modal-notify.modal-success .btn-primary-modal:active{background-color:#01ec78!important}.modal-dialog.modal-notify.modal-success .btn-primary-modal.active{background-color:#016d38!important}.modal-dialog.modal-notify.modal-success .btn-outline-secondary-modal{border:2px solid #01d36b;color:#01d36b!important}.modal-dialog.modal-notify.modal-danger .modal-header{background-color:#ff4b4b}.modal-dialog.modal-notify.modal-danger .fa{color:#ff4b4b}.modal-dialog.modal-notify.modal-danger .badge{background-color:#ff4b4b}.modal-dialog.modal-notify.modal-danger .btn-primary-modal{background:#ff4b4b}.modal-dialog.modal-notify.modal-danger .btn-primary-modal:hover,.modal-dialog.modal-notify.modal-danger .btn-primary-modal:focus,.modal-dialog.modal-notify.modal-danger .btn-primary-modal:active{background-color:#ff6565!important}.modal-dialog.modal-notify.modal-danger .btn-primary-modal.active{background-color:#e40000!important}.modal-dialog.modal-notify.modal-danger .btn-outline-secondary-modal{border:2px solid #ff4b4b;color:#ff4b4b!important}.modal-sm .modal-content{margin:0 auto;max-width:300px}@media (min-width: 768px){.modal-sm{max-width:300px}}.modal .modal-fluid,.modal .modal-frame{width:100%;max-width:100%}.modal-ext .modal-content .modal-header{text-align:center}.modal-ext .modal-content .options{float:left}.modal-ext .modal-content .modal-body .text-xs-center fieldset{margin-top:20px}.modal-ext .modal-content .call{margin-top:1rem}.modal-ext .modal-content .modal-body{padding:2rem 2rem 1rem}.modal-content:not(.card-image) .close{position:absolute;right:15px}.modal-cart li p{margin:5px;font-weight:400}.modal-cart li p .badge{margin-left:10px;margin-top:3px;font-weight:400;position:absolute}.modal-cart li p .quantity{font-size:16px;margin-right:7px;font-weight:300}.modal-cart .cartPageLink{margin-left:10px}.modal-cart .cartPageLink a{text-decoration:underline;color:#666}.modal-cart .total{float:right;font-weight:400}.cf-phone{margin-left:7px}.side-modal{position:fixed;width:400px;height:100%;width:100%;z-index:9999}.side-modal .modal-dialog{position:absolute;bottom:10px;right:10px;width:400px;margin:10px}@media (max-width: 760px){.side-modal .modal-dialog{display:none}}.side-modal .modal-header{padding:1rem}.side-modal .modal-header .heading{margin:0;padding:0}.side-modal .modal-content{border:none}.modal-dynamic>:first-child{display:flex;flex-direction:column;height:100%}.side-modal.fade:not(.show) .modal-dialog{transform:translate(25%)}.transparent-bd{opacity:0!important}.modal-backdrop.in{opacity:.5}.modal-backdrop{opacity:.5}#exampleModalScroll{overflow-x:hidden;overflow-y:auto}.modal-open .modal{overflow-x:hidden;overflow-y:hidden}.form-dark .card-image{background-size:100%}\\n\";\nconst _c13 = [\"navbar\"];\nconst _c14 = [\"mobile\"];\nconst _c15 = [\"nav\"];\nconst _c16 = [\"container\"];\nconst _c17 = [\"toggler\"];\n\nfunction NavbarComponent_ng_content_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 4, [\"*ngIf\", \"this.doubleNav == true\"]);\n  }\n}\n\nfunction NavbarComponent_div_8_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 7, 8);\n    ɵngcc0.ɵɵlistener(\"click\", function NavbarComponent_div_8_button_1_Template_button_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n      ctx_r7.toggle();\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵelement(2, \"span\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵattribute(\"aria-controls\", ctx_r5.collapseId)(\"aria-expanded\", ctx_r5.ariaExpanded);\n  }\n}\n\nfunction NavbarComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtemplate(1, NavbarComponent_div_8_button_1_Template, 3, 2, \"button\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.el.nativeElement.children.length !== 0);\n  }\n}\n\nconst _c18 = [[[\"mdb-navbar-brand\"]], [[\"logo\"]], \"*\", [[\"links\"]], [[\"navlinks\"]]];\n\nconst _c19 = function (a0) {\n  return {\n    container: a0\n  };\n};\n\nconst _c20 = function (a0) {\n  return {\n    display: a0\n  };\n};\n\nconst _c21 = function (a0, a1, a2) {\n  return {\n    collapse: a0,\n    show: a1,\n    collapsing: a2\n  };\n};\n\nconst _c22 = [\"mdb-navbar-brand\", \"logo\", \"*\", \"links\", \"navlinks\"];\n\nfunction PopoverContainerComponent_h3_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"h3\", 2);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0.headerClass);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.title);\n  }\n}\n\nconst _c23 = [\"mdbTable\", \"\"];\n\nfunction MdbTablePaginationComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate5(\" \", ctx_r0.firstItemIndex, \" \", ctx_r0.dashKeyword, \" \", ctx_r0.lastVisibleItemIndex, \" \", ctx_r0.ofKeyword, \" \", ctx_r0.allItemsLength, \" \");\n  }\n}\n\nconst _c24 = function (a0, a1) {\n  return {\n    \"justify-content-end\": a0,\n    \"justify-content-start\": a1\n  };\n};\n\nconst _c25 = function (a0) {\n  return {\n    disabled: a0\n  };\n};\n\nconst _c26 = [\"tooltipInner\"];\nconst _c27 = [\"tooltipArrow\"];\nlet MDBBadgeComponent = /*#__PURE__*/(() => {\n  class MDBBadgeComponent {\n    constructor(_el, _renderer) {\n      this._el = _el;\n      this._renderer = _renderer;\n    }\n\n    ngOnInit() {\n      this._renderer.addClass(this._el.nativeElement, 'badge');\n\n      if (this.color) {\n        const customClassArr = this.color.split(' ');\n        customClassArr.forEach(el => {\n          this._renderer.addClass(this._el.nativeElement, el);\n        });\n      }\n    }\n\n  }\n\n  MDBBadgeComponent.ɵfac = function MDBBadgeComponent_Factory(t) {\n    return new (t || MDBBadgeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  MDBBadgeComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MDBBadgeComponent,\n    selectors: [[\"mdb-badge\"]],\n    hostVars: 16,\n    hostBindings: function MDBBadgeComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"badge-default\", ctx.default)(\"badge-primary\", ctx.primary)(\"badge-secondary\", ctx.secondary)(\"badge-success\", ctx.success)(\"badge-info\", ctx.info)(\"badge-warning\", ctx.warning)(\"badge-danger\", ctx.danger)(\"badge-pill\", ctx.pill);\n      }\n    },\n    inputs: {\n      default: \"default\",\n      primary: \"primary\",\n      secondary: \"secondary\",\n      success: \"success\",\n      info: \"info\",\n      warning: \"warning\",\n      danger: \"danger\",\n      pill: \"pill\",\n      classInside: \"classInside\",\n      color: \"color\",\n      class: \"class\"\n    },\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 4,\n    template: function MDBBadgeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMapInterpolate2(\"\", ctx.class, \" \", ctx.classInside, \"\");\n      }\n    },\n    styles: [\".badge{box-shadow:0 2px 5px #00000029,0 2px 10px #0000001f;border-radius:.125rem;color:#fff!important}.badge-pill{border-radius:10rem;padding-right:.6rem;padding-left:.6rem}.badge-primary{background-color:#4285f4!important;color:#fff!important}.badge-danger{background-color:#ff3547!important;color:#fff!important}.badge-warning{background-color:#fb3!important;color:#fff!important}.badge-success{background-color:#00c851!important;color:#fff!important}.badge-info{background-color:#33b5e5!important;color:#fff!important}.badge-default{background-color:#2bbbad!important;color:#fff!important}.badge-secondary{background-color:#a6c!important;color:#fff!important}.badge-dark{background-color:#212121!important;color:#fff!important}.badge-light{background-color:#e0e0e0!important;color:#000!important}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MDBBadgeComponent;\n})();\nlet BadgeModule = /*#__PURE__*/(() => {\n  class BadgeModule {}\n\n  BadgeModule.ɵfac = function BadgeModule_Factory(t) {\n    return new (t || BadgeModule)();\n  };\n\n  BadgeModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: BadgeModule\n  });\n  BadgeModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return BadgeModule;\n})();\nlet MdbBreadcrumbComponent = /*#__PURE__*/(() => {\n  class MdbBreadcrumbComponent {}\n\n  MdbBreadcrumbComponent.ɵfac = function MdbBreadcrumbComponent_Factory(t) {\n    return new (t || MdbBreadcrumbComponent)();\n  };\n\n  MdbBreadcrumbComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdbBreadcrumbComponent,\n    selectors: [[\"mdb-breadcrumb\"]],\n    inputs: {\n      customClass: \"customClass\",\n      textTransform: \"textTransform\"\n    },\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 4,\n    template: function MdbBreadcrumbComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"ol\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMapInterpolate2(\"breadcrumb list-inline list-unstyled \", ctx.customClass, \" text-\", ctx.textTransform, \"\");\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MdbBreadcrumbComponent;\n})();\nlet MdbBreadcrumbItemComponent = /*#__PURE__*/(() => {\n  class MdbBreadcrumbItemComponent {\n    constructor(_el, _renderer) {\n      this._el = _el;\n      this._renderer = _renderer;\n    }\n\n    ngOnInit() {\n      this._renderer.addClass(this._el.nativeElement, 'breadcrumb-item');\n    }\n\n  }\n\n  MdbBreadcrumbItemComponent.ɵfac = function MdbBreadcrumbItemComponent_Factory(t) {\n    return new (t || MdbBreadcrumbItemComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  MdbBreadcrumbItemComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdbBreadcrumbItemComponent,\n    selectors: [[\"mdb-breadcrumb-item\"]],\n    inputs: {\n      fontWeight: \"fontWeight\"\n    },\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 3,\n    template: function MdbBreadcrumbItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"li\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMapInterpolate1(\"list-inline-item breadcrumb-item font-weight-\", ctx.fontWeight, \"\");\n      }\n    },\n    styles: [\".breadcrumb-item{cursor:pointer}.breadcrumb-item.active{color:#6c757d!important}.breadcrumb-item.active>.breadcrumb-item{cursor:default}.light-font .breadcrumb-item:before{color:#fff}.light-font .breadcrumb-item.active{color:#cfd8dc!important}.light-font .breadcrumb-item.active>.breadcrumb-item{cursor:default}.dark-font .breadcrumb-item:before{color:#000}.dark-font .breadcrumb-item.active{color:#455a64!important}.dark-font .breadcrumb-item.active>.breadcrumb-item{cursor:default}\\n\"],\n    encapsulation: 2\n  });\n  return MdbBreadcrumbItemComponent;\n})();\nlet BreadcrumbModule = /*#__PURE__*/(() => {\n  class BreadcrumbModule {}\n\n  BreadcrumbModule.ɵfac = function BreadcrumbModule_Factory(t) {\n    return new (t || BreadcrumbModule)();\n  };\n\n  BreadcrumbModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: BreadcrumbModule\n  });\n  BreadcrumbModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  }); // tslint:disable-next-line:component-class-suffix\n\n  return BreadcrumbModule;\n})();\nlet MdbBtnDirective = /*#__PURE__*/(() => {\n  class MdbBtnDirective {\n    constructor(el, renderer) {\n      this.el = el;\n      this.renderer = renderer;\n      this.color = '';\n      this.rounded = false;\n      this.gradient = '';\n      this.outline = false;\n      this.flat = false;\n      this.size = '';\n      this.block = false;\n      this.floating = false;\n    }\n\n    ngOnInit() {\n      this.colorClass = 'btn-' + this.color;\n      this.gradientClass = this.gradient + '-gradient';\n      this.outlineClass = 'btn-outline-' + this.color;\n      this.flatClass = 'btn-flat';\n      this.roundedClass = 'btn-rounded';\n      this.sizeClass = 'btn-' + this.size;\n      this.blockClass = 'btn-block';\n      this.floatingClass = 'btn-floating';\n      this.renderer.addClass(this.el.nativeElement, 'btn');\n      this.initClasses();\n    }\n\n    ngOnChanges(changes) {\n      if (changes.color) {\n        this.renderer.removeClass(this.el.nativeElement, this.colorClass);\n\n        if (this.color && this.color !== '') {\n          this.colorClass = 'btn-' + this.color;\n          this.renderer.addClass(this.el.nativeElement, this.colorClass);\n        }\n\n        if (this.outline) {\n          const currentOutlineClass = this.outlineClass;\n          this.outlineClass = 'btn-outline-' + this.color;\n          this.renderer.removeClass(this.el.nativeElement, currentOutlineClass);\n          this.renderer.addClass(this.el.nativeElement, this.outlineClass);\n        }\n      }\n\n      if (changes.gradient) {\n        this.renderer.removeClass(this.el.nativeElement, this.gradientClass);\n\n        if (this.gradient !== '') {\n          this.gradientClass = this.gradient + '-gradient';\n          this.renderer.addClass(this.el.nativeElement, this.gradientClass);\n        }\n      }\n\n      if (changes.outline) {\n        if (!this.outline) {\n          this.renderer.removeClass(this.el.nativeElement, this.outlineClass);\n        }\n\n        if (this.outline) {\n          this.renderer.removeClass(this.el.nativeElement, this.colorClass);\n          this.renderer.addClass(this.el.nativeElement, this.outlineClass);\n        }\n\n        this.outlineClass = 'btn-outline-' + this.color;\n      }\n\n      if (changes.flat) {\n        this.renderer.removeClass(this.el.nativeElement, this.flatClass);\n\n        if (this.flat) {\n          if (this.color) {\n            this.renderer.removeClass(this.el.nativeElement, this.colorClass);\n          }\n\n          if (this.gradient) {\n            this.renderer.removeClass(this.el.nativeElement, this.gradientClass);\n          }\n\n          if (this.outline) {\n            this.renderer.removeClass(this.el.nativeElement, this.outlineClass);\n          }\n\n          if (this.rounded) {\n            this.renderer.removeClass(this.el.nativeElement, this.roundedClass);\n          }\n\n          this.renderer.addClass(this.el.nativeElement, this.flatClass);\n        }\n      }\n\n      if (changes.rounded) {\n        this.renderer.removeClass(this.el.nativeElement, this.roundedClass);\n\n        if (this.rounded) {\n          this.roundedClass = 'btn-rounded';\n          this.renderer.addClass(this.el.nativeElement, this.roundedClass);\n        }\n      }\n\n      if (changes.size) {\n        this.renderer.removeClass(this.el.nativeElement, this.sizeClass);\n\n        if (this.size !== '') {\n          this.sizeClass = 'btn-' + this.size;\n          this.renderer.addClass(this.el.nativeElement, this.sizeClass);\n        }\n      }\n\n      if (changes.block) {\n        this.renderer.removeClass(this.el.nativeElement, this.blockClass);\n\n        if (this.block) {\n          this.blockClass = 'btn-block';\n          this.renderer.addClass(this.el.nativeElement, this.blockClass);\n        }\n      }\n\n      if (changes.floating) {\n        if (!this.floating) {\n          this.renderer.removeClass(this.el.nativeElement, this.floatingClass);\n          this.renderer.addClass(this.el.nativeElement, 'btn');\n        }\n\n        if (this.floating) {\n          this.floatingClass = 'btn-floating';\n          this.renderer.addClass(this.el.nativeElement, this.floatingClass);\n          this.renderer.removeClass(this.el.nativeElement, 'btn');\n        }\n      }\n    }\n\n    initClasses() {\n      if (this.color !== '') {\n        this.renderer.addClass(this.el.nativeElement, this.colorClass);\n      }\n\n      if (this.rounded) {\n        this.renderer.addClass(this.el.nativeElement, this.roundedClass);\n      }\n\n      if (this.gradient) {\n        if (this.color !== '') {\n          this.renderer.removeClass(this.el.nativeElement, this.colorClass);\n        }\n\n        this.renderer.addClass(this.el.nativeElement, this.gradientClass);\n      }\n\n      if (this.outline) {\n        this.renderer.removeClass(this.el.nativeElement, this.colorClass);\n        this.renderer.addClass(this.el.nativeElement, this.outlineClass);\n      }\n\n      if (this.flat) {\n        if (this.color) {\n          this.renderer.removeClass(this.el.nativeElement, this.colorClass);\n        }\n\n        if (this.gradient) {\n          this.renderer.removeClass(this.el.nativeElement, this.gradientClass);\n        }\n\n        if (this.outline) {\n          this.renderer.removeClass(this.el.nativeElement, this.outlineClass);\n        }\n\n        if (this.rounded) {\n          this.renderer.removeClass(this.el.nativeElement, this.roundedClass);\n        }\n\n        this.renderer.addClass(this.el.nativeElement, this.flatClass);\n      }\n\n      if (this.size) {\n        this.renderer.addClass(this.el.nativeElement, this.sizeClass);\n      }\n\n      if (this.block) {\n        this.renderer.addClass(this.el.nativeElement, this.blockClass);\n      }\n\n      if (this.floating) {\n        this.renderer.addClass(this.el.nativeElement, this.floatingClass);\n        this.renderer.removeClass(this.el.nativeElement, 'btn');\n      }\n    }\n\n  }\n\n  MdbBtnDirective.ɵfac = function MdbBtnDirective_Factory(t) {\n    return new (t || MdbBtnDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  MdbBtnDirective.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdbBtnDirective,\n    selectors: [[\"\", \"mdbBtn\", \"\"]],\n    inputs: {\n      color: \"color\",\n      rounded: \"rounded\",\n      gradient: \"gradient\",\n      outline: \"outline\",\n      flat: \"flat\",\n      size: \"size\",\n      block: \"block\",\n      floating: \"floating\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    attrs: _c1,\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MdbBtnDirective_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    styles: [\".btn{box-shadow:0 2px 5px #00000029,0 2px 10px #0000001f;padding:.84rem 2.14rem;font-size:.81rem;transition:all .2s ease-in-out;margin:.375rem;border:0;border-radius:.125rem;cursor:pointer;text-transform:uppercase;white-space:normal;word-wrap:break-word;color:inherit}.btn:hover,.btn:active,.btn:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;outline:0}.btn:not([disabled]):not(.disabled):active,.btn:not([disabled]):not(.disabled).active{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn .fas,.btn .fab,.btn .far{position:relative;font-size:.9rem}.btn .fas.right,.btn .fab.right,.btn .far.right{margin-left:.3rem}.btn .fas.left,.btn .fab.left,.btn .far.left{margin-right:.3rem}.btn.btn-lg .fas,.btn.btn-lg .fab,.btn.btn-lg .far{font-size:1rem}.btn.btn-md .fas,.btn.btn-md .fab,.btn.btn-md .far{font-size:.8rem}.btn.btn-sm .fas,.btn.btn-sm .fab,.btn.btn-sm .far{font-size:.7rem}.btn.btn-tb{padding:.3rem 1rem}.btn.disabled:active,.btn.disabled:focus,.btn.disabled:hover,.btn:disabled:active,.btn:disabled:focus,.btn:disabled:hover{box-shadow:0 2px 5px #00000029,0 2px 10px #0000001f}.btn.btn-block{margin:inherit}.btn.btn-link{color:#000;box-shadow:none;background-color:transparent}.btn.btn-link:active,.btn.btn-link:focus,.btn.btn-link:hover{box-shadow:none!important;background-color:transparent}.btn[class*=btn-outline-]{padding-top:.7rem;padding-bottom:.7rem}.btn[class*=btn-outline-].btn-lg{padding-top:.88rem;padding-bottom:.88rem}.btn[class*=btn-outline-].btn-md{padding-top:.58rem;padding-bottom:.58rem}.btn[class*=btn-outline-].btn-sm{padding-top:.38rem;padding-bottom:.38rem}.btn-group .btn{margin:0}.btn .fa-lg,.btn-floating .fa-lg{font-size:1.33333em!important}.btn .fa-xs,.btn-floating .fa-xs{font-size:.75em!important}.btn .fa-sm,.btn-floating .fa-sm{font-size:.875em!important}.btn .fa-1x,.btn-floating .fa-1x{font-size:1em!important}.btn .fa-2x,.btn-floating .fa-2x{font-size:2em!important}.btn .fa-3x,.btn-floating .fa-3x{font-size:3em!important}.btn .fa-4x,.btn-floating .fa-4x{font-size:4em!important}.btn .fa-5x,.btn-floating .fa-5x{font-size:5em!important}.btn .fa-6x,.btn-floating .fa-6x{font-size:6em!important}.btn .fa-7x,.btn-floating .fa-7x{font-size:7em!important}.btn .fa-8x,.btn-floating .fa-8x{font-size:8em!important}.btn .fa-9x,.btn-floating .fa-9x{font-size:9em!important}.btn .fa-10x,.btn-floating .fa-10x{font-size:10em!important}.btn-primary{background-color:#4285f4!important;color:#fff}.btn-primary:hover{background-color:#5a95f5;color:#fff}.btn-primary:focus,.btn-primary.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-primary:focus,.btn-primary:active,.btn-primary.active{background-color:#0b51c5}.btn-primary.dropdown-toggle{background-color:#4285f4!important}.btn-primary.dropdown-toggle:hover,.btn-primary.dropdown-toggle:focus{background-color:#5a95f5!important}.btn-primary:not([disabled]):not(.disabled):active,.btn-primary:not([disabled]):not(.disabled).active,.show>.btn-primary.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#0b51c5!important}.btn-primary:not([disabled]):not(.disabled):active:focus,.btn-primary:not([disabled]):not(.disabled).active:focus,.show>.btn-primary.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.primary-ic{color:#4285f4!important}.primary-ic:hover,.primary-ic:focus{color:#4285f4}table.table a.btn.btn-primary{color:#fff}.btn-outline-primary{border:2px solid #4285f4!important;background-color:transparent!important;color:#4285f4!important}.btn-outline-primary:hover,.btn-outline-primary:focus,.btn-outline-primary:active,.btn-outline-primary:active:focus,.btn-outline-primary.active{border-color:#4285f4!important;background-color:transparent!important;color:#4285f4!important}.btn-outline-primary:not([disabled]):not(.disabled):active,.btn-outline-primary:not([disabled]):not(.disabled).active,.show>.btn-outline-primary.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#4285f4!important}.btn-outline-primary:not([disabled]):not(.disabled):active:focus,.btn-outline-primary:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-primary.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-danger{background-color:#ff3547!important;color:#fff}.btn-danger:hover{background-color:#ff4f5e;color:#fff}.btn-danger:focus,.btn-danger.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-danger:focus,.btn-danger:active,.btn-danger.active{background-color:#ce0012}.btn-danger.dropdown-toggle{background-color:#ff3547!important}.btn-danger.dropdown-toggle:hover,.btn-danger.dropdown-toggle:focus{background-color:#ff4f5e!important}.btn-danger:not([disabled]):not(.disabled):active,.btn-danger:not([disabled]):not(.disabled).active,.show>.btn-danger.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#ce0012!important}.btn-danger:not([disabled]):not(.disabled):active:focus,.btn-danger:not([disabled]):not(.disabled).active:focus,.show>.btn-danger.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.danger-ic{color:#ff3547!important}.danger-ic:hover,.danger-ic:focus{color:#ff3547}table.table a.btn.btn-danger{color:#fff}.btn-outline-danger{border:2px solid #ff3547!important;background-color:transparent!important;color:#ff3547!important}.btn-outline-danger:hover,.btn-outline-danger:focus,.btn-outline-danger:active,.btn-outline-danger:active:focus,.btn-outline-danger.active{border-color:#ff3547!important;background-color:transparent!important;color:#ff3547!important}.btn-outline-danger:not([disabled]):not(.disabled):active,.btn-outline-danger:not([disabled]):not(.disabled).active,.show>.btn-outline-danger.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#ff3547!important}.btn-outline-danger:not([disabled]):not(.disabled):active:focus,.btn-outline-danger:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-danger.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-warning{background-color:#fb3!important;color:#fff}.btn-warning:hover{background-color:#ffc44d;color:#fff}.btn-warning:focus,.btn-warning.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-warning:focus,.btn-warning:active,.btn-warning.active{background-color:#c80}.btn-warning.dropdown-toggle{background-color:#fb3!important}.btn-warning.dropdown-toggle:hover,.btn-warning.dropdown-toggle:focus{background-color:#ffc44d!important}.btn-warning:not([disabled]):not(.disabled):active,.btn-warning:not([disabled]):not(.disabled).active,.show>.btn-warning.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#c80!important}.btn-warning:not([disabled]):not(.disabled):active:focus,.btn-warning:not([disabled]):not(.disabled).active:focus,.show>.btn-warning.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.warning-ic{color:#fb3!important}.warning-ic:hover,.warning-ic:focus{color:#fb3}table.table a.btn.btn-warning{color:#fff}.btn-outline-warning{border:2px solid #ffbb33!important;background-color:transparent!important;color:#fb3!important}.btn-outline-warning:hover,.btn-outline-warning:focus,.btn-outline-warning:active,.btn-outline-warning:active:focus,.btn-outline-warning.active{border-color:#fb3!important;background-color:transparent!important;color:#fb3!important}.btn-outline-warning:not([disabled]):not(.disabled):active,.btn-outline-warning:not([disabled]):not(.disabled).active,.show>.btn-outline-warning.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#fb3!important}.btn-outline-warning:not([disabled]):not(.disabled):active:focus,.btn-outline-warning:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-warning.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-success{background-color:#00c851!important;color:#fff}.btn-success:hover{background-color:#00e25b;color:#fff}.btn-success:focus,.btn-success.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-success:focus,.btn-success:active,.btn-success.active{background-color:#006228}.btn-success.dropdown-toggle{background-color:#00c851!important}.btn-success.dropdown-toggle:hover,.btn-success.dropdown-toggle:focus{background-color:#00e25b!important}.btn-success:not([disabled]):not(.disabled):active,.btn-success:not([disabled]):not(.disabled).active,.show>.btn-success.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#006228!important}.btn-success:not([disabled]):not(.disabled):active:focus,.btn-success:not([disabled]):not(.disabled).active:focus,.show>.btn-success.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.success-ic{color:#00c851!important}.success-ic:hover,.success-ic:focus{color:#00c851}table.table a.btn.btn-success{color:#fff}.btn-outline-success{border:2px solid #00c851!important;background-color:transparent!important;color:#00c851!important}.btn-outline-success:hover,.btn-outline-success:focus,.btn-outline-success:active,.btn-outline-success:active:focus,.btn-outline-success.active{border-color:#00c851!important;background-color:transparent!important;color:#00c851!important}.btn-outline-success:not([disabled]):not(.disabled):active,.btn-outline-success:not([disabled]):not(.disabled).active,.show>.btn-outline-success.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#00c851!important}.btn-outline-success:not([disabled]):not(.disabled):active:focus,.btn-outline-success:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-success.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-info{background-color:#33b5e5!important;color:#fff}.btn-info:hover{background-color:#4abde8;color:#fff}.btn-info:focus,.btn-info.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-info:focus,.btn-info:active,.btn-info.active{background-color:#14799e}.btn-info.dropdown-toggle{background-color:#33b5e5!important}.btn-info.dropdown-toggle:hover,.btn-info.dropdown-toggle:focus{background-color:#4abde8!important}.btn-info:not([disabled]):not(.disabled):active,.btn-info:not([disabled]):not(.disabled).active,.show>.btn-info.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#14799e!important}.btn-info:not([disabled]):not(.disabled):active:focus,.btn-info:not([disabled]):not(.disabled).active:focus,.show>.btn-info.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.info-ic{color:#33b5e5!important}.info-ic:hover,.info-ic:focus{color:#33b5e5}table.table a.btn.btn-info{color:#fff}.btn-outline-info{border:2px solid #33b5e5!important;background-color:transparent!important;color:#33b5e5!important}.btn-outline-info:hover,.btn-outline-info:focus,.btn-outline-info:active,.btn-outline-info:active:focus,.btn-outline-info.active{border-color:#33b5e5!important;background-color:transparent!important;color:#33b5e5!important}.btn-outline-info:not([disabled]):not(.disabled):active,.btn-outline-info:not([disabled]):not(.disabled).active,.show>.btn-outline-info.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#33b5e5!important}.btn-outline-info:not([disabled]):not(.disabled):active:focus,.btn-outline-info:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-info.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-default{background-color:#2bbbad!important;color:#fff}.btn-default:hover{background-color:#30cfc0;color:#fff}.btn-default:focus,.btn-default.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-default:focus,.btn-default:active,.btn-default.active{background-color:#186860}.btn-default.dropdown-toggle{background-color:#2bbbad!important}.btn-default.dropdown-toggle:hover,.btn-default.dropdown-toggle:focus{background-color:#30cfc0!important}.btn-default:not([disabled]):not(.disabled):active,.btn-default:not([disabled]):not(.disabled).active,.show>.btn-default.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#186860!important}.btn-default:not([disabled]):not(.disabled):active:focus,.btn-default:not([disabled]):not(.disabled).active:focus,.show>.btn-default.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.default-ic{color:#2bbbad!important}.default-ic:hover,.default-ic:focus{color:#2bbbad}table.table a.btn.btn-default{color:#fff}.btn-outline-default{border:2px solid #2bbbad!important;background-color:transparent!important;color:#2bbbad!important}.btn-outline-default:hover,.btn-outline-default:focus,.btn-outline-default:active,.btn-outline-default:active:focus,.btn-outline-default.active{border-color:#2bbbad!important;background-color:transparent!important;color:#2bbbad!important}.btn-outline-default:not([disabled]):not(.disabled):active,.btn-outline-default:not([disabled]):not(.disabled).active,.show>.btn-outline-default.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#2bbbad!important}.btn-outline-default:not([disabled]):not(.disabled):active:focus,.btn-outline-default:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-default.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-secondary{background-color:#a6c!important;color:#fff}.btn-secondary:hover{background-color:#b579d2;color:#fff}.btn-secondary:focus,.btn-secondary.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-secondary:focus,.btn-secondary:active,.btn-secondary.active{background-color:#739}.btn-secondary.dropdown-toggle{background-color:#a6c!important}.btn-secondary.dropdown-toggle:hover,.btn-secondary.dropdown-toggle:focus{background-color:#b579d2!important}.btn-secondary:not([disabled]):not(.disabled):active,.btn-secondary:not([disabled]):not(.disabled).active,.show>.btn-secondary.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#739!important}.btn-secondary:not([disabled]):not(.disabled):active:focus,.btn-secondary:not([disabled]):not(.disabled).active:focus,.show>.btn-secondary.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.secondary-ic{color:#a6c!important}.secondary-ic:hover,.secondary-ic:focus{color:#a6c}table.table a.btn.btn-secondary{color:#fff}.btn-outline-secondary{border:2px solid #aa66cc!important;background-color:transparent!important;color:#a6c!important}.btn-outline-secondary:hover,.btn-outline-secondary:focus,.btn-outline-secondary:active,.btn-outline-secondary:active:focus,.btn-outline-secondary.active{border-color:#a6c!important;background-color:transparent!important;color:#a6c!important}.btn-outline-secondary:not([disabled]):not(.disabled):active,.btn-outline-secondary:not([disabled]):not(.disabled).active,.show>.btn-outline-secondary.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#a6c!important}.btn-outline-secondary:not([disabled]):not(.disabled):active:focus,.btn-outline-secondary:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-secondary.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-elegant{background-color:#2e2e2e!important;color:#fff}.btn-elegant:hover{background-color:#3b3b3b;color:#fff}.btn-elegant:focus,.btn-elegant.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-elegant:focus,.btn-elegant:active,.btn-elegant.active{background-color:#000}.btn-elegant.dropdown-toggle{background-color:#2e2e2e!important}.btn-elegant.dropdown-toggle:hover,.btn-elegant.dropdown-toggle:focus{background-color:#3b3b3b!important}.btn-elegant:not([disabled]):not(.disabled):active,.btn-elegant:not([disabled]):not(.disabled).active,.show>.btn-elegant.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#000!important}.btn-elegant:not([disabled]):not(.disabled):active:focus,.btn-elegant:not([disabled]):not(.disabled).active:focus,.show>.btn-elegant.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.elegant-ic{color:#2e2e2e!important}.elegant-ic:hover,.elegant-ic:focus{color:#2e2e2e}table.table a.btn.btn-elegant{color:#fff}.btn-outline-elegant{border:2px solid #2e2e2e!important;background-color:transparent!important;color:#2e2e2e!important}.btn-outline-elegant:hover,.btn-outline-elegant:focus,.btn-outline-elegant:active,.btn-outline-elegant:active:focus,.btn-outline-elegant.active{border-color:#2e2e2e!important;background-color:transparent!important;color:#2e2e2e!important}.btn-outline-elegant:not([disabled]):not(.disabled):active,.btn-outline-elegant:not([disabled]):not(.disabled).active,.show>.btn-outline-elegant.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#2e2e2e!important}.btn-outline-elegant:not([disabled]):not(.disabled):active:focus,.btn-outline-elegant:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-elegant.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-unique{background-color:#880e4f!important;color:#fff}.btn-unique:hover{background-color:#9f105c;color:#fff}.btn-unique:focus,.btn-unique.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-unique:focus,.btn-unique:active,.btn-unique.active{background-color:#2c0419}.btn-unique.dropdown-toggle{background-color:#880e4f!important}.btn-unique.dropdown-toggle:hover,.btn-unique.dropdown-toggle:focus{background-color:#9f105c!important}.btn-unique:not([disabled]):not(.disabled):active,.btn-unique:not([disabled]):not(.disabled).active,.show>.btn-unique.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#2c0419!important}.btn-unique:not([disabled]):not(.disabled):active:focus,.btn-unique:not([disabled]):not(.disabled).active:focus,.show>.btn-unique.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.unique-ic{color:#880e4f!important}.unique-ic:hover,.unique-ic:focus{color:#880e4f}table.table a.btn.btn-unique{color:#fff}.btn-outline-unique{border:2px solid #880e4f!important;background-color:transparent!important;color:#880e4f!important}.btn-outline-unique:hover,.btn-outline-unique:focus,.btn-outline-unique:active,.btn-outline-unique:active:focus,.btn-outline-unique.active{border-color:#880e4f!important;background-color:transparent!important;color:#880e4f!important}.btn-outline-unique:not([disabled]):not(.disabled):active,.btn-outline-unique:not([disabled]):not(.disabled).active,.show>.btn-outline-unique.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#880e4f!important}.btn-outline-unique:not([disabled]):not(.disabled):active:focus,.btn-outline-unique:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-unique.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-dark-green{background-color:#388e3c!important;color:#fff}.btn-dark-green:hover{background-color:#3fa044;color:#fff}.btn-dark-green:focus,.btn-dark-green.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-dark-green:focus,.btn-dark-green:active,.btn-dark-green.active{background-color:#1b451d}.btn-dark-green.dropdown-toggle{background-color:#388e3c!important}.btn-dark-green.dropdown-toggle:hover,.btn-dark-green.dropdown-toggle:focus{background-color:#3fa044!important}.btn-dark-green:not([disabled]):not(.disabled):active,.btn-dark-green:not([disabled]):not(.disabled).active,.show>.btn-dark-green.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#1b451d!important}.btn-dark-green:not([disabled]):not(.disabled):active:focus,.btn-dark-green:not([disabled]):not(.disabled).active:focus,.show>.btn-dark-green.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.dark-green-ic{color:#388e3c!important}.dark-green-ic:hover,.dark-green-ic:focus{color:#388e3c}table.table a.btn.btn-dark-green{color:#fff}.btn-outline-dark-green{border:2px solid #388e3c!important;background-color:transparent!important;color:#388e3c!important}.btn-outline-dark-green:hover,.btn-outline-dark-green:focus,.btn-outline-dark-green:active,.btn-outline-dark-green:active:focus,.btn-outline-dark-green.active{border-color:#388e3c!important;background-color:transparent!important;color:#388e3c!important}.btn-outline-dark-green:not([disabled]):not(.disabled):active,.btn-outline-dark-green:not([disabled]):not(.disabled).active,.show>.btn-outline-dark-green.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#388e3c!important}.btn-outline-dark-green:not([disabled]):not(.disabled):active:focus,.btn-outline-dark-green:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-dark-green.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-mdb-color{background-color:#59698d!important;color:#fff}.btn-mdb-color:hover{background-color:#63759d;color:#fff}.btn-mdb-color:focus,.btn-mdb-color.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-mdb-color:focus,.btn-mdb-color:active,.btn-mdb-color.active{background-color:#323a4e}.btn-mdb-color.dropdown-toggle{background-color:#59698d!important}.btn-mdb-color.dropdown-toggle:hover,.btn-mdb-color.dropdown-toggle:focus{background-color:#63759d!important}.btn-mdb-color:not([disabled]):not(.disabled):active,.btn-mdb-color:not([disabled]):not(.disabled).active,.show>.btn-mdb-color.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#323a4e!important}.btn-mdb-color:not([disabled]):not(.disabled):active:focus,.btn-mdb-color:not([disabled]):not(.disabled).active:focus,.show>.btn-mdb-color.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.mdb-color-ic{color:#59698d!important}.mdb-color-ic:hover,.mdb-color-ic:focus{color:#59698d}table.table a.btn.btn-mdb-color{color:#fff}.btn-outline-mdb-color{border:2px solid #59698d!important;background-color:transparent!important;color:#59698d!important}.btn-outline-mdb-color:hover,.btn-outline-mdb-color:focus,.btn-outline-mdb-color:active,.btn-outline-mdb-color:active:focus,.btn-outline-mdb-color.active{border-color:#59698d!important;background-color:transparent!important;color:#59698d!important}.btn-outline-mdb-color:not([disabled]):not(.disabled):active,.btn-outline-mdb-color:not([disabled]):not(.disabled).active,.show>.btn-outline-mdb-color.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#59698d!important}.btn-outline-mdb-color:not([disabled]):not(.disabled):active:focus,.btn-outline-mdb-color:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-mdb-color.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-red{background-color:#d32f2f!important;color:#fff}.btn-red:hover{background-color:#d74444;color:#fff}.btn-red:focus,.btn-red.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-red:focus,.btn-red:active,.btn-red.active{background-color:#811b1b}.btn-red.dropdown-toggle{background-color:#d32f2f!important}.btn-red.dropdown-toggle:hover,.btn-red.dropdown-toggle:focus{background-color:#d74444!important}.btn-red:not([disabled]):not(.disabled):active,.btn-red:not([disabled]):not(.disabled).active,.show>.btn-red.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#811b1b!important}.btn-red:not([disabled]):not(.disabled):active:focus,.btn-red:not([disabled]):not(.disabled).active:focus,.show>.btn-red.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.red-ic{color:#d32f2f!important}.red-ic:hover,.red-ic:focus{color:#d32f2f}table.table a.btn.btn-red{color:#fff}.btn-outline-red{border:2px solid #d32f2f!important;background-color:transparent!important;color:#d32f2f!important}.btn-outline-red:hover,.btn-outline-red:focus,.btn-outline-red:active,.btn-outline-red:active:focus,.btn-outline-red.active{border-color:#d32f2f!important;background-color:transparent!important;color:#d32f2f!important}.btn-outline-red:not([disabled]):not(.disabled):active,.btn-outline-red:not([disabled]):not(.disabled).active,.show>.btn-outline-red.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#d32f2f!important}.btn-outline-red:not([disabled]):not(.disabled):active:focus,.btn-outline-red:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-red.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-pink{background-color:#ec407a!important;color:#fff}.btn-pink:hover{background-color:#ee578a;color:#fff}.btn-pink:focus,.btn-pink.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-pink:focus,.btn-pink:active,.btn-pink.active{background-color:#b41249}.btn-pink.dropdown-toggle{background-color:#ec407a!important}.btn-pink.dropdown-toggle:hover,.btn-pink.dropdown-toggle:focus{background-color:#ee578a!important}.btn-pink:not([disabled]):not(.disabled):active,.btn-pink:not([disabled]):not(.disabled).active,.show>.btn-pink.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#b41249!important}.btn-pink:not([disabled]):not(.disabled):active:focus,.btn-pink:not([disabled]):not(.disabled).active:focus,.show>.btn-pink.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.pink-ic{color:#ec407a!important}.pink-ic:hover,.pink-ic:focus{color:#ec407a}table.table a.btn.btn-pink{color:#fff}.btn-outline-pink{border:2px solid #ec407a!important;background-color:transparent!important;color:#ec407a!important}.btn-outline-pink:hover,.btn-outline-pink:focus,.btn-outline-pink:active,.btn-outline-pink:active:focus,.btn-outline-pink.active{border-color:#ec407a!important;background-color:transparent!important;color:#ec407a!important}.btn-outline-pink:not([disabled]):not(.disabled):active,.btn-outline-pink:not([disabled]):not(.disabled).active,.show>.btn-outline-pink.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#ec407a!important}.btn-outline-pink:not([disabled]):not(.disabled):active:focus,.btn-outline-pink:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-pink.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-purple{background-color:#8e24aa!important;color:#fff}.btn-purple:hover{background-color:#a028bf;color:#fff}.btn-purple:focus,.btn-purple.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-purple:focus,.btn-purple:active,.btn-purple.active{background-color:#481256}.btn-purple.dropdown-toggle{background-color:#8e24aa!important}.btn-purple.dropdown-toggle:hover,.btn-purple.dropdown-toggle:focus{background-color:#a028bf!important}.btn-purple:not([disabled]):not(.disabled):active,.btn-purple:not([disabled]):not(.disabled).active,.show>.btn-purple.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#481256!important}.btn-purple:not([disabled]):not(.disabled):active:focus,.btn-purple:not([disabled]):not(.disabled).active:focus,.show>.btn-purple.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.purple-ic{color:#8e24aa!important}.purple-ic:hover,.purple-ic:focus{color:#8e24aa}table.table a.btn.btn-purple{color:#fff}.btn-outline-purple{border:2px solid #8e24aa!important;background-color:transparent!important;color:#8e24aa!important}.btn-outline-purple:hover,.btn-outline-purple:focus,.btn-outline-purple:active,.btn-outline-purple:active:focus,.btn-outline-purple.active{border-color:#8e24aa!important;background-color:transparent!important;color:#8e24aa!important}.btn-outline-purple:not([disabled]):not(.disabled):active,.btn-outline-purple:not([disabled]):not(.disabled).active,.show>.btn-outline-purple.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#8e24aa!important}.btn-outline-purple:not([disabled]):not(.disabled):active:focus,.btn-outline-purple:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-purple.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-deep-purple{background-color:#512da8!important;color:#fff}.btn-deep-purple:hover{background-color:#5b32bc;color:#fff}.btn-deep-purple:focus,.btn-deep-purple.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-deep-purple:focus,.btn-deep-purple:active,.btn-deep-purple.active{background-color:#2a1758}.btn-deep-purple.dropdown-toggle{background-color:#512da8!important}.btn-deep-purple.dropdown-toggle:hover,.btn-deep-purple.dropdown-toggle:focus{background-color:#5b32bc!important}.btn-deep-purple:not([disabled]):not(.disabled):active,.btn-deep-purple:not([disabled]):not(.disabled).active,.show>.btn-deep-purple.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#2a1758!important}.btn-deep-purple:not([disabled]):not(.disabled):active:focus,.btn-deep-purple:not([disabled]):not(.disabled).active:focus,.show>.btn-deep-purple.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.deep-purple-ic{color:#512da8!important}.deep-purple-ic:hover,.deep-purple-ic:focus{color:#512da8}table.table a.btn.btn-deep-purple{color:#fff}.btn-outline-deep-purple{border:2px solid #512da8!important;background-color:transparent!important;color:#512da8!important}.btn-outline-deep-purple:hover,.btn-outline-deep-purple:focus,.btn-outline-deep-purple:active,.btn-outline-deep-purple:active:focus,.btn-outline-deep-purple.active{border-color:#512da8!important;background-color:transparent!important;color:#512da8!important}.btn-outline-deep-purple:not([disabled]):not(.disabled):active,.btn-outline-deep-purple:not([disabled]):not(.disabled).active,.show>.btn-outline-deep-purple.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#512da8!important}.btn-outline-deep-purple:not([disabled]):not(.disabled):active:focus,.btn-outline-deep-purple:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-deep-purple.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-indigo{background-color:#3f51b5!important;color:#fff}.btn-indigo:hover{background-color:#4d5ec1;color:#fff}.btn-indigo:focus,.btn-indigo.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-indigo:focus,.btn-indigo:active,.btn-indigo.active{background-color:#252f69}.btn-indigo.dropdown-toggle{background-color:#3f51b5!important}.btn-indigo.dropdown-toggle:hover,.btn-indigo.dropdown-toggle:focus{background-color:#4d5ec1!important}.btn-indigo:not([disabled]):not(.disabled):active,.btn-indigo:not([disabled]):not(.disabled).active,.show>.btn-indigo.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#252f69!important}.btn-indigo:not([disabled]):not(.disabled):active:focus,.btn-indigo:not([disabled]):not(.disabled).active:focus,.show>.btn-indigo.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.indigo-ic{color:#3f51b5!important}.indigo-ic:hover,.indigo-ic:focus{color:#3f51b5}table.table a.btn.btn-indigo{color:#fff}.btn-outline-indigo{border:2px solid #3f51b5!important;background-color:transparent!important;color:#3f51b5!important}.btn-outline-indigo:hover,.btn-outline-indigo:focus,.btn-outline-indigo:active,.btn-outline-indigo:active:focus,.btn-outline-indigo.active{border-color:#3f51b5!important;background-color:transparent!important;color:#3f51b5!important}.btn-outline-indigo:not([disabled]):not(.disabled):active,.btn-outline-indigo:not([disabled]):not(.disabled).active,.show>.btn-outline-indigo.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#3f51b5!important}.btn-outline-indigo:not([disabled]):not(.disabled):active:focus,.btn-outline-indigo:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-indigo.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-blue{background-color:#1976d2!important;color:#fff}.btn-blue:hover{background-color:#2083e4;color:#fff}.btn-blue:focus,.btn-blue.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-blue:focus,.btn-blue:active,.btn-blue.active{background-color:#0e4377}.btn-blue.dropdown-toggle{background-color:#1976d2!important}.btn-blue.dropdown-toggle:hover,.btn-blue.dropdown-toggle:focus{background-color:#2083e4!important}.btn-blue:not([disabled]):not(.disabled):active,.btn-blue:not([disabled]):not(.disabled).active,.show>.btn-blue.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#0e4377!important}.btn-blue:not([disabled]):not(.disabled):active:focus,.btn-blue:not([disabled]):not(.disabled).active:focus,.show>.btn-blue.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.blue-ic{color:#1976d2!important}.blue-ic:hover,.blue-ic:focus{color:#1976d2}table.table a.btn.btn-blue{color:#fff}.btn-outline-blue{border:2px solid #1976d2!important;background-color:transparent!important;color:#1976d2!important}.btn-outline-blue:hover,.btn-outline-blue:focus,.btn-outline-blue:active,.btn-outline-blue:active:focus,.btn-outline-blue.active{border-color:#1976d2!important;background-color:transparent!important;color:#1976d2!important}.btn-outline-blue:not([disabled]):not(.disabled):active,.btn-outline-blue:not([disabled]):not(.disabled).active,.show>.btn-outline-blue.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#1976d2!important}.btn-outline-blue:not([disabled]):not(.disabled):active:focus,.btn-outline-blue:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-blue.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-light-blue{background-color:#82b1ff!important;color:#fff}.btn-light-blue:hover{background-color:#9cc1ff;color:#fff}.btn-light-blue:focus,.btn-light-blue.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-light-blue:focus,.btn-light-blue:active,.btn-light-blue.active{background-color:#1c71ff}.btn-light-blue.dropdown-toggle{background-color:#82b1ff!important}.btn-light-blue.dropdown-toggle:hover,.btn-light-blue.dropdown-toggle:focus{background-color:#9cc1ff!important}.btn-light-blue:not([disabled]):not(.disabled):active,.btn-light-blue:not([disabled]):not(.disabled).active,.show>.btn-light-blue.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#1c71ff!important}.btn-light-blue:not([disabled]):not(.disabled):active:focus,.btn-light-blue:not([disabled]):not(.disabled).active:focus,.show>.btn-light-blue.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.light-blue-ic{color:#82b1ff!important}.light-blue-ic:hover,.light-blue-ic:focus{color:#82b1ff}table.table a.btn.btn-light-blue{color:#fff}.btn-outline-light-blue{border:2px solid #82b1ff!important;background-color:transparent!important;color:#82b1ff!important}.btn-outline-light-blue:hover,.btn-outline-light-blue:focus,.btn-outline-light-blue:active,.btn-outline-light-blue:active:focus,.btn-outline-light-blue.active{border-color:#82b1ff!important;background-color:transparent!important;color:#82b1ff!important}.btn-outline-light-blue:not([disabled]):not(.disabled):active,.btn-outline-light-blue:not([disabled]):not(.disabled).active,.show>.btn-outline-light-blue.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#82b1ff!important}.btn-outline-light-blue:not([disabled]):not(.disabled):active:focus,.btn-outline-light-blue:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-light-blue.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-cyan{background-color:#00bcd4!important;color:#fff}.btn-cyan:hover{background-color:#00d3ee;color:#fff}.btn-cyan:focus,.btn-cyan.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-cyan:focus,.btn-cyan:active,.btn-cyan.active{background-color:#00626e}.btn-cyan.dropdown-toggle{background-color:#00bcd4!important}.btn-cyan.dropdown-toggle:hover,.btn-cyan.dropdown-toggle:focus{background-color:#00d3ee!important}.btn-cyan:not([disabled]):not(.disabled):active,.btn-cyan:not([disabled]):not(.disabled).active,.show>.btn-cyan.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#00626e!important}.btn-cyan:not([disabled]):not(.disabled):active:focus,.btn-cyan:not([disabled]):not(.disabled).active:focus,.show>.btn-cyan.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.cyan-ic{color:#00bcd4!important}.cyan-ic:hover,.cyan-ic:focus{color:#00bcd4}table.table a.btn.btn-cyan{color:#fff}.btn-outline-cyan{border:2px solid #00bcd4!important;background-color:transparent!important;color:#00bcd4!important}.btn-outline-cyan:hover,.btn-outline-cyan:focus,.btn-outline-cyan:active,.btn-outline-cyan:active:focus,.btn-outline-cyan.active{border-color:#00bcd4!important;background-color:transparent!important;color:#00bcd4!important}.btn-outline-cyan:not([disabled]):not(.disabled):active,.btn-outline-cyan:not([disabled]):not(.disabled).active,.show>.btn-outline-cyan.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#00bcd4!important}.btn-outline-cyan:not([disabled]):not(.disabled):active:focus,.btn-outline-cyan:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-cyan.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-teal{background-color:#00796b!important;color:#fff}.btn-teal:hover{background-color:#009382;color:#fff}.btn-teal:focus,.btn-teal.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-teal:focus,.btn-teal:active,.btn-teal.active{background-color:#001311}.btn-teal.dropdown-toggle{background-color:#00796b!important}.btn-teal.dropdown-toggle:hover,.btn-teal.dropdown-toggle:focus{background-color:#009382!important}.btn-teal:not([disabled]):not(.disabled):active,.btn-teal:not([disabled]):not(.disabled).active,.show>.btn-teal.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#001311!important}.btn-teal:not([disabled]):not(.disabled):active:focus,.btn-teal:not([disabled]):not(.disabled).active:focus,.show>.btn-teal.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.teal-ic{color:#00796b!important}.teal-ic:hover,.teal-ic:focus{color:#00796b}table.table a.btn.btn-teal{color:#fff}.btn-outline-teal{border:2px solid #00796b!important;background-color:transparent!important;color:#00796b!important}.btn-outline-teal:hover,.btn-outline-teal:focus,.btn-outline-teal:active,.btn-outline-teal:active:focus,.btn-outline-teal.active{border-color:#00796b!important;background-color:transparent!important;color:#00796b!important}.btn-outline-teal:not([disabled]):not(.disabled):active,.btn-outline-teal:not([disabled]):not(.disabled).active,.show>.btn-outline-teal.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#00796b!important}.btn-outline-teal:not([disabled]):not(.disabled):active:focus,.btn-outline-teal:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-teal.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-green{background-color:#388e3c!important;color:#fff}.btn-green:hover{background-color:#3fa044;color:#fff}.btn-green:focus,.btn-green.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-green:focus,.btn-green:active,.btn-green.active{background-color:#1b451d}.btn-green.dropdown-toggle{background-color:#388e3c!important}.btn-green.dropdown-toggle:hover,.btn-green.dropdown-toggle:focus{background-color:#3fa044!important}.btn-green:not([disabled]):not(.disabled):active,.btn-green:not([disabled]):not(.disabled).active,.show>.btn-green.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#1b451d!important}.btn-green:not([disabled]):not(.disabled):active:focus,.btn-green:not([disabled]):not(.disabled).active:focus,.show>.btn-green.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.green-ic{color:#388e3c!important}.green-ic:hover,.green-ic:focus{color:#388e3c}table.table a.btn.btn-green{color:#fff}.btn-outline-green{border:2px solid #388e3c!important;background-color:transparent!important;color:#388e3c!important}.btn-outline-green:hover,.btn-outline-green:focus,.btn-outline-green:active,.btn-outline-green:active:focus,.btn-outline-green.active{border-color:#388e3c!important;background-color:transparent!important;color:#388e3c!important}.btn-outline-green:not([disabled]):not(.disabled):active,.btn-outline-green:not([disabled]):not(.disabled).active,.show>.btn-outline-green.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#388e3c!important}.btn-outline-green:not([disabled]):not(.disabled):active:focus,.btn-outline-green:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-green.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-light-green{background-color:#8bc34a!important;color:#fff}.btn-light-green:hover{background-color:#97c95d;color:#fff}.btn-light-green:focus,.btn-light-green.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-light-green:focus,.btn-light-green:active,.btn-light-green.active{background-color:#577d2a}.btn-light-green.dropdown-toggle{background-color:#8bc34a!important}.btn-light-green.dropdown-toggle:hover,.btn-light-green.dropdown-toggle:focus{background-color:#97c95d!important}.btn-light-green:not([disabled]):not(.disabled):active,.btn-light-green:not([disabled]):not(.disabled).active,.show>.btn-light-green.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#577d2a!important}.btn-light-green:not([disabled]):not(.disabled):active:focus,.btn-light-green:not([disabled]):not(.disabled).active:focus,.show>.btn-light-green.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.light-green-ic{color:#8bc34a!important}.light-green-ic:hover,.light-green-ic:focus{color:#8bc34a}table.table a.btn.btn-light-green{color:#fff}.btn-outline-light-green{border:2px solid #8bc34a!important;background-color:transparent!important;color:#8bc34a!important}.btn-outline-light-green:hover,.btn-outline-light-green:focus,.btn-outline-light-green:active,.btn-outline-light-green:active:focus,.btn-outline-light-green.active{border-color:#8bc34a!important;background-color:transparent!important;color:#8bc34a!important}.btn-outline-light-green:not([disabled]):not(.disabled):active,.btn-outline-light-green:not([disabled]):not(.disabled).active,.show>.btn-outline-light-green.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#8bc34a!important}.btn-outline-light-green:not([disabled]):not(.disabled):active:focus,.btn-outline-light-green:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-light-green.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-lime{background-color:#afb42b!important;color:#fff}.btn-lime:hover{background-color:#c3c930;color:#fff}.btn-lime:focus,.btn-lime.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-lime:focus,.btn-lime:active,.btn-lime.active{background-color:#5f6217}.btn-lime.dropdown-toggle{background-color:#afb42b!important}.btn-lime.dropdown-toggle:hover,.btn-lime.dropdown-toggle:focus{background-color:#c3c930!important}.btn-lime:not([disabled]):not(.disabled):active,.btn-lime:not([disabled]):not(.disabled).active,.show>.btn-lime.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#5f6217!important}.btn-lime:not([disabled]):not(.disabled):active:focus,.btn-lime:not([disabled]):not(.disabled).active:focus,.show>.btn-lime.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.lime-ic{color:#afb42b!important}.lime-ic:hover,.lime-ic:focus{color:#afb42b}table.table a.btn.btn-lime{color:#fff}.btn-outline-lime{border:2px solid #afb42b!important;background-color:transparent!important;color:#afb42b!important}.btn-outline-lime:hover,.btn-outline-lime:focus,.btn-outline-lime:active,.btn-outline-lime:active:focus,.btn-outline-lime.active{border-color:#afb42b!important;background-color:transparent!important;color:#afb42b!important}.btn-outline-lime:not([disabled]):not(.disabled):active,.btn-outline-lime:not([disabled]):not(.disabled).active,.show>.btn-outline-lime.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#afb42b!important}.btn-outline-lime:not([disabled]):not(.disabled):active:focus,.btn-outline-lime:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-lime.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-yellow{background-color:#fbc02d!important;color:#fff}.btn-yellow:hover{background-color:#fbc846;color:#fff}.btn-yellow:focus,.btn-yellow.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-yellow:focus,.btn-yellow:active,.btn-yellow.active{background-color:#be8904}.btn-yellow.dropdown-toggle{background-color:#fbc02d!important}.btn-yellow.dropdown-toggle:hover,.btn-yellow.dropdown-toggle:focus{background-color:#fbc846!important}.btn-yellow:not([disabled]):not(.disabled):active,.btn-yellow:not([disabled]):not(.disabled).active,.show>.btn-yellow.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#be8904!important}.btn-yellow:not([disabled]):not(.disabled):active:focus,.btn-yellow:not([disabled]):not(.disabled).active:focus,.show>.btn-yellow.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.yellow-ic{color:#fbc02d!important}.yellow-ic:hover,.yellow-ic:focus{color:#fbc02d}table.table a.btn.btn-yellow{color:#fff}.btn-outline-yellow{border:2px solid #fbc02d!important;background-color:transparent!important;color:#fbc02d!important}.btn-outline-yellow:hover,.btn-outline-yellow:focus,.btn-outline-yellow:active,.btn-outline-yellow:active:focus,.btn-outline-yellow.active{border-color:#fbc02d!important;background-color:transparent!important;color:#fbc02d!important}.btn-outline-yellow:not([disabled]):not(.disabled):active,.btn-outline-yellow:not([disabled]):not(.disabled).active,.show>.btn-outline-yellow.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#fbc02d!important}.btn-outline-yellow:not([disabled]):not(.disabled):active:focus,.btn-outline-yellow:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-yellow.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-amber{background-color:#ffa000!important;color:#fff}.btn-amber:hover{background-color:#ffaa1a;color:#fff}.btn-amber:focus,.btn-amber.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-amber:focus,.btn-amber:active,.btn-amber.active{background-color:#996000}.btn-amber.dropdown-toggle{background-color:#ffa000!important}.btn-amber.dropdown-toggle:hover,.btn-amber.dropdown-toggle:focus{background-color:#ffaa1a!important}.btn-amber:not([disabled]):not(.disabled):active,.btn-amber:not([disabled]):not(.disabled).active,.show>.btn-amber.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#996000!important}.btn-amber:not([disabled]):not(.disabled):active:focus,.btn-amber:not([disabled]):not(.disabled).active:focus,.show>.btn-amber.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.amber-ic{color:#ffa000!important}.amber-ic:hover,.amber-ic:focus{color:#ffa000}table.table a.btn.btn-amber{color:#fff}.btn-outline-amber{border:2px solid #ffa000!important;background-color:transparent!important;color:#ffa000!important}.btn-outline-amber:hover,.btn-outline-amber:focus,.btn-outline-amber:active,.btn-outline-amber:active:focus,.btn-outline-amber.active{border-color:#ffa000!important;background-color:transparent!important;color:#ffa000!important}.btn-outline-amber:not([disabled]):not(.disabled):active,.btn-outline-amber:not([disabled]):not(.disabled).active,.show>.btn-outline-amber.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#ffa000!important}.btn-outline-amber:not([disabled]):not(.disabled):active:focus,.btn-outline-amber:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-amber.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-orange{background-color:#f57c00!important;color:#fff}.btn-orange:hover{background-color:#ff8910;color:#fff}.btn-orange:focus,.btn-orange.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-orange:focus,.btn-orange:active,.btn-orange.active{background-color:#8f4800}.btn-orange.dropdown-toggle{background-color:#f57c00!important}.btn-orange.dropdown-toggle:hover,.btn-orange.dropdown-toggle:focus{background-color:#ff8910!important}.btn-orange:not([disabled]):not(.disabled):active,.btn-orange:not([disabled]):not(.disabled).active,.show>.btn-orange.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#8f4800!important}.btn-orange:not([disabled]):not(.disabled):active:focus,.btn-orange:not([disabled]):not(.disabled).active:focus,.show>.btn-orange.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.orange-ic{color:#f57c00!important}.orange-ic:hover,.orange-ic:focus{color:#f57c00}table.table a.btn.btn-orange{color:#fff}.btn-outline-orange{border:2px solid #f57c00!important;background-color:transparent!important;color:#f57c00!important}.btn-outline-orange:hover,.btn-outline-orange:focus,.btn-outline-orange:active,.btn-outline-orange:active:focus,.btn-outline-orange.active{border-color:#f57c00!important;background-color:transparent!important;color:#f57c00!important}.btn-outline-orange:not([disabled]):not(.disabled):active,.btn-outline-orange:not([disabled]):not(.disabled).active,.show>.btn-outline-orange.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#f57c00!important}.btn-outline-orange:not([disabled]):not(.disabled):active:focus,.btn-outline-orange:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-orange.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-deep-orange{background-color:#ff7043!important;color:#fff}.btn-deep-orange:hover{background-color:#ff835d;color:#fff}.btn-deep-orange:focus,.btn-deep-orange.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-deep-orange:focus,.btn-deep-orange:active,.btn-deep-orange.active{background-color:#dc3500}.btn-deep-orange.dropdown-toggle{background-color:#ff7043!important}.btn-deep-orange.dropdown-toggle:hover,.btn-deep-orange.dropdown-toggle:focus{background-color:#ff835d!important}.btn-deep-orange:not([disabled]):not(.disabled):active,.btn-deep-orange:not([disabled]):not(.disabled).active,.show>.btn-deep-orange.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#dc3500!important}.btn-deep-orange:not([disabled]):not(.disabled):active:focus,.btn-deep-orange:not([disabled]):not(.disabled).active:focus,.show>.btn-deep-orange.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.deep-orange-ic{color:#ff7043!important}.deep-orange-ic:hover,.deep-orange-ic:focus{color:#ff7043}table.table a.btn.btn-deep-orange{color:#fff}.btn-outline-deep-orange{border:2px solid #ff7043!important;background-color:transparent!important;color:#ff7043!important}.btn-outline-deep-orange:hover,.btn-outline-deep-orange:focus,.btn-outline-deep-orange:active,.btn-outline-deep-orange:active:focus,.btn-outline-deep-orange.active{border-color:#ff7043!important;background-color:transparent!important;color:#ff7043!important}.btn-outline-deep-orange:not([disabled]):not(.disabled):active,.btn-outline-deep-orange:not([disabled]):not(.disabled).active,.show>.btn-outline-deep-orange.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#ff7043!important}.btn-outline-deep-orange:not([disabled]):not(.disabled):active:focus,.btn-outline-deep-orange:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-deep-orange.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-brown{background-color:#795548!important;color:#fff}.btn-brown:hover{background-color:#896052;color:#fff}.btn-brown:focus,.btn-brown.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-brown:focus,.btn-brown:active,.btn-brown.active{background-color:#392822}.btn-brown.dropdown-toggle{background-color:#795548!important}.btn-brown.dropdown-toggle:hover,.btn-brown.dropdown-toggle:focus{background-color:#896052!important}.btn-brown:not([disabled]):not(.disabled):active,.btn-brown:not([disabled]):not(.disabled).active,.show>.btn-brown.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#392822!important}.btn-brown:not([disabled]):not(.disabled):active:focus,.btn-brown:not([disabled]):not(.disabled).active:focus,.show>.btn-brown.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.brown-ic{color:#795548!important}.brown-ic:hover,.brown-ic:focus{color:#795548}table.table a.btn.btn-brown{color:#fff}.btn-outline-brown{border:2px solid #795548!important;background-color:transparent!important;color:#795548!important}.btn-outline-brown:hover,.btn-outline-brown:focus,.btn-outline-brown:active,.btn-outline-brown:active:focus,.btn-outline-brown.active{border-color:#795548!important;background-color:transparent!important;color:#795548!important}.btn-outline-brown:not([disabled]):not(.disabled):active,.btn-outline-brown:not([disabled]):not(.disabled).active,.show>.btn-outline-brown.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#795548!important}.btn-outline-brown:not([disabled]):not(.disabled):active:focus,.btn-outline-brown:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-brown.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-grey{background-color:#616161!important;color:#fff}.btn-grey:hover{background-color:#6e6e6e;color:#fff}.btn-grey:focus,.btn-grey.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-grey:focus,.btn-grey:active,.btn-grey.active{background-color:#2e2e2e}.btn-grey.dropdown-toggle{background-color:#616161!important}.btn-grey.dropdown-toggle:hover,.btn-grey.dropdown-toggle:focus{background-color:#6e6e6e!important}.btn-grey:not([disabled]):not(.disabled):active,.btn-grey:not([disabled]):not(.disabled).active,.show>.btn-grey.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#2e2e2e!important}.btn-grey:not([disabled]):not(.disabled):active:focus,.btn-grey:not([disabled]):not(.disabled).active:focus,.show>.btn-grey.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.grey-ic{color:#616161!important}.grey-ic:hover,.grey-ic:focus{color:#616161}table.table a.btn.btn-grey{color:#fff}.btn-outline-grey{border:2px solid #616161!important;background-color:transparent!important;color:#616161!important}.btn-outline-grey:hover,.btn-outline-grey:focus,.btn-outline-grey:active,.btn-outline-grey:active:focus,.btn-outline-grey.active{border-color:#616161!important;background-color:transparent!important;color:#616161!important}.btn-outline-grey:not([disabled]):not(.disabled):active,.btn-outline-grey:not([disabled]):not(.disabled).active,.show>.btn-outline-grey.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#616161!important}.btn-outline-grey:not([disabled]):not(.disabled):active:focus,.btn-outline-grey:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-grey.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-blue-grey{background-color:#78909c!important;color:#fff}.btn-blue-grey:hover{background-color:#879ca7;color:#fff}.btn-blue-grey:focus,.btn-blue-grey.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-blue-grey:focus,.btn-blue-grey:active,.btn-blue-grey.active{background-color:#4a5b64}.btn-blue-grey.dropdown-toggle{background-color:#78909c!important}.btn-blue-grey.dropdown-toggle:hover,.btn-blue-grey.dropdown-toggle:focus{background-color:#879ca7!important}.btn-blue-grey:not([disabled]):not(.disabled):active,.btn-blue-grey:not([disabled]):not(.disabled).active,.show>.btn-blue-grey.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#4a5b64!important}.btn-blue-grey:not([disabled]):not(.disabled):active:focus,.btn-blue-grey:not([disabled]):not(.disabled).active:focus,.show>.btn-blue-grey.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.blue-grey-ic{color:#78909c!important}.blue-grey-ic:hover,.blue-grey-ic:focus{color:#78909c}table.table a.btn.btn-blue-grey{color:#fff}.btn-outline-blue-grey{border:2px solid #78909c!important;background-color:transparent!important;color:#78909c!important}.btn-outline-blue-grey:hover,.btn-outline-blue-grey:focus,.btn-outline-blue-grey:active,.btn-outline-blue-grey:active:focus,.btn-outline-blue-grey.active{border-color:#78909c!important;background-color:transparent!important;color:#78909c!important}.btn-outline-blue-grey:not([disabled]):not(.disabled):active,.btn-outline-blue-grey:not([disabled]):not(.disabled).active,.show>.btn-outline-blue-grey.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#78909c!important}.btn-outline-blue-grey:not([disabled]):not(.disabled):active:focus,.btn-outline-blue-grey:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-blue-grey.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-dark{background-color:#212121!important;color:#fff}.btn-dark:hover{background-color:#2e2e2e;color:#fff}.btn-dark:focus,.btn-dark.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-dark:focus,.btn-dark:active,.btn-dark.active{background-color:#000}.btn-dark.dropdown-toggle{background-color:#212121!important}.btn-dark.dropdown-toggle:hover,.btn-dark.dropdown-toggle:focus{background-color:#2e2e2e!important}.btn-dark:not([disabled]):not(.disabled):active,.btn-dark:not([disabled]):not(.disabled).active,.show>.btn-dark.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#000!important}.btn-dark:not([disabled]):not(.disabled):active:focus,.btn-dark:not([disabled]):not(.disabled).active:focus,.show>.btn-dark.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.dark-ic{color:#212121!important}.dark-ic:hover,.dark-ic:focus{color:#212121}table.table a.btn.btn-dark{color:#fff}.btn-outline-dark{border:2px solid #212121!important;background-color:transparent!important;color:#212121!important}.btn-outline-dark:hover,.btn-outline-dark:focus,.btn-outline-dark:active,.btn-outline-dark:active:focus,.btn-outline-dark.active{border-color:#212121!important;background-color:transparent!important;color:#212121!important}.btn-outline-dark:not([disabled]):not(.disabled):active,.btn-outline-dark:not([disabled]):not(.disabled).active,.show>.btn-outline-dark.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#212121!important}.btn-outline-dark:not([disabled]):not(.disabled):active:focus,.btn-outline-dark:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-dark.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-light{background-color:#e0e0e0!important;color:#000}.btn-light:hover{background-color:#ededed;color:#000}.btn-light:focus,.btn-light.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-light:focus,.btn-light:active,.btn-light.active{background-color:#adadad}.btn-light.dropdown-toggle{background-color:#e0e0e0!important}.btn-light.dropdown-toggle:hover,.btn-light.dropdown-toggle:focus{background-color:#ededed!important}.btn-light:not([disabled]):not(.disabled):active,.btn-light:not([disabled]):not(.disabled).active,.show>.btn-light.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#adadad!important}.btn-light:not([disabled]):not(.disabled):active:focus,.btn-light:not([disabled]):not(.disabled).active:focus,.show>.btn-light.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.light-ic{color:#e0e0e0!important}.light-ic:hover,.light-ic:focus{color:#e0e0e0}table.table a.btn.btn-light{color:#000}.btn-outline-light{border:2px solid #e0e0e0!important;background-color:transparent!important;color:#e0e0e0!important}.btn-outline-light:hover,.btn-outline-light:focus,.btn-outline-light:active,.btn-outline-light:active:focus,.btn-outline-light.active{border-color:#e0e0e0!important;background-color:transparent!important;color:#e0e0e0!important}.btn-outline-light:not([disabled]):not(.disabled):active,.btn-outline-light:not([disabled]):not(.disabled).active,.show>.btn-outline-light.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#e0e0e0!important}.btn-outline-light:not([disabled]):not(.disabled):active:focus,.btn-outline-light:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-light.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-white{background-color:#fff!important;color:#000}.btn-white:hover{background-color:#fff;color:#000}.btn-white:focus,.btn-white.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-white:focus,.btn-white:active,.btn-white.active{background-color:#ccc}.btn-white.dropdown-toggle{background-color:#fff!important}.btn-white.dropdown-toggle:hover,.btn-white.dropdown-toggle:focus{background-color:#fff!important}.btn-white:not([disabled]):not(.disabled):active,.btn-white:not([disabled]):not(.disabled).active,.show>.btn-white.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#ccc!important}.btn-white:not([disabled]):not(.disabled):active:focus,.btn-white:not([disabled]):not(.disabled).active:focus,.show>.btn-white.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.white-ic{color:#fff!important}.white-ic:hover,.white-ic:focus{color:#fff}a.btn:not([href]):not([tabindex]),a.btn:not([href]):not([tabindex]):focus,a.btn:not([href]):not([tabindex]):hover{color:#000}table.table a.btn.btn-white{color:#000}.btn-outline-white{border:2px solid #fff!important;background-color:transparent!important;color:#fff!important}.btn-outline-white:hover,.btn-outline-white:focus,.btn-outline-white:active,.btn-outline-white:active:focus,.btn-outline-white.active{border-color:#fff!important;background-color:transparent!important;color:#fff!important}.btn-outline-white:not([disabled]):not(.disabled):active,.btn-outline-white:not([disabled]):not(.disabled).active,.show>.btn-outline-white.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#fff!important}.btn-outline-white:not([disabled]):not(.disabled):active:focus,.btn-outline-white:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-white.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-black{background-color:#000!important;color:#fff}.btn-black:hover{background-color:#0d0d0d;color:#fff}.btn-black:focus,.btn-black.focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-black:focus,.btn-black:active,.btn-black.active{background-color:#000}.btn-black.dropdown-toggle{background-color:#000!important}.btn-black.dropdown-toggle:hover,.btn-black.dropdown-toggle:focus{background-color:#0d0d0d!important}.btn-black:not([disabled]):not(.disabled):active,.btn-black:not([disabled]):not(.disabled).active,.show>.btn-black.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:#000!important}.btn-black:not([disabled]):not(.disabled):active:focus,.btn-black:not([disabled]):not(.disabled).active:focus,.show>.btn-black.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.black-ic{color:#000!important}.black-ic:hover,.black-ic:focus{color:#000}a.btn:not([href]):not([tabindex]),a.btn:not([href]):not([tabindex]):focus,a.btn:not([href]):not([tabindex]):hover{color:#fff}table.table a.btn.btn-black{color:#fff}.btn-outline-black{border:2px solid #000!important;background-color:transparent!important;color:#000!important}.btn-outline-black:hover,.btn-outline-black:focus,.btn-outline-black:active,.btn-outline-black:active:focus,.btn-outline-black.active{border-color:#000!important;background-color:transparent!important;color:#000!important}.btn-outline-black:not([disabled]):not(.disabled):active,.btn-outline-black:not([disabled]):not(.disabled).active,.show>.btn-outline-black.dropdown-toggle{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;background-color:transparent!important;border-color:#000!important}.btn-outline-black:not([disabled]):not(.disabled):active:focus,.btn-outline-black:not([disabled]):not(.disabled).active:focus,.show>.btn-outline-black.dropdown-toggle:focus{box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026}.btn-warning:not(:disabled):not(.disabled).active,.btn-warning:not(:disabled):not(.disabled):active,.show>.btn-warning.dropdown-toggle{color:#fff}.btn.purple-gradient{transition:.5s ease;color:#fff}.btn.purple-gradient:hover,.btn.purple-gradient:focus,.btn.purple-gradient:active,.btn.purple-gradient:active:focus .btn.purple-gradient.active{background:linear-gradient(#ff88ce,#8f8bf7)}.btn.peach-gradient{transition:.5s ease;color:#fff}.btn.peach-gradient:hover,.btn.peach-gradient:focus,.btn.peach-gradient:active,.btn.peach-gradient:active:focus .btn.peach-gradient.active{background:linear-gradient(#ffdf89,#fc7b7b)}.btn.aqua-gradient{transition:.5s ease;color:#fff}.btn.aqua-gradient:hover,.btn.aqua-gradient:focus,.btn.aqua-gradient:active,.btn.aqua-gradient:active:focus .btn.aqua-gradient.active{background:linear-gradient(#3aa2ff,#1fffac)}.btn.blue-gradient{transition:.5s ease;color:#fff}.btn.blue-gradient:hover,.btn.blue-gradient:focus,.btn.blue-gradient:active,.btn.blue-gradient:active:focus .btn.blue-gradient.active{background:linear-gradient(#5ed1fc,#3647b3)}.btn mdb-icon{position:relative;font-size:.9rem}.btn mdb-icon.right{margin-left:.3rem}.btn mdb-icon.left{margin-right:.3rem}.btn.btn-lg{padding:1rem 2.4rem;font-size:.94rem}.btn.btn-lg mdb-icon{font-size:1rem}.btn.btn-md{padding:.7rem 1.6rem;font-size:.7rem}.btn.btn-md mdb-icon{font-size:.8rem}.btn.btn-sm{padding:.5rem 1.6rem;font-size:.64rem}.btn.btn-sm mdb-icon{font-size:.7rem}\\n\"],\n    encapsulation: 2\n  });\n  return MdbBtnDirective;\n})();\nconst CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => ButtonCheckboxDirective),\n  multi: true\n};\n/**\r\n * Add checkbox functionality to any element\r\n */\n\nlet ButtonCheckboxDirective = /*#__PURE__*/(() => {\n  class ButtonCheckboxDirective {\n    constructor() {\n      /** Truthy value, will be set to ngModel */\n      this.btnCheckboxTrue = true;\n      /** Falsy value, will be set to ngModel */\n\n      this.btnCheckboxFalse = false;\n      this.state = false;\n      this.onChange = Function.prototype;\n      this.onTouched = Function.prototype;\n    } // view -> model\n\n\n    onClick() {\n      if (this.isDisabled) {\n        return;\n      }\n\n      this.toggle(!this.state);\n      this.onChange(this.value);\n    }\n\n    ngOnInit() {\n      this.toggle(this.trueValue === this.value);\n    }\n\n    get trueValue() {\n      return typeof this.btnCheckboxTrue !== 'undefined' ? this.btnCheckboxTrue : true;\n    }\n\n    get falseValue() {\n      return typeof this.btnCheckboxFalse !== 'undefined' ? this.btnCheckboxFalse : false;\n    }\n\n    toggle(state) {\n      this.state = state;\n      this.value = this.state ? this.trueValue : this.falseValue;\n    } // ControlValueAccessor\n    // model -> view\n\n\n    writeValue(value) {\n      this.state = this.trueValue === value;\n      this.value = value ? this.trueValue : this.falseValue;\n    }\n\n    setDisabledState(isDisabled) {\n      this.isDisabled = isDisabled;\n    }\n\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n\n  }\n\n  ButtonCheckboxDirective.ɵfac = function ButtonCheckboxDirective_Factory(t) {\n    return new (t || ButtonCheckboxDirective)();\n  };\n\n  ButtonCheckboxDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ButtonCheckboxDirective,\n    selectors: [[\"\", \"mdbCheckbox\", \"\"]],\n    hostVars: 2,\n    hostBindings: function ButtonCheckboxDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function ButtonCheckboxDirective_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"active\", ctx.state);\n      }\n    },\n    inputs: {\n      btnCheckboxTrue: \"btnCheckboxTrue\",\n      btnCheckboxFalse: \"btnCheckboxFalse\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([CHECKBOX_CONTROL_VALUE_ACCESSOR])]\n  });\n  return ButtonCheckboxDirective;\n})();\nconst RADIO_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => ButtonRadioDirective),\n  multi: true\n};\n/**\r\n * Create radio buttons or groups of buttons.\r\n * A value of a selected button is bound to a variable specified via ngModel.\r\n */\n\nlet ButtonRadioDirective = /*#__PURE__*/(() => {\n  class ButtonRadioDirective {\n    constructor(el, renderer) {\n      this.el = el;\n      this.renderer = renderer;\n      this.onChange = Function.prototype;\n      this.onTouched = Function.prototype;\n      this.radioElementsArray = [];\n      this.disabled = false;\n    }\n\n    get isActive() {\n      return this.mdbRadio === this.value;\n    }\n\n    onClick(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      try {\n        this.el.nativeElement.parentElement.childNodes.forEach(element => {\n          this.radioElementsArray.push(element);\n        });\n        this.radioElementsArray.forEach(element => {\n          this.renderer.removeClass(element, 'active');\n        });\n        this.renderer.addClass(event.target, 'active');\n      } catch (error) {}\n\n      if (this.el.nativeElement.attributes.disabled) {\n        return;\n      }\n\n      if (this.uncheckable && this.mdbRadio === this.value) {\n        this.value = undefined;\n      } else {\n        this.value = this.mdbRadio;\n      }\n\n      this.onTouched();\n      this.onChange(this.value);\n    }\n\n    ngOnInit() {\n      this.uncheckable = typeof this.uncheckable !== 'undefined';\n    }\n\n    onBlur() {\n      this.onTouched();\n    } // ControlValueAccessor\n    // model -> view\n\n\n    writeValue(value) {\n      this.value = value;\n    }\n\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n\n  }\n\n  ButtonRadioDirective.ɵfac = function ButtonRadioDirective_Factory(t) {\n    return new (t || ButtonRadioDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  ButtonRadioDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ButtonRadioDirective,\n    selectors: [[\"\", \"mdbRadio\", \"\"]],\n    hostVars: 4,\n    hostBindings: function ButtonRadioDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function ButtonRadioDirective_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"disabled\", ctx.disabled)(\"active\", ctx.isActive);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      value: \"value\",\n      uncheckable: \"uncheckable\",\n      mdbRadio: \"mdbRadio\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([RADIO_CONTROL_VALUE_ACCESSOR])]\n  });\n  return ButtonRadioDirective;\n})();\nlet FixedButtonCaptionDirective = /*#__PURE__*/(() => {\n  class FixedButtonCaptionDirective {\n    constructor(renderer, el) {\n      this.renderer = renderer;\n      this.el = el;\n    }\n\n    ngOnInit() {\n      this.createCaptionElement();\n    }\n\n    createCaptionElement() {\n      const paragraph = this.renderer.createElement('p');\n      const text = this.renderer.createText(this.caption);\n      this.renderer.appendChild(paragraph, text);\n      this.renderer.appendChild(this.el.nativeElement, paragraph);\n      this.paragraphEl = paragraph;\n    }\n\n    showCaption() {\n      this.renderer.addClass(this.paragraphEl, 'fixed-button-caption');\n      this.renderer.setStyle(this.paragraphEl, 'position', 'absolute');\n      this.renderer.setStyle(this.paragraphEl, 'right', `60px`);\n      this.renderer.setStyle(this.paragraphEl, 'top', '10px');\n      this.renderer.setStyle(this.el.nativeElement, 'overflow', 'visible');\n    }\n\n  }\n\n  FixedButtonCaptionDirective.ɵfac = function FixedButtonCaptionDirective_Factory(t) {\n    return new (t || FixedButtonCaptionDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  FixedButtonCaptionDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FixedButtonCaptionDirective,\n    selectors: [[\"\", \"mdbFixedCaption\", \"\"]],\n    inputs: {\n      caption: [\"mdbFixedCaption\", \"caption\"],\n      collapseButtonActivator: [\"collapseButton\", \"collapseButtonActivator\"]\n    }\n  });\n  return FixedButtonCaptionDirective;\n})();\nlet ButtonsModule = /*#__PURE__*/(() => {\n  class ButtonsModule {\n    static forRoot() {\n      return {\n        ngModule: ButtonsModule,\n        providers: []\n      };\n    }\n\n  }\n\n  ButtonsModule.ɵfac = function ButtonsModule_Factory(t) {\n    return new (t || ButtonsModule)();\n  };\n\n  ButtonsModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ButtonsModule\n  });\n  ButtonsModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return ButtonsModule;\n})();\nlet MdbCardFooterComponent = /*#__PURE__*/(() => {\n  class MdbCardFooterComponent {\n    constructor(_el, _r) {\n      this._el = _el;\n      this._r = _r;\n    }\n\n    ngOnInit() {\n      this._r.addClass(this._el.nativeElement, 'card-footer');\n    }\n\n  }\n\n  MdbCardFooterComponent.ɵfac = function MdbCardFooterComponent_Factory(t) {\n    return new (t || MdbCardFooterComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  MdbCardFooterComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdbCardFooterComponent,\n    selectors: [[\"mdb-card-footer\"]],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MdbCardFooterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MdbCardFooterComponent;\n})();\nlet MdbCardTitleComponent = /*#__PURE__*/(() => {\n  class MdbCardTitleComponent {\n    constructor(_el, _r) {\n      this._el = _el;\n      this._r = _r;\n    }\n\n    ngOnInit() {\n      this._r.addClass(this._el.nativeElement, 'card-title');\n    }\n\n  }\n\n  MdbCardTitleComponent.ɵfac = function MdbCardTitleComponent_Factory(t) {\n    return new (t || MdbCardTitleComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  MdbCardTitleComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdbCardTitleComponent,\n    selectors: [[\"mdb-card-title\"]],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MdbCardTitleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MdbCardTitleComponent;\n})();\nlet MdbCardTextComponent = /*#__PURE__*/(() => {\n  class MdbCardTextComponent {}\n\n  MdbCardTextComponent.ɵfac = function MdbCardTextComponent_Factory(t) {\n    return new (t || MdbCardTextComponent)();\n  };\n\n  MdbCardTextComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdbCardTextComponent,\n    selectors: [[\"mdb-card-text\"]],\n    inputs: {\n      class: \"class\"\n    },\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 3,\n    template: function MdbCardTextComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"p\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMapInterpolate1(\"card-text \", ctx.class, \" \");\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MdbCardTextComponent;\n})();\nlet MdbCardBodyComponent = /*#__PURE__*/(() => {\n  class MdbCardBodyComponent {\n    constructor(_el, _r) {\n      this._el = _el;\n      this._r = _r;\n    }\n\n    set cascade(cascade) {\n      if (cascade) {\n        this._r.addClass(this._el.nativeElement, 'card-body-cascade');\n      }\n    }\n\n    ngOnInit() {\n      this._r.addClass(this._el.nativeElement, 'card-body');\n\n      if (this.class) {\n        this.class.split(' ').forEach(element => {\n          this._r.addClass(this._el.nativeElement, element);\n        });\n      }\n    }\n\n  }\n\n  MdbCardBodyComponent.ɵfac = function MdbCardBodyComponent_Factory(t) {\n    return new (t || MdbCardBodyComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  MdbCardBodyComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdbCardBodyComponent,\n    selectors: [[\"mdb-card-body\"]],\n    inputs: {\n      cascade: \"cascade\",\n      class: \"class\"\n    },\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MdbCardBodyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MdbCardBodyComponent;\n})();\nlet MdbCardComponent = /*#__PURE__*/(() => {\n  class MdbCardComponent {\n    constructor(_el, _r) {\n      this._el = _el;\n      this._r = _r;\n    }\n\n    set narrower(narrower) {\n      if (narrower) {\n        this._r.addClass(this._el.nativeElement, 'narrower');\n      } else if (!narrower && this._el.nativeElement.classList.contains('narrower')) {\n        this._r.removeClass(this._el.nativeElement, 'narrower');\n      }\n    }\n\n    set reverse(reverse) {\n      if (reverse) {\n        this._r.addClass(this._el.nativeElement, 'reverse');\n      } else if (!reverse && this._el.nativeElement.classList.contains('reserse')) {\n        this._r.removeClass(this._el.nativeElement, 'reverse');\n      }\n    }\n\n    set dark(dark) {\n      if (dark) {\n        this._r.addClass(this._el.nativeElement, 'card-dark');\n      } else if (!dark && this._el.nativeElement.classList.contains('card-dark')) {\n        this._r.removeClass(this._el.nativeElement, 'card-dark');\n      }\n    }\n\n    set bgColor(color) {\n      if (color) {\n        this._r.addClass(this._el.nativeElement, color);\n      }\n    }\n\n    set borderColor(color) {\n      if (color) {\n        this._r.addClass(this._el.nativeElement, color);\n      }\n    }\n\n    ngOnInit() {\n      this._r.addClass(this._el.nativeElement, 'card');\n\n      if (this.cascade) {\n        this._r.addClass(this._el.nativeElement, 'card-cascade');\n      }\n\n      if (this.wider) {\n        this._r.addClass(this._el.nativeElement, 'wider');\n      }\n\n      if (this.narrower) {\n        this._r.addClass(this._el.nativeElement, 'narrower');\n      }\n\n      if (this.class) {\n        this.class.split(' ').forEach(element => {\n          this._r.addClass(this._el.nativeElement, element);\n        });\n      }\n    }\n\n  }\n\n  MdbCardComponent.ɵfac = function MdbCardComponent_Factory(t) {\n    return new (t || MdbCardComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  MdbCardComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdbCardComponent,\n    selectors: [[\"mdb-card\"]],\n    viewQuery: function MdbCardComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c2, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.card = _t.first);\n      }\n    },\n    inputs: {\n      narrower: \"narrower\",\n      reverse: \"reverse\",\n      dark: \"dark\",\n      bgColor: \"bgColor\",\n      borderColor: \"borderColor\",\n      class: \"class\",\n      cascade: \"cascade\",\n      wider: \"wider\",\n      imageBackground: \"imageBackground\"\n    },\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MdbCardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    styles: [\".card{box-shadow:0 2px 5px #00000029,0 2px 10px #0000001f;border:0;font-weight:400}.card[class*=border]{border:1px solid #9e9e9e;box-shadow:none}.card .card-body h1,.card .card-body h2,.card .card-body h3,.card .card-body h4,.card .card-body h5,.card .card-body h6{font-weight:400}.card .card-body .card-title a{transition:.2s ease-in-out}.card .card-body .card-title a:hover{transition:.2s ease-in-out}.card .card-body .card-text{color:#747373;font-size:.9rem;font-weight:400}.card .md-form label{font-weight:300}.card-text:last-child{margin-bottom:1rem!important}mdb-card-img img.img-fluid{width:100%}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MdbCardComponent;\n})();\nlet MdbCardImageComponent = /*#__PURE__*/(() => {\n  class MdbCardImageComponent {}\n\n  MdbCardImageComponent.ɵfac = function MdbCardImageComponent_Factory(t) {\n    return new (t || MdbCardImageComponent)();\n  };\n\n  MdbCardImageComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdbCardImageComponent,\n    selectors: [[\"mdb-card-img\"]],\n    inputs: {\n      src: \"src\",\n      alt: \"alt\"\n    },\n    decls: 1,\n    vars: 2,\n    consts: [[1, \"img-fluid\", 3, \"src\", \"alt\"]],\n    template: function MdbCardImageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"img\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"src\", ctx.src, ɵngcc0.ɵɵsanitizeUrl)(\"alt\", ctx.alt);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MdbCardImageComponent;\n})();\nlet MdbCardHeaderComponent = /*#__PURE__*/(() => {\n  class MdbCardHeaderComponent {\n    constructor(_el, _r) {\n      this._el = _el;\n      this._r = _r;\n    }\n\n    ngOnInit() {\n      this._r.addClass(this._el.nativeElement, 'card-header');\n\n      if (this.class) {\n        this.class.split(' ').forEach(element => {\n          this._r.addClass(this._el.nativeElement, element);\n        });\n      }\n    }\n\n  }\n\n  MdbCardHeaderComponent.ɵfac = function MdbCardHeaderComponent_Factory(t) {\n    return new (t || MdbCardHeaderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  MdbCardHeaderComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdbCardHeaderComponent,\n    selectors: [[\"mdb-card-header\"]],\n    inputs: {\n      class: \"class\"\n    },\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MdbCardHeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MdbCardHeaderComponent;\n})();\nlet CardsModule = /*#__PURE__*/(() => {\n  class CardsModule {\n    static forRoot() {\n      return {\n        ngModule: CardsModule,\n        providers: []\n      };\n    }\n\n  }\n\n  CardsModule.ɵfac = function CardsModule_Factory(t) {\n    return new (t || CardsModule)();\n  };\n\n  CardsModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: CardsModule\n  });\n  CardsModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  /*tslint:disable */\n\n  /**\r\n   * @license\r\n   * Copyright Google Inc. All Rights Reserved.\r\n   *\r\n   * Use of this source code is governed by an MIT-style license that can be\r\n   * found in the LICENSE file at https://angular.io/license\r\n   */\n\n  /**\r\n   * JS version of browser APIs. This library can only run in the browser.\r\n   */\n\n  return CardsModule;\n})();\nvar win$1 = typeof window !== 'undefined' && window || {};\nvar document$2 = win$1.document;\nvar location$1 = win$1.location;\nvar gc$1 = win$1['gc'] ? () => win$1['gc']() : () => null;\nvar performance$1 = win$1['performance'] ? win$1['performance'] : null;\nconst Event$1 = win$1['Event'];\nconst MouseEvent$1 = win$1['MouseEvent'];\nconst KeyboardEvent$1 = win$1['KeyboardEvent'];\nconst EventTarget$1 = win$1['EventTarget'];\nconst History$1 = win$1['History'];\nconst Location$1 = win$1['Location'];\nconst EventListener$1 = win$1['EventListener'];\nconst navigator$1 = win$1['navigator'];\n\nfunction isBs3$1() {\n  return win$1.__theme === 'bs4';\n}\n\nlet SlideComponent = /*#__PURE__*/(() => {\n  class SlideComponent {\n    constructor(el) {\n      this.animated = false;\n      this.directionNext = false;\n      this.directionLeft = false;\n      this.directionPrev = false;\n      this.directionRight = false;\n      /** Wraps element by appropriate CSS classes */\n\n      this.el = null;\n      this.el = el;\n    }\n\n  }\n\n  SlideComponent.ɵfac = function SlideComponent_Factory(t) {\n    return new (t || SlideComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  SlideComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: SlideComponent,\n    selectors: [[\"mdb-slide\"], [\"mdb-carousel-item\"]],\n    hostVars: 14,\n    hostBindings: function SlideComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"animated\", ctx.animated)(\"carousel-item-next\", ctx.directionNext)(\"carousel-item-left\", ctx.directionLeft)(\"carousel-item-prev\", ctx.directionPrev)(\"carousel-item-right\", ctx.directionRight)(\"carousel-item\", ctx.el)(\"active\", ctx.active);\n      }\n    },\n    inputs: {\n      active: \"active\"\n    },\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function SlideComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n  return SlideComponent;\n})();\nlet CarouselConfig = /*#__PURE__*/(() => {\n  class CarouselConfig {\n    constructor() {\n      /** Default interval of auto changing of slides */\n      this.interval = 5000;\n      /** Is loop of auto changing of slides can be paused */\n\n      this.noPause = false;\n      /** Is slides can wrap from the last to the first slide */\n\n      this.noWrap = false;\n      this.keyboard = false;\n    }\n\n  }\n\n  CarouselConfig.ɵfac = function CarouselConfig_Factory(t) {\n    return new (t || CarouselConfig)();\n  };\n\n  CarouselConfig.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: CarouselConfig,\n    factory: CarouselConfig.ɵfac\n  });\n  /**\r\n   * @license\r\n   * Copyright Google LLC All Rights Reserved.\r\n   *\r\n   * Use of this source code is governed by an MIT-style license that can be\r\n   * found in the LICENSE file at https://angular.io/license\r\n   */\n\n  return CarouselConfig;\n})();\nconst MAC_ENTER = 3;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst NUM_CENTER = 12;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CONTROL = 17;\nconst ALT = 18;\nconst PAUSE = 19;\nconst CAPS_LOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst PLUS_SIGN = 43;\nconst PRINT_SCREEN = 44;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\n\nconst FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\n\nconst QUESTION_MARK = 63;\nconst AT_SIGN = 64;\nconst A = 65;\nconst B = 66;\nconst C = 67;\nconst D = 68;\nconst E = 69;\nconst F = 70;\nconst G = 71;\nconst H = 72;\nconst I = 73;\nconst J = 74;\nconst K = 75;\nconst L = 76;\nconst M = 77;\nconst N = 78;\nconst O = 79;\nconst P = 80;\nconst Q = 81;\nconst R = 82;\nconst S = 83;\nconst T = 84;\nconst U = 85;\nconst V = 86;\nconst W = 87;\nconst X = 88;\nconst Y = 89;\nconst Z = 90;\nconst META = 91; // WIN_KEY_LEFT\n\nconst MAC_WK_CMD_LEFT = 91;\nconst MAC_WK_CMD_RIGHT = 93;\nconst CONTEXT_MENU = 93;\nconst NUMPAD_ZERO = 96;\nconst NUMPAD_ONE = 97;\nconst NUMPAD_TWO = 98;\nconst NUMPAD_THREE = 99;\nconst NUMPAD_FOUR = 100;\nconst NUMPAD_FIVE = 101;\nconst NUMPAD_SIX = 102;\nconst NUMPAD_SEVEN = 103;\nconst NUMPAD_EIGHT = 104;\nconst NUMPAD_NINE = 105;\nconst NUMPAD_MULTIPLY = 106;\nconst NUMPAD_PLUS = 107;\nconst NUMPAD_MINUS = 109;\nconst NUMPAD_PERIOD = 110;\nconst NUMPAD_DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst FIRST_MEDIA = 166;\nconst FF_MINUS = 173;\nconst MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\n\nconst VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\n\nconst VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\n\nconst FF_MUTE = 181;\nconst FF_VOLUME_DOWN = 182;\nconst LAST_MEDIA = 183;\nconst FF_VOLUME_UP = 183;\nconst SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\n\nconst EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\n\nconst COMMA = 188;\nconst DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\n\nconst SLASH = 191;\nconst APOSTROPHE = 192;\nconst TILDE = 192;\nconst OPEN_SQUARE_BRACKET = 219;\nconst BACKSLASH = 220;\nconst CLOSE_SQUARE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\nconst MAC_META = 224;\nvar Direction$1 = /*#__PURE__*/(() => {\n  (function (Direction) {\n    Direction[Direction[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    Direction[Direction[\"NEXT\"] = 1] = \"NEXT\";\n    Direction[Direction[\"PREV\"] = 2] = \"PREV\";\n  })(Direction$1 || (Direction$1 = {}));\n\n  return Direction$1;\n})();\n\n/**\r\n * Base element to create carousel\r\n */\nlet CarouselComponent = /*#__PURE__*/(() => {\n  class CarouselComponent {\n    constructor(config, el, platformId, cdRef, renderer) {\n      this.el = el;\n      this.cdRef = cdRef;\n      this.renderer = renderer;\n      this.SWIPE_ACTION = {\n        LEFT: 'swipeleft',\n        RIGHT: 'swiperight'\n      };\n      this._destroy$ = new Subject();\n      this.destroyed = false;\n      this.animationEnd = true;\n      this.isBrowser = false;\n      this.isControls = true;\n      this.class = '';\n      this.type = '';\n      this.animation = '';\n      this.allowSwipe = true;\n      this.activeSlideChange = new EventEmitter(false);\n      this.isBrowser = isPlatformBrowser(platformId);\n      Object.assign(this, config);\n    }\n\n    get slides() {\n      return this._slidesList.toArray();\n    }\n\n    set activeSlide(index) {\n      if (this._slidesList && index !== this._currentActiveSlide) {\n        this._select(index);\n      }\n    }\n\n    get activeSlide() {\n      return this._currentActiveSlide;\n    }\n\n    checkNavigation() {\n      if (this.type === 'carousel-multi-item') {\n        return false;\n      }\n\n      return true;\n    }\n\n    checkDots() {\n      if (this.type === 'carousel-thumbnails') {\n        return false;\n      }\n\n      return true;\n    }\n\n    getImg(slide) {\n      return slide.el.nativeElement.querySelector('img').src;\n    }\n\n    get interval() {\n      return this._interval;\n    }\n\n    set interval(value) {\n      this._interval = value;\n      this.restartTimer();\n    }\n\n    get isBs4() {\n      return !isBs3$1();\n    }\n\n    ngOnDestroy() {\n      this.destroyed = true;\n\n      this._destroy$.next();\n\n      this._destroy$.complete();\n    }\n\n    ngAfterViewInit() {\n      this.play();\n\n      this._slidesList.changes.pipe(takeUntil(this._destroy$)).subscribe(slidesList => {\n        this._slidesList = slidesList;\n        setTimeout(() => {\n          this._select(0);\n        }, 0);\n      });\n\n      if (this.activeSlideIndex) {\n        setTimeout(() => {\n          this._select(this.activeSlideIndex);\n\n          this.activeSlideChange.emit({\n            relatedTarget: this.activeSlide\n          });\n        }, 0);\n      } else {\n        setTimeout(() => {\n          this._select(0);\n        }, 0);\n      }\n\n      if (this.isControls) {\n        this.carouselIndicators = this.el.nativeElement.querySelectorAll('.carousel-indicators > li');\n\n        if (this.carouselIndicators.length && this.activeSlideIndex) {\n          this.renderer.addClass(this.carouselIndicators[this.activeSlideIndex], 'active');\n        } else if (this.carouselIndicators.length) {\n          this.renderer.addClass(this.carouselIndicators[0], 'active');\n        }\n      }\n    }\n\n    swipe(action = this.SWIPE_ACTION.RIGHT) {\n      if (this.allowSwipe) {\n        if (action === this.SWIPE_ACTION.RIGHT) {\n          this.previousSlide();\n          this.cdRef.markForCheck();\n        }\n\n        if (action === this.SWIPE_ACTION.LEFT) {\n          this.nextSlide();\n          this.cdRef.markForCheck();\n        }\n      }\n    }\n\n    nextSlide(force = false) {\n      this.restartTimer(); // Start next slide, pause actual slide\n\n      const videoList = this.el.nativeElement.getElementsByTagName('video');\n      const direction = Direction$1.NEXT;\n      const indexEl = this.findNextSlideIndex(direction, force);\n\n      if (videoList.length > 0) {\n        // Check for video carousel\n        for (let i = 0; i < videoList.length; i++) {\n          if (i === indexEl) {\n            videoList[i].play();\n          } else {\n            videoList[i].pause();\n          }\n        }\n      }\n\n      if (this.animation === 'slide') {\n        this.pause();\n        this.slideAnimation(this.findNextSlideIndex(Direction$1.NEXT, force), Direction$1.NEXT);\n        this.cdRef.markForCheck();\n      } else if (this.animation === 'fade') {\n        this.pause();\n        this.fadeAnimation(this.findNextSlideIndex(Direction$1.NEXT, force), Direction$1.NEXT);\n        this.cdRef.markForCheck();\n      } else {\n        this.activeSlide = this.findNextSlideIndex(Direction$1.NEXT, force);\n        this.cdRef.markForCheck();\n      }\n\n      if (!this.animation) {\n        this.activeSlideChange.emit({\n          direction: 'Next',\n          relatedTarget: this.activeSlide\n        });\n      }\n    }\n\n    previousSlide(force = false) {\n      this.restartTimer(); // Start previous slide, pause actual slide\n\n      const videoList = this.el.nativeElement.getElementsByTagName('video');\n      const direction = Direction$1.PREV;\n      const indexel = this.findNextSlideIndex(direction, force);\n\n      if (videoList.length > 0) {\n        // Check for video carousel\n        for (let i = 0; i < videoList.length; i++) {\n          if (i === indexel) {\n            videoList[i].play();\n          } else {\n            videoList[i].pause();\n          }\n        }\n      }\n\n      if (this.animation === 'slide') {\n        this.pause();\n        this.slideAnimation(this.findNextSlideIndex(direction, force), direction);\n        this.cdRef.markForCheck();\n      } else if (this.animation === 'fade') {\n        this.pause();\n        this.fadeAnimation(this.findNextSlideIndex(Direction$1.PREV, force), Direction$1.PREV);\n        this.cdRef.markForCheck();\n      } else {\n        this.activeSlide = this.findNextSlideIndex(Direction$1.PREV, force);\n        this.cdRef.markForCheck();\n      }\n\n      if (!this.animation) {\n        this.activeSlideChange.emit({\n          direction: 'Prev',\n          relatedTarget: this.activeSlide\n        });\n      }\n    }\n\n    fadeAnimation(goToIndex, direction) {\n      const goToSlide = this.slides[goToIndex];\n\n      if (this.animationEnd) {\n        this.animationEnd = false;\n        goToSlide.directionNext = true;\n\n        if (this.isBrowser) {\n          setTimeout(() => {\n            const previous = this.slides[this._currentActiveSlide].el.nativeElement;\n            this.renderer.setStyle(previous, 'display', 'none');\n            this.renderer.setStyle(previous, 'transition', 'all 600ms');\n            this.renderer.setStyle(goToSlide.el.nativeElement, 'display', 'block');\n            this.renderer.setStyle(goToSlide.el.nativeElement, 'transition', 'all 600ms');\n\n            if (direction === 1) {\n              this.activeSlideChange.emit({\n                direction: 'Next',\n                relatedTarget: this.activeSlide\n              });\n            } else if (direction === 2) {\n              this.activeSlideChange.emit({\n                direction: 'Prev',\n                relatedTarget: this.activeSlide\n              });\n            }\n\n            goToSlide.directionNext = false;\n            this.animationEnd = true;\n            this.activeSlide = goToIndex;\n            this.activeSlideChange.emit({\n              direction: 'Next',\n              relatedTarget: this.activeSlide\n            });\n            this.play();\n            this.cdRef.markForCheck();\n          }, 0);\n        }\n      }\n    }\n\n    slideAnimation(goToIndex, direction) {\n      const currentSlide = this.slides[this._currentActiveSlide];\n      const goToSlide = this.slides[goToIndex];\n\n      if (this.animationEnd) {\n        if (direction === Direction$1.NEXT) {\n          this.animationEnd = false;\n          goToSlide.directionNext = true;\n\n          if (this.isBrowser) {\n            setTimeout(() => {\n              goToSlide.directionLeft = true;\n              currentSlide.directionLeft = true;\n              this.cdRef.markForCheck();\n            }, 100);\n          }\n        }\n\n        if (direction === Direction$1.PREV) {\n          this.animationEnd = false;\n          goToSlide.directionPrev = true;\n\n          if (this.isBrowser) {\n            setTimeout(() => {\n              goToSlide.directionRight = true;\n              currentSlide.directionRight = true;\n              this.cdRef.markForCheck();\n            }, 100);\n          }\n        }\n\n        if (this.isBrowser) {\n          setTimeout(() => {\n            goToSlide.directionLeft = false;\n            goToSlide.directionNext = false;\n            currentSlide.directionLeft = false;\n            currentSlide.directionNext = false;\n            goToSlide.directionRight = false;\n            goToSlide.directionPrev = false;\n            currentSlide.directionRight = false;\n            currentSlide.directionPrev = false;\n            this.animationEnd = true;\n            this.activeSlide = goToIndex;\n            let directionName;\n\n            if (direction === Direction$1.NEXT) {\n              directionName = 'Next';\n            } else if (direction === Direction$1.PREV) {\n              directionName = 'Prev';\n            }\n\n            this.activeSlideChange.emit({\n              direction: directionName,\n              relatedTarget: this.activeSlide\n            });\n            this.play();\n            this.cdRef.markForCheck();\n          }, 700);\n        }\n      }\n    }\n\n    selectSlide(index) {\n      this.pause();\n\n      if (this.animation === 'slide') {\n        if (this.activeSlide < index) {\n          this.slideAnimation(index, Direction$1.NEXT);\n        } else if (this.activeSlide > index) {\n          this.slideAnimation(index, Direction$1.PREV);\n        }\n      } else if (this.animation === 'fade') {\n        if (index !== this.activeSlide) {\n          this.fadeAnimation(index);\n        }\n      } else if (!this.animation) {\n        setTimeout(() => {\n          const direction = index < this.activeSlide ? 'Prev' : 'Next';\n\n          this._select(index);\n\n          this.activeSlideChange.emit({\n            direction,\n            relatedTarget: this.activeSlide\n          });\n        }, 0);\n      }\n\n      this.play();\n    }\n\n    play() {\n      if (!this.isPlaying) {\n        this.isPlaying = true;\n        this.restartTimer();\n        this.cdRef.markForCheck();\n      }\n    }\n\n    pause() {\n      if (!this.noPause) {\n        this.isPlaying = false;\n        this.resetTimer();\n        this.cdRef.markForCheck();\n      }\n    }\n\n    getCurrentSlideIndex() {\n      return this.slides.findIndex(slide => slide.active);\n    }\n\n    isLast(index) {\n      return index + 1 >= this.slides.length;\n    }\n\n    findNextSlideIndex(direction, force) {\n      let nextSlideIndex = 0;\n\n      if (!force && this.isLast(this.activeSlide) && direction !== Direction$1.PREV && this.noWrap) {\n        return void 0;\n      }\n\n      switch (direction) {\n        case Direction$1.NEXT:\n          nextSlideIndex = !this.isLast(this._currentActiveSlide) ? this._currentActiveSlide + 1 : !force && this.noWrap ? this._currentActiveSlide : 0;\n          break;\n\n        case Direction$1.PREV:\n          nextSlideIndex = this._currentActiveSlide > 0 ? this._currentActiveSlide - 1 : !force && this.noWrap ? this._currentActiveSlide : this.slides.length - 1;\n          break;\n\n        default:\n          throw new Error('Unknown direction');\n      }\n\n      return nextSlideIndex;\n    }\n\n    _select(index) {\n      if (isNaN(index)) {\n        this.pause();\n        return;\n      }\n\n      const currentSlide = this.slides[this._currentActiveSlide];\n\n      if (currentSlide) {\n        currentSlide.active = false;\n      }\n\n      const nextSlide = this.slides[index];\n\n      if (nextSlide) {\n        this._currentActiveSlide = index;\n        nextSlide.active = true;\n        this.activeSlide = index;\n      }\n\n      this.cdRef.markForCheck();\n    }\n\n    restartTimer() {\n      this.resetTimer();\n\n      if (this.isBrowser) {\n        const interval = +this.interval;\n\n        if (!isNaN(interval) && interval > 0) {\n          this.currentInterval = setInterval(() => {\n            const nInterval = +this.interval;\n\n            if (this.isPlaying && !isNaN(this.interval) && nInterval > 0 && this.slides.length) {\n              this.nextSlide();\n            } else {\n              this.pause();\n            }\n          }, interval);\n        }\n      }\n    }\n\n    resetTimer() {\n      if (this.isBrowser) {\n        if (this.currentInterval) {\n          clearInterval(this.currentInterval);\n          this.currentInterval = void 0;\n        }\n      }\n    }\n\n    hasClass(el, className) {\n      if (el.classList) {\n        return el.classList.contains(className);\n      } else {\n        return !!el.className.match(new RegExp('(\\\\s|^)' + className + '(\\\\s|$)'));\n      }\n    }\n\n    classAdd(el, className) {\n      if (el.classList) {\n        el.classList.add(className);\n      } else if (!this.hasClass(el, className)) {\n        el.className += ' ' + className;\n      }\n    }\n\n    removeClass(el, className) {\n      if (el.classList) {\n        el.classList.remove(className);\n      } else if (this.hasClass(el, className)) {\n        const reg = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)');\n        el.className = el.className.replace(reg, ' ');\n      }\n    }\n\n    keyboardControl(event) {\n      if (this.keyboard) {\n        // tslint:disable-next-line: deprecation\n        if (event.keyCode === RIGHT_ARROW) {\n          this.nextSlide();\n        } // tslint:disable-next-line: deprecation\n\n\n        if (event.keyCode === LEFT_ARROW) {\n          this.previousSlide();\n        }\n      }\n    }\n\n    focus() {\n      this.el.nativeElement.focus();\n    }\n\n  }\n\n  CarouselComponent.ɵfac = function CarouselComponent_Factory(t) {\n    return new (t || CarouselComponent)(ɵngcc0.ɵɵdirectiveInject(CarouselConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  CarouselComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: CarouselComponent,\n    selectors: [[\"mdb-carousel\"]],\n    contentQueries: function CarouselComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, SlideComponent, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._slidesList = _t);\n      }\n    },\n    hostBindings: function CarouselComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mouseleave\", function CarouselComponent_mouseleave_HostBindingHandler() {\n          return ctx.play();\n        })(\"mouseenter\", function CarouselComponent_mouseenter_HostBindingHandler() {\n          return ctx.pause();\n        })(\"keyup\", function CarouselComponent_keyup_HostBindingHandler($event) {\n          return ctx.keyboardControl($event);\n        })(\"click\", function CarouselComponent_click_HostBindingHandler() {\n          return ctx.focus();\n        });\n      }\n    },\n    inputs: {\n      isControls: \"isControls\",\n      class: \"class\",\n      type: \"type\",\n      animation: \"animation\",\n      allowSwipe: \"allowSwipe\",\n      activeSlide: \"activeSlide\",\n      interval: \"interval\",\n      noWrap: \"noWrap\",\n      noPause: \"noPause\",\n      keyboard: \"keyboard\",\n      activeSlideIndex: \"activeSlideIndex\"\n    },\n    outputs: {\n      activeSlideChange: \"activeSlideChange\"\n    },\n    ngContentSelectors: _c0,\n    decls: 8,\n    vars: 9,\n    consts: [[\"tabindex\", \"0\", 3, \"swipeleft\", \"swiperight\", \"mouseenter\", \"mouseleave\", \"mouseup\"], [\"class\", \"controls-top\", 4, \"ngIf\"], [\"class\", \"carousel-indicators\", 4, \"ngIf\"], [1, \"carousel-inner\"], [\"class\", \"carousel-control-prev\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"carousel-control-next\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [1, \"controls-top\"], [\"mdbBtn\", \"\", \"floating\", \"true\", 3, \"click\"], [1, \"fas\", \"fa-chevron-left\"], [1, \"fas\", \"fa-chevron-right\"], [1, \"carousel-indicators\"], [3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [1, \"d-block\", \"w-100\", \"img-fluid\", 3, \"src\"], [1, \"carousel-control-prev\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"carousel-control-prev-icon\"], [1, \"sr-only\"], [1, \"carousel-control-next\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"carousel-control-next-icon\"]],\n    template: function CarouselComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"swipeleft\", function CarouselComponent_Template_div_swipeleft_0_listener($event) {\n          return ctx.swipe($event.type);\n        })(\"swiperight\", function CarouselComponent_Template_div_swiperight_0_listener($event) {\n          return ctx.swipe($event.type);\n        })(\"mouseenter\", function CarouselComponent_Template_div_mouseenter_0_listener() {\n          return ctx.pause();\n        })(\"mouseleave\", function CarouselComponent_Template_div_mouseleave_0_listener() {\n          return ctx.play();\n        })(\"mouseup\", function CarouselComponent_Template_div_mouseup_0_listener() {\n          return ctx.play();\n        });\n        ɵngcc0.ɵɵtemplate(1, CarouselComponent_div_1_Template, 5, 4, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, CarouselComponent_ol_2_Template, 2, 1, \"ol\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵprojection(4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(5, CarouselComponent_ol_5_Template, 2, 1, \"ol\", 2);\n        ɵngcc0.ɵɵtemplate(6, CarouselComponent_a_6_Template, 4, 2, \"a\", 4);\n        ɵngcc0.ɵɵtemplate(7, CarouselComponent_a_7_Template, 4, 2, \"a\", 5);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMapInterpolate2(\"carousel \", ctx.class, \" \", ctx.type, \"\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.slides.length > 1 && !ctx.checkNavigation() && ctx.isControls);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.slides.length > 1 && ctx.checkDots() && ctx.isControls);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.slides.length > 1 && !ctx.checkDots() && ctx.isControls);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.slides.length > 1 && ctx.checkNavigation() && ctx.isControls);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.slides.length > 1 && ctx.checkNavigation() && ctx.isControls);\n      }\n    },\n    directives: [ɵngcc1.NgIf, MdbBtnDirective, ɵngcc1.NgForOf],\n    styles: [\".carousel .carousel-control-prev-icon,.carousel .carousel-control-next-icon{width:2.25rem;height:2.25rem}.carousel .carousel-indicators li{width:.625rem;height:.625rem;border-radius:50%;cursor:pointer}.carousel-fade .carousel-item{opacity:0;transition-duration:.6s;transition-property:opacity}.carousel-fade .carousel-item.active,.carousel-fade .carousel-item-next.carousel-item-left,.carousel-fade .carousel-item-prev.carousel-item-right{opacity:1}.carousel-fade .carousel-item-left.active,.carousel-fade .carousel-item-right.active{opacity:0}.carousel-fade .carousel-item-next,.carousel-fade .carousel-item-prev,.carousel-fade .carousel-item.active,.carousel-fade .carousel-item-left.active,.carousel-fade .carousel-item-prev.active{transform:translate(0)}@supports (transform-style: preserve-3d){.carousel-fade .carousel-item-next,.carousel-fade .carousel-item-prev,.carousel-fade .carousel-item.active,.carousel-fade .carousel-item-left.active,.carousel-fade .carousel-item-prev.active{transform:translate(0)}}.carousel-item.active,.carousel-item-next,.carousel-item-prev,.carousel-control-prev,.carousel-control-next{display:flex;overflow:hidden}.carousel,.carousel-multi-item,.carousel-thumbnails{outline:none}.carousel-fade .carousel-inner .carousel-item{opacity:0;transition-property:opacity}.carousel-fade .carousel-inner .active{opacity:1;transition:all .6s}.carousel-fade .carousel-inner>.carousel-item.active,.carousel-fade .carousel-inner>.carousel-item.next.left,.carousel-fade .carousel-inner>.carousel-item.prev.right{opacity:1;transition:all .6s;transform:translate(0)}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return CarouselComponent;\n})();\nlet CarouselModule = /*#__PURE__*/(() => {\n  class CarouselModule {\n    static forRoot() {\n      return {\n        ngModule: CarouselModule,\n        providers: []\n      };\n    }\n\n  }\n\n  CarouselModule.ɵfac = function CarouselModule_Factory(t) {\n    return new (t || CarouselModule)();\n  };\n\n  CarouselModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: CarouselModule\n  });\n  CarouselModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [CarouselConfig],\n    imports: [[CommonModule, ButtonsModule]]\n  });\n  return CarouselModule;\n})();\nlet BaseChartDirective = /*#__PURE__*/(() => {\n  class BaseChartDirective {\n    constructor(element, platformId) {\n      this.element = element;\n      this.labels = [];\n      this.options = {\n        legend: {\n          display: false\n        }\n      };\n      this.legend = false;\n      this.chartClick = new EventEmitter();\n      this.chartHover = new EventEmitter();\n      this.initFlag = false;\n      this.isBrowser = false;\n      this.isBrowser = isPlatformBrowser(platformId);\n    }\n\n    ngOnInit() {\n      if (this.isBrowser) {\n        this.ctx = this.element.nativeElement.getContext('2d');\n        this.cvs = this.element.nativeElement;\n        this.initFlag = true;\n\n        if (this.data || this.datasets) {\n          this.refresh();\n        }\n      }\n    }\n\n    ngOnChanges(changes) {\n      if (this.initFlag) {\n        // Check if the changes are in the data or datasets\n        if ((changes.hasOwnProperty('data') || changes.hasOwnProperty('datasets')) && !changes.hasOwnProperty('labels')) {\n          if (changes['data']) {\n            this.updateChartData(changes['data'].currentValue);\n          } else {\n            this.updateChartData(changes['datasets'].currentValue);\n          }\n\n          this.chart.update();\n        } else {\n          // otherwise rebuild the chart\n          this.refresh();\n        }\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.chart) {\n        this.chart.destroy();\n        this.chart = void 0;\n      }\n    }\n\n    getChartBuilder(ctx) {\n      const datasets = this.getDatasets();\n      const options = Object.assign({}, this.options);\n\n      if (this.legend === false) {\n        options.legend = {\n          display: false\n        };\n      } // hock for onHover and onClick events\n\n\n      options.hover = options.hover || {};\n\n      if (!options.hover.onHover) {\n        options.hover.onHover = (event, active) => {\n          if (active && active.length) {\n            this.chartHover.emit({\n              event,\n              active\n            });\n          }\n        };\n      }\n\n      if (!options.onClick) {\n        options.onClick = (event, active) => {\n          this.chartClick.emit({\n            event,\n            active\n          });\n        };\n      }\n\n      const opts = {\n        type: this.chartType,\n        data: {\n          labels: this.labels,\n          datasets: datasets\n        },\n        options: options\n      };\n      return new Chart(ctx, opts);\n    } // feature(chart): added getPointDataAtEvent which will return clicked chart's point data\n\n\n    getPointDataAtEvent(event) {\n      if (event.active.length > 0) {\n        const datasetIndex = event.active[0]._datasetIndex;\n        const dataIndex = event.active[0]._index;\n        const dataObject = this.datasets[datasetIndex].data[dataIndex];\n        return dataObject;\n      }\n    }\n\n    updateChartData(newDataValues) {\n      if (Array.isArray(newDataValues[0].data)) {\n        this.chart.data.datasets.forEach((dataset, i) => {\n          dataset.data = newDataValues[i].data;\n\n          if (newDataValues[i].label) {\n            dataset.label = newDataValues[i].label;\n          }\n        });\n      } else {\n        this.chart.data.datasets[0].data = newDataValues;\n      }\n    }\n\n    getDatasets() {\n      let datasets = void 0; // in case if datasets is not provided, but data is present\n\n      if (!this.datasets || !this.datasets.length && this.data && this.data.length) {\n        if (Array.isArray(this.data[0])) {\n          datasets = this.data.map((data, index) => {\n            return {\n              data,\n              label: this.labels[index] || `Label ${index}`\n            };\n          });\n        } else {\n          datasets = [{\n            data: this.data,\n            label: `Label 0`\n          }];\n        }\n      }\n\n      if (this.datasets && this.datasets.length || datasets && datasets.length) {\n        datasets = (this.datasets || datasets).map((elm, index) => {\n          const newElm = Object.assign({}, elm);\n\n          if (this.colors && this.colors.length) {\n            Object.assign(newElm, this.colors[index]);\n          } else {\n            Object.assign(newElm, getColors(this.chartType, index, newElm.data.length));\n          }\n\n          return newElm;\n        });\n      }\n\n      if (!datasets) {\n        throw new Error(`ng-charts configuration error,\n      data or datasets field are required to render char ${this.chartType}`);\n      }\n\n      return datasets;\n    }\n\n    refresh() {\n      this.ngOnDestroy();\n      this.chart = this.getChartBuilder(this.ctx);\n    }\n\n  }\n\n  BaseChartDirective.ɵfac = function BaseChartDirective_Factory(t) {\n    return new (t || BaseChartDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n\n  BaseChartDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: BaseChartDirective,\n    selectors: [[\"canvas\", \"mdbChart\", \"\"]],\n    inputs: {\n      labels: \"labels\",\n      options: \"options\",\n      legend: \"legend\",\n      data: \"data\",\n      datasets: \"datasets\",\n      chartType: \"chartType\",\n      colors: \"colors\"\n    },\n    outputs: {\n      chartClick: \"chartClick\",\n      chartHover: \"chartHover\"\n    },\n    exportAs: [\"mdb-base-chart\"],\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  BaseChartDirective.defaultColors = [[255, 99, 132], [54, 162, 235], [255, 206, 86], [231, 233, 237], [75, 192, 192], [151, 187, 205], [220, 220, 220], [247, 70, 74], [70, 191, 189], [253, 180, 92], [148, 159, 177], [77, 83, 96]];\n  return BaseChartDirective;\n})();\n\nfunction rgba(colour, alpha) {\n  return 'rgba(' + colour.concat(alpha).join(',') + ')';\n}\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction formatLineColor(colors) {\n  return {\n    backgroundColor: rgba(colors, 0.4),\n    borderColor: rgba(colors, 1),\n    pointBackgroundColor: rgba(colors, 1),\n    pointBorderColor: '#fff',\n    pointHoverBackgroundColor: '#fff',\n    pointHoverBorderColor: rgba(colors, 0.8)\n  };\n}\n\nfunction formatBarColor(colors) {\n  return {\n    backgroundColor: rgba(colors, 0.6),\n    borderColor: rgba(colors, 1),\n    hoverBackgroundColor: rgba(colors, 0.8),\n    hoverBorderColor: rgba(colors, 1)\n  };\n}\n\nfunction formatPieColors(colors) {\n  return {\n    backgroundColor: colors.map(color => rgba(color, 0.6)),\n    borderColor: colors.map(() => '#fff'),\n    pointBackgroundColor: colors.map(color => rgba(color, 1)),\n    pointBorderColor: colors.map(() => '#fff'),\n    pointHoverBackgroundColor: colors.map(color => rgba(color, 1)),\n    pointHoverBorderColor: colors.map(color => rgba(color, 1))\n  };\n}\n\nfunction formatPolarAreaColors(colors) {\n  return {\n    backgroundColor: colors.map(color => rgba(color, 0.6)),\n    borderColor: colors.map(color => rgba(color, 1)),\n    hoverBackgroundColor: colors.map(color => rgba(color, 0.8)),\n    hoverBorderColor: colors.map(color => rgba(color, 1))\n  };\n}\n\nfunction getRandomColor() {\n  return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\n}\n/**\r\n * Generate colors for line|bar charts\r\n */\n\n\nfunction generateColor(index) {\n  return BaseChartDirective.defaultColors[index] || getRandomColor();\n}\n/**\r\n * Generate colors for pie|doughnut charts\r\n */\n\n\nfunction generateColors(count) {\n  const colorsArr = new Array(count);\n\n  for (let i = 0; i < count; i++) {\n    colorsArr[i] = BaseChartDirective.defaultColors[i] || getRandomColor();\n  }\n\n  return colorsArr;\n}\n/**\r\n * Generate colors by chart type\r\n */\n\n\nfunction getColors(chartType, index, count) {\n  if (chartType === 'pie' || chartType === 'doughnut') {\n    return formatPieColors(generateColors(count));\n  }\n\n  if (chartType === 'polarArea') {\n    return formatPolarAreaColors(generateColors(count));\n  }\n\n  if (chartType === 'line' || chartType === 'radar') {\n    return formatLineColor(generateColor(index));\n  }\n\n  if (chartType === 'bar' || chartType === 'horizontalBar') {\n    return formatBarColor(generateColor(index));\n  }\n\n  return generateColor(index);\n}\n\nlet ChartsModule = /*#__PURE__*/(() => {\n  class ChartsModule {}\n\n  ChartsModule.ɵfac = function ChartsModule_Factory(t) {\n    return new (t || ChartsModule)();\n  };\n\n  ChartsModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ChartsModule\n  });\n  ChartsModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return ChartsModule;\n})();\nconst CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => CheckboxComponent),\n  multi: true\n};\nlet defaultIdNumber$2 = 0;\n\nclass MdbCheckboxChange {}\n\nlet CheckboxComponent = /*#__PURE__*/(() => {\n  class CheckboxComponent {\n    constructor(_cdRef) {\n      this._cdRef = _cdRef;\n      this.defaultId = `mdb-checkbox-${++defaultIdNumber$2}`;\n      this.id = this.defaultId;\n      this.checked = false;\n      this.filledIn = false;\n      this.indeterminate = false;\n      this.rounded = false;\n      this.checkboxPosition = 'left';\n      this.default = false;\n      this.inline = false;\n      this.change = new EventEmitter();\n      this.checkboxClicked = new Subject(); // Control Value Accessor Methods\n\n      this.onChange = _ => {};\n\n      this.onTouched = () => {};\n    }\n\n    onLabelClick(event) {\n      event.stopPropagation();\n      this.checkboxClicked.next(true);\n    }\n\n    onDocumentClick() {\n      this.checkboxClicked.next(false);\n    }\n\n    ngOnInit() {\n      if (this.indeterminate && !this.filledIn && !this.rounded) {\n        this.inputEl.indeterminate = true;\n      }\n    }\n\n    ngOnChanges(changes) {\n      if (changes.hasOwnProperty('checked')) {\n        this.checked = changes.checked.currentValue;\n      }\n    }\n\n    get changeEvent() {\n      const newChangeEvent = new MdbCheckboxChange();\n      newChangeEvent.element = this;\n      newChangeEvent.checked = this.checked;\n      return newChangeEvent;\n    }\n\n    toggle() {\n      if (this.disabled) {\n        return;\n      }\n\n      this.checked = !this.checked;\n      this.indeterminate = false;\n      this.onChange(this.checked);\n\n      this._cdRef.markForCheck();\n    }\n\n    onCheckboxClick(event) {\n      event.stopPropagation();\n      this.toggle();\n    }\n\n    onCheckboxChange(event) {\n      event.stopPropagation();\n      timer(0).subscribe(() => this.change.emit(this.changeEvent));\n    }\n\n    onBlur() {\n      this.checkboxClicked.pipe(take(1)).subscribe(val => {\n        if (!val) {\n          this.onTouched();\n        }\n      });\n    }\n\n    writeValue(value) {\n      this.value = value;\n      this.checked = !!value;\n\n      this._cdRef.markForCheck();\n    }\n\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n\n  }\n\n  CheckboxComponent.ɵfac = function CheckboxComponent_Factory(t) {\n    return new (t || CheckboxComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  CheckboxComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: CheckboxComponent,\n    selectors: [[\"mdb-checkbox\"]],\n    viewQuery: function CheckboxComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputEl = _t.first);\n      }\n    },\n    hostBindings: function CheckboxComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CheckboxComponent_click_HostBindingHandler($event) {\n          return ctx.onLabelClick($event);\n        })(\"click\", function CheckboxComponent_click_HostBindingHandler() {\n          return ctx.onDocumentClick();\n        }, false, ɵngcc0.ɵɵresolveDocument);\n      }\n    },\n    inputs: {\n      id: \"id\",\n      checked: \"checked\",\n      filledIn: \"filledIn\",\n      indeterminate: \"indeterminate\",\n      rounded: \"rounded\",\n      checkboxPosition: \"checkboxPosition\",\n      default: \"default\",\n      inline: \"inline\",\n      value: \"value\",\n      disabled: \"disabled\",\n      class: \"class\",\n      required: \"required\",\n      name: \"name\",\n      tabIndex: \"tabIndex\"\n    },\n    outputs: {\n      change: \"change\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([CHECKBOX_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 5,\n    vars: 27,\n    consts: [[3, \"ngClass\"], [\"type\", \"checkbox\", 1, \"custom-control-input\", 3, \"ngClass\", \"id\", \"checked\", \"disabled\", \"required\", \"indeterminate\", \"tabIndex\", \"blur\", \"click\", \"change\"], [\"input\", \"\"]],\n    template: function CheckboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"input\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"blur\", function CheckboxComponent_Template_input_blur_1_listener() {\n          return ctx.onBlur();\n        })(\"click\", function CheckboxComponent_Template_input_click_1_listener($event) {\n          return ctx.onCheckboxClick($event);\n        })(\"change\", function CheckboxComponent_Template_input_change_1_listener($event) {\n          return ctx.onCheckboxChange($event);\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"label\", 0);\n        ɵngcc0.ɵɵprojection(4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(12, _c4, ctx.default, !ctx.default, ctx.inline, ctx.inline && !ctx.default));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction3(17, _c5, ctx.filledIn || ctx.rounded, ctx.default, !ctx.default))(\"id\", ctx.id)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"required\", ctx.required)(\"indeterminate\", ctx.indeterminate)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"value\", ctx.value);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction5(21, _c6, ctx.default, !ctx.default, ctx.checkboxPosition === \"right\", ctx.rounded, ctx.disabled));\n        ɵngcc0.ɵɵattribute(\"for\", ctx.id);\n      }\n    },\n    directives: [ɵngcc1.NgClass],\n    styles: [\".form-check-label.label-before:before,.form-check-label.label-before:after{top:0!important;right:0!important;left:auto!important}.custom-control-label.label-before:before,.custom-control-label.label-before:after{top:.25rem!important;right:0!important;left:auto!important}.custom-control-label.label-before{position:absolute}.custom-control-inline .label-before{position:relative}.form-check-label.label-before{padding-left:0!important;padding-right:35px}.custom-control-label.label-before{padding-left:0!important;padding-right:25px!important}.form-check-input[type=checkbox]:checked+.label-before:before,label.btn input[type=checkbox]:checked+.label-before:before{top:-4px!important;right:10px!important;left:auto!important}.form-check-input[type=checkbox]:indeterminate+.label-before:before,label.btn input[type=checkbox]:indeterminate+.label-before:before{top:-11px!important;right:16px!important;left:auto!important}.form-check-input[type=checkbox].filled-in+.label-before:before,label.btn input[type=checkbox].filled-in+.label-before:before{top:0!important;right:10px!important;left:auto!important}.form-check-input[type=checkbox].filled-in:checked+.label-before:before,label.btn input[type=checkbox].filled-in:checked+.label-before:before{top:0!important;right:10px!important;left:auto!important}.form-check-input[type=checkbox].filled-in+.label-before:after,label.btn input[type=checkbox].filled-in+.label-before:after{top:0!important;left:auto!important}.checkbox-rounded:after{border-radius:50%!important}mdb-checkbox .form-check{padding-left:0!important}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return CheckboxComponent;\n})();\nlet CheckboxModule = /*#__PURE__*/(() => {\n  class CheckboxModule {}\n\n  CheckboxModule.ɵfac = function CheckboxModule_Factory(t) {\n    return new (t || CheckboxModule)();\n  };\n\n  CheckboxModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: CheckboxModule\n  });\n  CheckboxModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule]]\n  });\n  return CheckboxModule;\n})();\nlet CollapseComponent = /*#__PURE__*/(() => {\n  class CollapseComponent {\n    constructor(_cdRef) {\n      this._cdRef = _cdRef;\n      this.isCollapsed = true;\n      this.showBsCollapse = new EventEmitter();\n      this.shownBsCollapse = new EventEmitter();\n      this.hideBsCollapse = new EventEmitter();\n      this.hiddenBsCollapse = new EventEmitter();\n      this.collapsed = new EventEmitter();\n      this.expanded = new EventEmitter();\n      this.overflow = 'hidden';\n    }\n\n    onExpandBodyDone(event) {\n      setTimeout(() => {\n        if (event.toState === 'expanded') {\n          this.isCollapsed = false;\n          this.shownBsCollapse.emit(this);\n          this.expanded.emit(this);\n          this.overflow = 'visible';\n          this.showCaptions();\n        } else {\n          this.isCollapsed = true;\n          this.hiddenBsCollapse.emit(this);\n          this.collapsed.emit(this);\n        }\n      }, 0);\n    }\n\n    showCaptions() {\n      this.captions.forEach(caption => caption.showCaption());\n    }\n\n    toggle() {\n      this.isCollapsed ? this.show() : this.hide();\n    }\n\n    show() {\n      this.expandAnimationState = 'expanded';\n      this.showBsCollapse.emit(this);\n\n      this._cdRef.markForCheck();\n    }\n\n    hide() {\n      this.overflow = 'hidden';\n      this.expandAnimationState = 'collapsed';\n      this.hideBsCollapse.emit(this);\n\n      this._cdRef.markForCheck();\n    }\n\n    initializeCollapseState() {\n      this.isCollapsed ? this.hide() : this.show();\n    }\n\n    ngOnInit() {\n      this.initializeCollapseState();\n    }\n\n  }\n\n  CollapseComponent.ɵfac = function CollapseComponent_Factory(t) {\n    return new (t || CollapseComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  CollapseComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: CollapseComponent,\n    selectors: [[\"\", \"mdbCollapse\", \"\"]],\n    contentQueries: function CollapseComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, FixedButtonCaptionDirective, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.captions = _t);\n      }\n    },\n    hostVars: 3,\n    hostBindings: function CollapseComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@expandBody.done\", function CollapseComponent_animation_expandBody_done_HostBindingHandler($event) {\n          return ctx.onExpandBodyDone($event);\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@expandBody\", ctx.expandAnimationState);\n        ɵngcc0.ɵɵstyleProp(\"overflow\", ctx.overflow);\n      }\n    },\n    inputs: {\n      isCollapsed: \"isCollapsed\"\n    },\n    outputs: {\n      showBsCollapse: \"showBsCollapse\",\n      shownBsCollapse: \"shownBsCollapse\",\n      hideBsCollapse: \"hideBsCollapse\",\n      hiddenBsCollapse: \"hiddenBsCollapse\",\n      collapsed: \"collapsed\",\n      expanded: \"expanded\"\n    },\n    exportAs: [\"bs-collapse\"],\n    attrs: _c7,\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function CollapseComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    data: {\n      animation: [trigger('expandBody', [state('collapsed', style({\n        height: '0px'\n      })), state('expanded', style({\n        height: '*'\n      })), transition('expanded <=> collapsed', animate('500ms ease'))])]\n    },\n    changeDetection: 0\n  });\n  return CollapseComponent;\n})();\nlet CollapseModule = /*#__PURE__*/(() => {\n  class CollapseModule {\n    static forRoot() {\n      return {\n        ngModule: CollapseModule,\n        providers: []\n      };\n    }\n\n  }\n\n  CollapseModule.ɵfac = function CollapseModule_Factory(t) {\n    return new (t || CollapseModule)();\n  };\n\n  CollapseModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: CollapseModule\n  });\n  CollapseModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  /**\r\n   * @copyright Valor Software\r\n   * @copyright Angular ng-bootstrap team\r\n   */\n\n  return CollapseModule;\n})();\n\nclass Trigger$1 {\n  constructor(open, close) {\n    this.open = open;\n    this.close = close || open;\n  }\n\n  isManual() {\n    return this.open === 'manual' || this.close === 'manual';\n  }\n\n}\n\nconst DEFAULT_ALIASES = {\n  hover: ['mouseover', 'mouseout'],\n  focus: ['focusin', 'focusout']\n};\n/* tslint:disable-next-line: no-any */\n\nfunction parseTriggers(triggers, aliases = DEFAULT_ALIASES) {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map(triggerPair => {\n    const alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger$1(alias[0], alias[1]);\n  });\n  const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw new Error('Triggers parse error: only one manual trigger is allowed');\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw new Error('Triggers parse error: manual trigger can\\'t be mixed with other triggers');\n  }\n\n  return parsedTriggers;\n}\n\nfunction listenToTriggers(renderer,\n/* tslint:disable-next-line: no-any */\ntarget, triggers, showFn, hideFn, toggleFn) {\n  const parsedTriggers = parseTriggers(triggers);\n  /* tslint:disable-next-line: no-any */\n\n  const listeners = [];\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  }\n\n  parsedTriggers.forEach(trigger => {\n    if (trigger.open === trigger.close) {\n      listeners.push(renderer.listen(target, trigger.open, toggleFn));\n      return;\n    }\n\n    listeners.push(renderer.listen(target, trigger.open, showFn), renderer.listen(target, trigger.close, hideFn));\n  });\n  return () => {\n    listeners.forEach(unsubscribeFn => unsubscribeFn());\n  };\n}\n\nfunction listenToTriggersV2(renderer, options) {\n  const parsedTriggers = parseTriggers(options.triggers);\n  const target = options.target; // do nothing\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return Function.prototype;\n  } // all listeners\n\n  /* tslint:disable-next-line: no-any */\n\n\n  const listeners = []; // lazy listeners registration\n\n  const _registerHide = [];\n\n  const registerHide = () => {\n    // add hide listeners to unregister array\n    _registerHide.forEach(fn => listeners.push(fn())); // register hide events only once\n\n\n    _registerHide.length = 0;\n  }; // register open\\close\\toggle listeners\n\n\n  parsedTriggers.forEach(trigger => {\n    const useToggle = trigger.open === trigger.close;\n    const showFn = useToggle ? options.toggle : options.show;\n\n    if (!useToggle) {\n      _registerHide.push(() => renderer.listen(target, trigger.close, options.hide));\n    }\n\n    listeners.push(renderer.listen(target, trigger.open, () => showFn(registerHide)));\n  });\n  return () => {\n    listeners.forEach(unsubscribeFn => unsubscribeFn());\n  };\n}\n\nfunction registerOutsideClick(renderer, options) {\n  if (!options.outsideClick) {\n    return Function.prototype;\n  }\n  /* tslint:disable-next-line: no-any */\n\n\n  return renderer.listen('document', 'click', event => {\n    if (options.target && options.target.contains(event.target)) {\n      return undefined;\n    }\n\n    if (options.targets && options.targets.some(target => target.contains(event.target))) {\n      return undefined;\n    }\n\n    options.hide();\n  });\n}\n\nfunction registerEscClick(renderer, options) {\n  if (!options.outsideEsc) {\n    return Function.prototype;\n  }\n\n  return renderer.listen('document', 'keyup.esc', event => {\n    if (options.target && options.target.contains(event.target)) {\n      return undefined;\n    }\n\n    if (options.targets && options.targets.some(target => target.contains(event.target))) {\n      return undefined;\n    }\n\n    options.hide();\n  });\n}\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\n\n/**\r\n * JS version of browser APIs. This library can only run in the browser.\r\n */\n\n\nconst win = typeof window !== 'undefined' && window || {};\nconst document$1 = win.document;\nconst location = win.location;\nconst gc = win.gc ? () => win.gc() : () => null;\nconst performance = win.performance ? win.performance : null;\nconst Event = win.Event;\nconst MouseEvent = win.MouseEvent;\nconst KeyboardEvent = win.KeyboardEvent;\nconst EventTarget = win.EventTarget;\nconst History = win.History;\nconst Location = win.Location;\nconst EventListener = win.EventListener;\nlet guessedVersion;\n\nfunction _guessBsVersion() {\n  if (typeof document === 'undefined') {\n    return null;\n  }\n\n  const spanEl = document.createElement('span');\n  spanEl.innerText = 'test bs version';\n  document.body.appendChild(spanEl);\n  spanEl.classList.add('d-none');\n  const rect = spanEl.getBoundingClientRect();\n  document.body.removeChild(spanEl);\n\n  if (!rect) {\n    return 'bs3';\n  }\n\n  return rect.top === 0 ? 'bs4' : 'bs3';\n}\n\nfunction setTheme(theme) {\n  guessedVersion = theme;\n} // todo: in ngx-bootstrap, bs4 will became a default one\n\n\nfunction isBs3() {\n  if (typeof win === 'undefined') {\n    return true;\n  }\n\n  if (typeof win.__theme === 'undefined') {\n    if (guessedVersion) {\n      return guessedVersion === 'bs3';\n    }\n\n    guessedVersion = _guessBsVersion();\n    return guessedVersion === 'bs3';\n  }\n\n  return win.__theme !== 'bs4';\n}\n\nclass LinkedList$1 {\n  constructor() {\n    this.length = 0;\n    this.asArray = []; // Array methods overriding END\n  }\n\n  get(position) {\n    if (this.length === 0 || position < 0 || position >= this.length) {\n      return void 0;\n    }\n\n    let current = this.head;\n\n    for (let index = 0; index < position; index++) {\n      current = current.next;\n    }\n\n    return current.value;\n  }\n\n  add(value, position = this.length) {\n    if (position < 0 || position > this.length) {\n      throw new Error('Position is out of the list');\n    }\n    /* tslint:disable-next-line: no-any*/\n\n\n    const node = {\n      value,\n      next: undefined,\n      previous: undefined\n    };\n\n    if (this.length === 0) {\n      this.head = node;\n      this.tail = node;\n      this.current = node;\n    } else {\n      if (position === 0) {\n        // first node\n        node.next = this.head;\n        this.head.previous = node;\n        this.head = node;\n      } else if (position === this.length) {\n        // last node\n        this.tail.next = node;\n        node.previous = this.tail;\n        this.tail = node;\n      } else {\n        // node in middle\n        const currentPreviousNode = this.getNode(position - 1);\n        const currentNextNode = currentPreviousNode.next;\n        currentPreviousNode.next = node;\n        currentNextNode.previous = node;\n        node.previous = currentPreviousNode;\n        node.next = currentNextNode;\n      }\n    }\n\n    this.length++;\n    this.createInternalArrayRepresentation();\n  }\n\n  remove(position = 0) {\n    if (this.length === 0 || position < 0 || position >= this.length) {\n      throw new Error('Position is out of the list');\n    }\n\n    if (position === 0) {\n      // first node\n      this.head = this.head.next;\n\n      if (this.head) {\n        // there is no second node\n        this.head.previous = undefined;\n      } else {\n        // there is no second node\n        this.tail = undefined;\n      }\n    } else if (position === this.length - 1) {\n      // last node\n      this.tail = this.tail.previous;\n      this.tail.next = undefined;\n    } else {\n      // middle node\n      const removedNode = this.getNode(position);\n      removedNode.next.previous = removedNode.previous;\n      removedNode.previous.next = removedNode.next;\n    }\n\n    this.length--;\n    this.createInternalArrayRepresentation();\n  }\n\n  set(position, value) {\n    if (this.length === 0 || position < 0 || position >= this.length) {\n      throw new Error('Position is out of the list');\n    }\n\n    const node = this.getNode(position);\n    node.value = value;\n    this.createInternalArrayRepresentation();\n  }\n\n  toArray() {\n    return this.asArray;\n  }\n  /* tslint:disable-next-line: no-any*/\n\n\n  findAll(fn) {\n    let current = this.head;\n    /* tslint:disable-next-line: no-any*/\n\n    const result = [];\n\n    for (let index = 0; index < this.length; index++) {\n      if (fn(current.value, index)) {\n        result.push({\n          index,\n          value: current.value\n        });\n      }\n\n      current = current.next;\n    }\n\n    return result;\n  } // Array methods overriding start\n\n\n  push(...args) {\n    /* tslint:disable-next-line: no-any*/\n    args.forEach(arg => {\n      this.add(arg);\n    });\n    return this.length;\n  }\n\n  pop() {\n    if (this.length === 0) {\n      return undefined;\n    }\n\n    const last = this.tail;\n    this.remove(this.length - 1);\n    return last.value;\n  }\n\n  unshift(...args) {\n    args.reverse();\n    /* tslint:disable-next-line: no-any*/\n\n    args.forEach(arg => {\n      this.add(arg, 0);\n    });\n    return this.length;\n  }\n\n  shift() {\n    if (this.length === 0) {\n      return undefined;\n    }\n\n    const lastItem = this.head.value;\n    this.remove();\n    return lastItem;\n  }\n  /* tslint:disable-next-line: no-any*/\n\n\n  forEach(fn) {\n    let current = this.head;\n\n    for (let index = 0; index < this.length; index++) {\n      fn(current.value, index);\n      current = current.next;\n    }\n  }\n\n  indexOf(value) {\n    let current = this.head;\n    let position = 0;\n\n    for (let index = 0; index < this.length; index++) {\n      if (current.value === value) {\n        position = index;\n        break;\n      }\n\n      current = current.next;\n    }\n\n    return position;\n  }\n  /* tslint:disable-next-line: no-any*/\n\n\n  some(fn) {\n    let current = this.head;\n    let result = false;\n\n    while (current && !result) {\n      if (fn(current.value)) {\n        result = true;\n        break;\n      }\n\n      current = current.next;\n    }\n\n    return result;\n  }\n  /* tslint:disable-next-line: no-any*/\n\n\n  every(fn) {\n    let current = this.head;\n    let result = true;\n\n    while (current && result) {\n      if (!fn(current.value)) {\n        result = false;\n      }\n\n      current = current.next;\n    }\n\n    return result;\n  }\n\n  toString() {\n    return '[Linked List]';\n  }\n  /* tslint:disable-next-line: no-any*/\n\n\n  find(fn) {\n    let current = this.head;\n    let result;\n\n    for (let index = 0; index < this.length; index++) {\n      if (fn(current.value, index)) {\n        result = current.value;\n        break;\n      }\n\n      current = current.next;\n    }\n\n    return result;\n  }\n  /* tslint:disable-next-line: no-any*/\n\n\n  findIndex(fn) {\n    let current = this.head;\n    let result;\n\n    for (let index = 0; index < this.length; index++) {\n      if (fn(current.value, index)) {\n        result = index;\n        break;\n      }\n\n      current = current.next;\n    }\n\n    return result;\n  }\n  /* tslint:disable-next-line: no-any*/\n\n\n  getNode(position) {\n    if (this.length === 0 || position < 0 || position >= this.length) {\n      throw new Error('Position is out of the list');\n    }\n\n    let current = this.head;\n\n    for (let index = 0; index < position; index++) {\n      current = current.next;\n    }\n\n    return current;\n  }\n\n  createInternalArrayRepresentation() {\n    /* tslint:disable-next-line: no-any*/\n    const outArray = [];\n    let current = this.head;\n\n    while (current) {\n      outArray.push(current.value);\n      current = current.next;\n    }\n\n    this.asArray = outArray;\n  }\n\n}\n/*tslint:disable:no-invalid-this */\n\n/* tslint:disable-next-line: no-any */\n\n\nfunction OnChange$1() {\n  const sufix = 'Change';\n  /* tslint:disable-next-line: no-any */\n\n  return function OnChangeHandler(target, propertyKey) {\n    const _key = ` __${propertyKey}Value`;\n    Object.defineProperty(target, propertyKey, {\n      /* tslint:disable-next-line: no-any */\n      get() {\n        return this[_key];\n      },\n\n      /* tslint:disable-next-line: no-any */\n      set(value) {\n        const prevValue = this[_key];\n        this[_key] = value;\n\n        if (prevValue !== value && this[propertyKey + sufix]) {\n          this[propertyKey + sufix].emit(value);\n        }\n      }\n\n    });\n  };\n}\n/* tslint:enable */\n\n\nclass Utils$1 {\n  /* tslint:disable-next-line: no-any */\n  static reflow(element) {\n    /* tslint:disable-next-line: no-any */\n    (bs => bs)(element.offsetHeight);\n  } // source: https://github.com/jquery/jquery/blob/master/src/css/var/getStyles.js\n\n  /* tslint:disable-next-line: no-any */\n\n\n  static getStyles(elem) {\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    let view = elem.ownerDocument.defaultView;\n\n    if (!view || !view.opener) {\n      view = win;\n    }\n\n    return view.getComputedStyle(elem);\n  }\n\n}\n\nconst _messagesHash = {};\n\nconst _hideMsg = typeof console === 'undefined' || !('warn' in console);\n\nfunction warnOnce(msg) {\n  if (!isDevMode() || _hideMsg || msg in _messagesHash) {\n    return;\n  }\n\n  _messagesHash[msg] = true;\n  /*tslint:disable-next-line*/\n\n  console.warn(msg);\n}\n/**\r\n * @copyright Valor Software\r\n * @copyright Angular ng-bootstrap team\r\n */\n\n\nclass ContentRef {\n  constructor(\n  /* tslint:disable-next-line: no-any */\n  nodes, viewRef,\n  /* tslint:disable-next-line: no-any */\n  componentRef) {\n    this.nodes = nodes;\n    this.viewRef = viewRef;\n    this.componentRef = componentRef;\n  }\n\n} // tslint:disable:max-file-line-count\n\n\nclass ComponentLoader {\n  /**\r\n   * Do not use this directly, it should be instanced via\r\n   * `ComponentLoadFactory.attach`\r\n   * @internal\r\n   */\n  // tslint:disable-next-line\n  constructor(_viewContainerRef, _renderer, _elementRef, _injector, _componentFactoryResolver, _ngZone, _applicationRef, _posService) {\n    this._viewContainerRef = _viewContainerRef;\n    this._renderer = _renderer;\n    this._elementRef = _elementRef;\n    this._injector = _injector;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._ngZone = _ngZone;\n    this._applicationRef = _applicationRef;\n    this._posService = _posService;\n    this.onBeforeShow = new EventEmitter();\n    /* tslint:disable-next-line: no-any*/\n\n    this.onShown = new EventEmitter();\n    /* tslint:disable-next-line: no-any*/\n\n    this.onBeforeHide = new EventEmitter();\n    this.onHidden = new EventEmitter();\n    this.shown = new EventEmitter();\n    this.hidden = new EventEmitter();\n    this._providers = [];\n    this._isHiding = false;\n    /**\r\n     * A selector used if container element was not found\r\n     */\n\n    this.containerDefaultSelector = 'body';\n    this._listenOpts = {};\n    this._globalListener = Function.prototype;\n  }\n\n  get isShown() {\n    if (this._isHiding) {\n      return false;\n    }\n\n    return !!this._componentRef;\n  }\n\n  attach(compType) {\n    this._componentFactory = this._componentFactoryResolver.resolveComponentFactory(compType);\n    return this;\n  } // todo: add behaviour: to target element, `body`, custom element\n\n\n  to(container) {\n    this.container = container || this.container;\n    return this;\n  }\n\n  position(opts) {\n    this.attachment = opts.attachment || this.attachment;\n    this._elementRef = opts.target || this._elementRef;\n    return this;\n  }\n\n  provide(provider) {\n    this._providers.push(provider);\n\n    return this;\n  } // todo: appendChild to element or document.querySelector(this.container)\n\n\n  show(opts = {}) {\n    this._subscribePositioning();\n\n    this._innerComponent = null;\n\n    if (!this._componentRef) {\n      this.onBeforeShow.emit();\n      this._contentRef = this._getContentRef(opts.content, opts.data);\n      const injector = Injector.create({\n        providers: this._providers,\n        parent: this._injector\n      });\n      this._componentRef = this._componentFactory.create(injector, this._contentRef.nodes);\n\n      this._applicationRef.attachView(this._componentRef.hostView); // this._componentRef = this._viewContainerRef\n      //   .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\n\n\n      this.instance = this._componentRef.instance;\n      Object.assign(this._componentRef.instance, opts);\n\n      if (this.container instanceof ElementRef) {\n        this.container.nativeElement.appendChild(this._componentRef.location.nativeElement);\n      }\n\n      if (typeof this.container === 'string' && typeof document !== 'undefined') {\n        const selectedElement = document.querySelector(this.container) || document.querySelector(this.containerDefaultSelector);\n\n        if (selectedElement) {\n          selectedElement.appendChild(this._componentRef.location.nativeElement);\n        }\n      }\n\n      if (!this.container && this._elementRef && this._elementRef.nativeElement.parentElement) {\n        this._elementRef.nativeElement.parentElement.appendChild(this._componentRef.location.nativeElement);\n      } // we need to manually invoke change detection since events registered\n      // via\n      // Renderer::listen() are not picked up by change detection with the\n      // OnPush strategy\n\n\n      if (this._contentRef.componentRef) {\n        this._innerComponent = this._contentRef.componentRef.instance;\n\n        this._contentRef.componentRef.changeDetectorRef.markForCheck();\n\n        this._contentRef.componentRef.changeDetectorRef.detectChanges();\n      }\n\n      this._componentRef.changeDetectorRef.markForCheck();\n\n      this._componentRef.changeDetectorRef.detectChanges();\n\n      this.onShown.emit(this._componentRef.instance);\n    }\n\n    this._registerOutsideClick();\n\n    return this._componentRef;\n  }\n\n  hide() {\n    if (!this._componentRef) {\n      return this;\n    }\n\n    this._posService.deletePositionElement(this._componentRef.location);\n\n    this.onBeforeHide.emit(this._componentRef.instance);\n    const componentEl = this._componentRef.location.nativeElement;\n    componentEl.parentNode.removeChild(componentEl);\n\n    if (this._contentRef.componentRef) {\n      this._contentRef.componentRef.destroy();\n    }\n\n    this._componentRef.destroy();\n\n    if (this._viewContainerRef && this._contentRef.viewRef) {\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n    }\n\n    if (this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n\n    this._contentRef = null;\n    this._componentRef = null;\n\n    this._removeGlobalListener();\n\n    this.onHidden.emit();\n    return this;\n  }\n\n  toggle() {\n    if (this.isShown) {\n      this.hide();\n      return;\n    }\n\n    this.show();\n  }\n\n  dispose() {\n    if (this.isShown) {\n      this.hide();\n    }\n\n    this._unsubscribePositioning();\n\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n  }\n\n  listen(listenOpts) {\n    this.triggers = listenOpts.triggers || this.triggers;\n    this._listenOpts.outsideClick = listenOpts.outsideClick;\n    this._listenOpts.outsideEsc = listenOpts.outsideEsc;\n    listenOpts.target = listenOpts.target || this._elementRef.nativeElement;\n\n    const hide = this._listenOpts.hide = () => listenOpts.hide ? listenOpts.hide() : void this.hide();\n\n    const show = this._listenOpts.show = registerHide => {\n      listenOpts.show ? listenOpts.show(registerHide) : this.show(registerHide);\n      registerHide();\n    };\n\n    const toggle = registerHide => {\n      this.isShown ? hide() : show(registerHide);\n    };\n\n    this._unregisterListenersFn = listenToTriggersV2(this._renderer, {\n      target: listenOpts.target,\n      triggers: listenOpts.triggers,\n      show,\n      hide,\n      toggle\n    });\n    return this;\n  }\n\n  _removeGlobalListener() {\n    if (this._globalListener) {\n      this._globalListener();\n\n      this._globalListener = null;\n    }\n  }\n\n  attachInline(vRef,\n  /* tslint:disable-next-line: no-any*/\n  template) {\n    this._inlineViewRef = vRef.createEmbeddedView(template);\n    return this;\n  }\n\n  _registerOutsideClick() {\n    if (!this._componentRef || !this._componentRef.location) {\n      return;\n    } // why: should run after first event bubble\n\n\n    if (this._listenOpts && this._listenOpts.outsideClick) {\n      const target = this._componentRef.location.nativeElement;\n      setTimeout(() => {\n        this._globalListener = registerOutsideClick(this._renderer, {\n          targets: [target, this._elementRef.nativeElement],\n          outsideClick: this._listenOpts.outsideClick,\n          hide: () => this._listenOpts.hide()\n        });\n      });\n    }\n\n    if (this._listenOpts.outsideEsc) {\n      const target = this._componentRef.location.nativeElement;\n      this._globalListener = registerEscClick(this._renderer, {\n        targets: [target, this._elementRef.nativeElement],\n        outsideEsc: this._listenOpts.outsideEsc,\n        hide: () => this._listenOpts.hide()\n      });\n    }\n  }\n\n  getInnerComponent() {\n    return this._innerComponent;\n  }\n\n  _subscribePositioning() {\n    if (this._zoneSubscription || !this.attachment) {\n      return;\n    }\n\n    this.onShown.subscribe(() => {\n      this._posService.position({\n        element: this._componentRef.location,\n        target: this._elementRef,\n        attachment: this.attachment,\n        appendToBody: this.container === 'body'\n      });\n    });\n    this._zoneSubscription = this._ngZone.onStable.subscribe(() => {\n      if (!this._componentRef) {\n        return;\n      }\n\n      this._posService.calcPosition();\n    });\n  }\n\n  _unsubscribePositioning() {\n    if (!this._zoneSubscription) {\n      return;\n    }\n\n    this._zoneSubscription.unsubscribe();\n\n    this._zoneSubscription = null;\n  }\n\n  _getContentRef(\n  /* tslint:disable-next-line: no-any*/\n  content,\n  /* tslint:disable-next-line: no-any*/\n  data) {\n    if (!content) {\n      return new ContentRef([]);\n    }\n\n    if (content instanceof TemplateRef) {\n      if (this._viewContainerRef) {\n        const _viewRef = this._viewContainerRef.createEmbeddedView(content);\n\n        _viewRef.markForCheck();\n\n        return new ContentRef([_viewRef.rootNodes], _viewRef);\n      }\n\n      const viewRef = content.createEmbeddedView({});\n\n      this._applicationRef.attachView(viewRef);\n\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n\n    if (typeof content === 'function') {\n      const contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(content);\n\n      const modalContentInjector = Injector.create({\n        providers: this._providers,\n        parent: this._injector\n      });\n      const componentRef = contentCmptFactory.create(modalContentInjector);\n      Object.assign(componentRef.instance, data);\n\n      this._applicationRef.attachView(componentRef.hostView);\n\n      return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\n    }\n\n    return new ContentRef([[this._renderer.createText(`${content}`)]]);\n  }\n\n}\n/**\r\n * Get CSS computed property of the given element\r\n */\n\n\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  } // NOTE: 1 DOM access here\n\n\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n/**\r\n * Returns the parentNode or the host of the element\r\n */\n\n\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n\n  return element.parentNode || element.host;\n}\n/**\r\n * Returns the scrolling parent of the given element\r\n */\n\n\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n\n    case '#document':\n      return element.body;\n\n    default:\n  } // Firefox want us to check `-x` and `-y` variations as well\n\n\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = getStyleComputedProperty(element);\n\n  if (/(auto|scroll|overlay)/.test(String(overflow) + String(overflowY) + String(overflowX))) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nconst isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n/**\r\n * Determines if the browser is Internet Explorer\r\n */\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && !!(window.MSInputMethodContext && /MSIE 10/.test(navigator.userAgent));\n\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n\n  if (version === 10) {\n    return isIE10;\n  }\n\n  return isIE11 || isIE10;\n}\n/**\r\n * Returns the offset parent of the given element\r\n */\n\n\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null; // NOTE: 1 DOM access here\n\n  let offsetParent = element.offsetParent || null; // Skip hidden elements which don't have an offsetParent\n\n  let sibling;\n\n  while (offsetParent === noOffsetParent && element.nextElementSibling && element.nodeName !== 'BODY') {\n    sibling = element.nextElementSibling;\n    offsetParent = sibling.offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return sibling ? sibling.ownerDocument.documentElement : document.documentElement;\n  } // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n\n\n  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  const {\n    nodeName\n  } = element;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n/**\r\n * Finds the root node (document, shadowDOM root) of the given element\r\n */\n\n\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n/**\r\n * Finds the offset parent common to the two provided nodes\r\n */\n\n\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  } // Here we make sure to give as \"start\" the element that comes first in the DOM\n\n  /* tslint:disable-next-line: no-bitwise */\n\n\n  const order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1; // Get common ancestor container\n\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const {\n    commonAncestorContainer\n  } = range; // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  } // one of the nodes is inside shadowDOM, find which one\n\n\n  const element1root = getRoot(element1);\n\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n/**\r\n * Helper to detect borders of a given element\r\n */\n\n\nfunction getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n  return parseFloat(styles[`border${sideA}Width`]) + parseFloat(styles[`border${sideB}Width`]);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body[`offset${axis}`], body[`scroll${axis}`], html[`client${axis}`], html[`offset${axis}`], html[`scroll${axis}`], isIE(10) ? parseInt(html[`offset${axis}`], 10) + parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`], 10) + parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`], 10) : 0);\n}\n\nfunction getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n/**\r\n * Gets the scroll value of the given element in the given side (top and left)\r\n */\n\n\nfunction getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\nfunction getClientRect(offsets) {\n  return Object.assign(Object.assign({}, offsets), {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n/**\r\n * Get bounding client rect of given element\r\n */\n\n\nfunction getBoundingClientRect(element) {\n  let rect = {}; // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {\n    return undefined;\n  }\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  }; // subtract scrollbar size from sizes\n\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width = sizes.width || element.clientWidth || result.right - result.left;\n  const height = sizes.height || element.clientHeight || result.bottom - result.top;\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height; // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n/**\r\n * Sum or subtract the element scroll values (left and top) from a given rect object\r\n */\n\n\nfunction includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = isIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth); // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0; // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop);\n    const marginLeft = parseFloat(styles.marginLeft);\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft; // Attach marginTop and marginLeft because in some circumstances we may need them\n\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n  const offset = {\n    top: scrollTop - Number(relativeOffset.top) + Number(relativeOffset.marginTop),\n    left: scrollLeft - Number(relativeOffset.left) + Number(relativeOffset.marginLeft),\n    width,\n    height\n  };\n  return getClientRect(offset);\n}\n/**\r\n * Check if the given element is fixed or is inside a fixed parent\r\n */\n\n\nfunction isFixed(element) {\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n\n  return isFixed(getParentNode(element));\n}\n/**\r\n * Finds the first parent of an element that has a transformed property defined\r\n */\n\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n\n  let el = element.parentElement;\n\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n\n  return el || document.documentElement;\n}\n/**\r\n * Computed the boundaries limits and return them\r\n */\n\n\nfunction getBoundaries(target, host, padding = 0, boundariesElement, fixedPosition = false) {\n  // NOTE: 1 DOM access here\n  let boundaries = {\n    top: 0,\n    left: 0\n  };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(target) : findCommonOffsetParent(target, host); // Handle viewport case\n\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(host));\n\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = target.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = target.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition); // In case of HTML, we need a different computation\n\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const {\n        height,\n        width\n      } = getWindowSizes(target.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = Number(height) + Number(offsets.top);\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = Number(width) + Number(offsets.left);\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  } // Add paddings\n\n\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n  return boundaries;\n}\n/**\r\n * Utility used to transform the `auto` placement to the placement with more\r\n * available space.\r\n */\n\n\nfunction getArea({\n  width,\n  height\n}) {\n  return width * height;\n}\n\nfunction computeAutoPlacement(placement, refRect, target, host, allowedPositions = ['top', 'left', 'bottom', 'right'], boundariesElement = 'viewport', padding = 0) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(target, host, padding, boundariesElement);\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n  const sortedAreas = Object.keys(rects).map(key => Object.assign(Object.assign({\n    key\n  }, rects[key]), {\n    area: getArea(rects[key])\n  })).sort((a, b) => b.area - a.area);\n  let filteredAreas = sortedAreas.filter(({\n    width,\n    height\n  }) => width >= target.clientWidth && height >= target.clientHeight);\n  filteredAreas = allowedPositions.reduce((obj, key) => {\n    return Object.assign(Object.assign({}, obj), {\n      [key]: filteredAreas[key]\n    });\n  }, {});\n  const computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n  const variation = placement.split(' ')[1];\n  target.className = target.className.replace(/auto/g, computedPlacement);\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n\nfunction getOffsets(data) {\n  return {\n    width: data.offsets.target.width,\n    height: data.offsets.target.height,\n    left: Math.floor(data.offsets.target.left),\n    top: Math.round(data.offsets.target.top),\n    bottom: Math.round(data.offsets.target.bottom),\n    right: Math.floor(data.offsets.target.right)\n  };\n}\n/**\r\n * Get the opposite placement of the given one\r\n */\n\n\nfunction getOppositePlacement(placement) {\n  const hash = {\n    left: 'right',\n    right: 'left',\n    bottom: 'top',\n    top: 'bottom'\n  };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n/**\r\n * Get the opposite placement variation of the given one\r\n */\n\n\nfunction getOppositeVariation(variation) {\n  if (variation === 'right') {\n    return 'left';\n  } else if (variation === 'left') {\n    return 'right';\n  }\n\n  return variation;\n}\n/**\r\n * Get the outer sizes of the given element (offset size + margins)\r\n */\n\n\nfunction getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  return {\n    width: Number(element.offsetWidth) + y,\n    height: Number(element.offsetHeight) + x\n  };\n}\n/**\r\n * Get offsets to the reference element\r\n */\n\n\nfunction getReferenceOffsets(target, host, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(target) : findCommonOffsetParent(target, host);\n  return getOffsetRectRelativeToArbitraryNode(host, commonOffsetParent, fixedPosition);\n}\n/**\r\n * Get offsets to the target\r\n */\n\n\nfunction getTargetOffsets(target, hostOffsets, position) {\n  const placement = position.split(' ')[0]; // Get target node sizes\n\n  const targetRect = getOuterSizes(target); // Add position, width and height to our offsets object\n\n  const targetOffsets = {\n    width: targetRect.width,\n    height: targetRect.height\n  }; // depending by the target placement we have to compute its offsets slightly differently\n\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n  targetOffsets[mainSide] = hostOffsets[mainSide] + hostOffsets[measurement] / 2 - targetRect[measurement] / 2;\n  targetOffsets[secondarySide] = placement === secondarySide ? hostOffsets[secondarySide] - targetRect[secondaryMeasurement] : hostOffsets[getOppositePlacement(secondarySide)];\n  return targetOffsets;\n}\n/**\r\n * Helper used to know if the given modifier is enabled.\r\n */\n\n\nfunction isModifierEnabled(options, modifierName) {\n  return options && options.modifiers && options.modifiers[modifierName] && options.modifiers[modifierName].enabled;\n}\n/**\r\n * Tells if a given input is a number\r\n */\n\n\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nfunction setStyles(element, styles, renderer) {\n  Object.keys(styles).forEach(prop => {\n    let unit = ''; // add unit if the value is numeric and is one of the following\n\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n\n    if (renderer) {\n      renderer.setStyle(element, prop, `${String(styles[prop])}${unit}`);\n      return;\n    }\n\n    element.style[prop] = String(styles[prop]) + unit;\n  });\n}\n\nfunction setAllStyles(data, renderer) {\n  const target = data.instance.target;\n  const offsets = getOffsets(data);\n  setStyles(target, {\n    'will-change': 'transform',\n    top: '0px',\n    left: '0px',\n    transform: `translate3d(${offsets.left}px, ${offsets.top}px, 0px)`\n  }, renderer);\n\n  if (data.instance.arrow) {\n    setStyles(data.instance.arrow, data.offsets.arrow, renderer);\n  }\n\n  if (data.placementAuto) {\n    if (renderer) {\n      renderer.setAttribute(target, 'class', target.className.replace(/bs-popover-auto/g, `bs-popover-${data.placement}`));\n      renderer.setAttribute(target, 'class', target.className.replace(/bs-tooltip-auto/g, `bs-tooltip-${data.placement}`));\n      renderer.setAttribute(target, 'class', target.className.replace(/\\sauto/g, `\\s${data.placement}`));\n\n      if (target.className.match(/popover/g)) {\n        renderer.addClass(target, 'popover-auto');\n      }\n\n      if (target.className.match(/tooltip/g)) {\n        renderer.addClass(target, 'tooltip-auto');\n      }\n    } else {\n      target.className = target.className.replace(/bs-popover-auto/g, `bs-popover-${data.placement}`);\n      target.className = target.className.replace(/bs-tooltip-auto/g, `bs-tooltip-${data.placement}`);\n      target.className = target.className.replace(/\\sauto/g, `\\s${data.placement}`);\n\n      if (target.className.match(/popover/g)) {\n        target.classList.add('popover-auto');\n      }\n\n      if (target.className.match(/tooltip/g)) {\n        target.classList.add('tooltip-auto');\n      }\n    }\n  }\n\n  if (renderer) {\n    renderer.setAttribute(target, 'class', target.className.replace(/left|right|top|bottom/g, `${data.placement.split(' ')[0]}`));\n  } else {\n    target.className = target.className.replace(/left|right|top|bottom/g, `${data.placement.split(' ')[0]}`);\n  }\n}\n\nfunction arrow(data) {\n  let targetOffsets = data.offsets.target; // if arrowElement is a string, suppose it's a CSS selector\n\n  const arrowElement = data.instance.target.querySelector('.arrow'); // if arrowElement is not found, don't run the modifier\n\n  if (!arrowElement) {\n    return data;\n  }\n\n  const isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len]; // top/left side\n\n  if (data.offsets.host[opSide] - arrowElementSize < targetOffsets[side]) {\n    targetOffsets[side] -= targetOffsets[side] - (data.offsets.host[opSide] - arrowElementSize);\n  } // bottom/right side\n\n\n  if (Number(data.offsets.host[side]) + Number(arrowElementSize) > targetOffsets[opSide]) {\n    targetOffsets[side] += Number(data.offsets.host[side]) + Number(arrowElementSize) - Number(targetOffsets[opSide]);\n  }\n\n  targetOffsets = getClientRect(targetOffsets); // compute center of the target\n\n  const center = Number(data.offsets.host[side]) + Number(data.offsets.host[len] / 2 - arrowElementSize / 2); // Compute the sideValue using the updated target offsets\n  // take target margin in account because we don't have this info available\n\n  const css = getStyleComputedProperty(data.instance.target);\n  const targetMarginSide = parseFloat(css[`margin${sideCapitalized}`]);\n  const targetBorderSide = parseFloat(css[`border${sideCapitalized}Width`]);\n  let sideValue = center - targetOffsets[side] - targetMarginSide - targetBorderSide; // prevent arrowElement from being placed not contiguously to its target\n\n  sideValue = Math.max(Math.min(targetOffsets[len] - arrowElementSize, sideValue), 0);\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '' // make sure to unset any eventual altSide value from the DOM node\n\n  };\n  data.instance.arrow = arrowElement;\n  return data;\n}\n\nfunction flip(data) {\n  data.offsets.target = getClientRect(data.offsets.target);\n\n  if (!isModifierEnabled(data.options, 'flip')) {\n    data.offsets.target = Object.assign(Object.assign({}, data.offsets.target), getTargetOffsets(data.instance.target, data.offsets.host, data.placement));\n    return data;\n  }\n\n  const boundaries = getBoundaries(data.instance.target, data.instance.host, 0, // padding\n  'viewport', false // positionFixed\n  );\n  let placement = data.placement.split(' ')[0];\n  let variation = data.placement.split(' ')[1] || '';\n  const offsetsHost = data.offsets.host;\n  const target = data.instance.target;\n  const host = data.instance.host;\n  const adaptivePosition = variation ? computeAutoPlacement('auto', offsetsHost, target, host, ['top', 'bottom']) : computeAutoPlacement('auto', offsetsHost, target, host);\n  const flipOrder = [placement, adaptivePosition];\n  /* tslint:disable-next-line: cyclomatic-complexity */\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split(' ')[0]; // using floor because the host offsets may contain decimals we are not going to consider here\n\n    const overlapsRef = placement === 'left' && Math.floor(data.offsets.target.right) > Math.floor(data.offsets.host.left) || placement === 'right' && Math.floor(data.offsets.target.left) < Math.floor(data.offsets.host.right) || placement === 'top' && Math.floor(data.offsets.target.bottom) > Math.floor(data.offsets.host.top) || placement === 'bottom' && Math.floor(data.offsets.target.top) < Math.floor(data.offsets.host.bottom);\n    const overflowsLeft = Math.floor(data.offsets.target.left) < Math.floor(boundaries.left);\n    const overflowsRight = Math.floor(data.offsets.target.right) > Math.floor(boundaries.right);\n    const overflowsTop = Math.floor(data.offsets.target.top) < Math.floor(boundaries.top);\n    const overflowsBottom = Math.floor(data.offsets.target.bottom) > Math.floor(boundaries.bottom);\n    const overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom; // flip the variation if required\n\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    const flippedVariation = isVertical && variation === 'left' && overflowsLeft || isVertical && variation === 'right' && overflowsRight || !isVertical && variation === 'left' && overflowsTop || !isVertical && variation === 'right' && overflowsBottom;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? ` ${variation}` : '');\n      data.offsets.target = Object.assign(Object.assign({}, data.offsets.target), getTargetOffsets(data.instance.target, data.offsets.host, data.placement));\n    }\n  });\n  return data;\n}\n\nfunction initData(targetElement, hostElement, position, options) {\n  const hostElPosition = getReferenceOffsets(targetElement, hostElement);\n  const placementAuto = !!position.match(/auto/g); // support old placements 'auto left|right|top|bottom'\n\n  let placement = !!position.match(/auto\\s(left|right|top|bottom)/g) ? position.split(' ')[1] || '' : position;\n  const targetOffset = getTargetOffsets(targetElement, hostElPosition, placement);\n  placement = computeAutoPlacement(placement, hostElPosition, targetElement, hostElement);\n  return {\n    options,\n    instance: {\n      target: targetElement,\n      host: hostElement,\n      arrow: null\n    },\n    offsets: {\n      target: targetOffset,\n      host: hostElPosition,\n      arrow: null\n    },\n    positionFixed: false,\n    placement,\n    placementAuto\n  };\n}\n\nfunction preventOverflow(data) {\n  if (!isModifierEnabled(data.options, 'preventOverflow')) {\n    return data;\n  } // NOTE: DOM access here\n  // resets the targetOffsets's position so that the document size can be calculated excluding\n  // the size of the targetOffsets element itself\n\n\n  const transformProp = 'transform';\n  const targetStyles = data.instance.target.style; // assignment to help minification\n\n  const {\n    top,\n    left,\n    [transformProp]: transform\n  } = targetStyles;\n  targetStyles.top = '';\n  targetStyles.left = '';\n  targetStyles[transformProp] = '';\n  const boundaries = getBoundaries(data.instance.target, data.instance.host, 0, // padding\n  'scrollParent', false // positionFixed\n  ); // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n\n  targetStyles.top = top;\n  targetStyles.left = left;\n  targetStyles[transformProp] = transform;\n  const order = ['left', 'right', 'top', 'bottom'];\n  const check = {\n    primary(placement) {\n      let value = data.offsets.target[placement];\n\n      if (data.offsets.target[placement] < boundaries[placement] && !false // options.escapeWithReference\n      ) {\n        value = Math.max(data.offsets.target[placement], boundaries[placement]);\n      }\n\n      return {\n        [placement]: value\n      };\n    },\n\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = data.offsets.target[mainSide];\n\n      if (data.offsets.target[placement] > boundaries[placement] && !false // escapeWithReference\n      ) {\n        value = Math.min(data.offsets.target[mainSide], boundaries[placement] - (placement === 'right' ? data.offsets.target.width : data.offsets.target.height));\n      }\n\n      return {\n        [mainSide]: value\n      };\n    }\n\n  };\n  let side;\n  order.forEach(placement => {\n    side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    data.offsets.target = Object.assign(Object.assign({}, data.offsets.target), check[side](placement));\n  });\n  return data;\n}\n\nfunction shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split(' ')[0];\n  const shiftvariation = placement.split(' ')[1];\n\n  if (shiftvariation) {\n    const {\n      host,\n      target\n    } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n    const shiftOffsets = {\n      left: {\n        [side]: host[side]\n      },\n      right: {\n        [side]: host[side] + host[measurement] - host[measurement]\n      }\n    };\n    data.offsets.target = Object.assign(Object.assign({}, target), shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\nclass Positioning {\n  position(hostElement, targetElement) {\n    return this.offset(hostElement, targetElement);\n  }\n\n  offset(hostElement, targetElement) {\n    return getReferenceOffsets(targetElement, hostElement);\n  }\n\n  positionElements(hostElement, targetElement, position, _appendToBody, options) {\n    const chainOfModifiers = [flip, shift, preventOverflow, arrow];\n    return chainOfModifiers.reduce((modifiedData, modifier) => modifier(modifiedData), initData(targetElement, hostElement, position, options));\n  }\n\n}\n\nconst positionService = new Positioning();\n\nfunction positionElements(hostElement, targetElement, placement, appendToBody, options, renderer) {\n  const data = positionService.positionElements(hostElement, targetElement, placement, appendToBody, options);\n  setAllStyles(data, renderer);\n}\n\nlet PositioningService = /*#__PURE__*/(() => {\n  class PositioningService {\n    constructor(rendererFactory, platformId, _ngZone) {\n      this._ngZone = _ngZone;\n      this.update$$ = new Subject();\n      this.positionElements = new Map();\n\n      if (isPlatformBrowser(platformId)) {\n        this._ngZone.runOutsideAngular(() => {\n          merge(fromEvent(window, 'scroll'), fromEvent(window, 'resize'), // tslint:disable-next-line: deprecation\n          of(0, animationFrameScheduler), this.update$$).subscribe(() => {\n            this.positionElements.forEach(positionElement => {\n              positionElements(_getHtmlElement(positionElement.target), _getHtmlElement(positionElement.element), positionElement.attachment, positionElement.appendToBody, this.options, rendererFactory.createRenderer(null, null));\n            });\n          });\n        });\n      }\n    }\n\n    position(options) {\n      this.addPositionElement(options);\n    }\n\n    addPositionElement(options) {\n      this.positionElements.set(_getHtmlElement(options.element), options);\n    }\n\n    calcPosition() {\n      this.update$$.next();\n    }\n\n    deletePositionElement(elRef) {\n      this.positionElements.delete(_getHtmlElement(elRef));\n    }\n\n    setOptions(options) {\n      this.options = options;\n    }\n\n  }\n\n  PositioningService.ɵfac = function PositioningService_Factory(t) {\n    return new (t || PositioningService)(ɵngcc0.ɵɵinject(ɵngcc0.RendererFactory2), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n  };\n\n  PositioningService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: PositioningService,\n    factory: PositioningService.ɵfac\n  });\n  return PositioningService;\n})();\n\nfunction _getHtmlElement(element) {\n  // it means that we got a selector\n  if (element && typeof element === 'string') {\n    return document.querySelector(element);\n  }\n\n  if (element instanceof ElementRef) {\n    return element.nativeElement;\n  }\n\n  return element;\n}\n\nlet ComponentLoaderFactory = /*#__PURE__*/(() => {\n  class ComponentLoaderFactory {\n    constructor(_componentFactoryResolver, _ngZone, _injector, _posService, _applicationRef) {\n      this._componentFactoryResolver = _componentFactoryResolver;\n      this._ngZone = _ngZone;\n      this._injector = _injector;\n      this._posService = _posService;\n      this._applicationRef = _applicationRef;\n    }\n\n    createLoader(_elementRef, _viewContainerRef, _renderer) {\n      return new ComponentLoader(_viewContainerRef, _renderer, _elementRef, this._injector, this._componentFactoryResolver, this._ngZone, this._applicationRef, this._posService);\n    }\n\n  }\n\n  ComponentLoaderFactory.ɵfac = function ComponentLoaderFactory_Factory(t) {\n    return new (t || ComponentLoaderFactory)(ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(PositioningService), ɵngcc0.ɵɵinject(ɵngcc0.ApplicationRef));\n  };\n\n  ComponentLoaderFactory.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ComponentLoaderFactory,\n    factory: ComponentLoaderFactory.ɵfac\n  });\n  return ComponentLoaderFactory;\n})();\n\n/** Default dropdown configuration */\nlet BsDropdownConfig = /*#__PURE__*/(() => {\n  class BsDropdownConfig {\n    constructor() {\n      /** default dropdown auto closing behavior */\n      this.autoClose = true;\n    }\n\n  }\n\n  BsDropdownConfig.ɵfac = function BsDropdownConfig_Factory(t) {\n    return new (t || BsDropdownConfig)();\n  };\n\n  BsDropdownConfig.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: BsDropdownConfig,\n    factory: BsDropdownConfig.ɵfac\n  });\n  return BsDropdownConfig;\n})();\nlet BsDropdownState = /*#__PURE__*/(() => {\n  class BsDropdownState {\n    constructor() {\n      this.direction = 'down';\n      this.isOpenChange = new EventEmitter();\n      this.isDisabledChange = new EventEmitter();\n      this.toggleClick = new EventEmitter();\n      this.dropdownMenu = new Promise(resolve => {\n        this.resolveDropdownMenu = resolve;\n      });\n    }\n\n  }\n\n  BsDropdownState.ɵfac = function BsDropdownState_Factory(t) {\n    return new (t || BsDropdownState)();\n  };\n\n  BsDropdownState.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: BsDropdownState,\n    factory: BsDropdownState.ɵfac\n  });\n  return BsDropdownState;\n})();\nlet BsDropdownContainerComponent = /*#__PURE__*/(() => {\n  class BsDropdownContainerComponent {\n    constructor(_state) {\n      this._state = _state;\n      this.isOpen = false;\n      this.display = 'block';\n      this.position = 'absolute';\n      this._subscription = _state.isOpenChange.subscribe(value => {\n        this.isOpen = value;\n      });\n    }\n\n    get direction() {\n      return this._state.direction;\n    }\n\n    ngOnDestroy() {\n      this._subscription.unsubscribe();\n    }\n\n  }\n\n  BsDropdownContainerComponent.ɵfac = function BsDropdownContainerComponent_Factory(t) {\n    return new (t || BsDropdownContainerComponent)(ɵngcc0.ɵɵdirectiveInject(BsDropdownState));\n  };\n\n  BsDropdownContainerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BsDropdownContainerComponent,\n    selectors: [[\"mdb-dropdown-container\"]],\n    hostVars: 4,\n    hostBindings: function BsDropdownContainerComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"display\", ctx.display)(\"position\", ctx.position);\n      }\n    },\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 8,\n    template: function BsDropdownContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"dropup\", ctx.direction === \"up\")(\"dropdown\", ctx.direction === \"down\")(\"show\", ctx.isOpen)(\"open\", ctx.isOpen);\n      }\n    },\n    directives: function () {\n      return [BsDropdownDirective];\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return BsDropdownContainerComponent;\n})();\n// tslint:disable-next-line:component-class-suffix\nlet BsDropdownDirective = /*#__PURE__*/(() => {\n  class BsDropdownDirective {\n    constructor(_elementRef, _renderer, _viewContainerRef, _cis, _config, _state, cdRef) {\n      this._elementRef = _elementRef;\n      this._renderer = _renderer;\n      this._viewContainerRef = _viewContainerRef;\n      this._cis = _cis;\n      this._config = _config;\n      this._state = _state;\n      this.cdRef = cdRef;\n      this.dropupDefault = false;\n      this.dynamicPosition = false;\n      this._destroy$ = new Subject();\n      this._isInlineOpen = false;\n      this._subscriptions = [];\n      this._isInited = false; // create dropdown component loader\n\n      this._dropdown = this._cis.createLoader(this._elementRef, this._viewContainerRef, this._renderer).provide({\n        provide: BsDropdownState,\n        useValue: this._state\n      });\n      this.onShown = this._dropdown.onShown;\n      this.shown = this._dropdown.shown;\n      this.onHidden = this._dropdown.onHidden;\n      this.hidden = this._dropdown.hidden;\n      this.isOpenChange = this._state.isOpenChange; // set initial dropdown state from config\n\n      this._state.autoClose = this._config.autoClose;\n    }\n    /**\r\n     * This attribute indicates that the dropdown should be opened upwards\r\n     */\n\n\n    get isDropup() {\n      if (this.dropup) {\n        this._isDropupDefault = false;\n        return this.dropup;\n      } else if (this.dropupDefault) {\n        this._isDropupDefault = true;\n        return this.dropupDefault;\n      } else if (this.dropupDefault && this.dropup) {\n        this._isDropupDefault = false;\n        return this.dropup;\n      }\n    }\n    /**\r\n     * Indicates that dropdown will be closed on item or document click,\r\n     * and after pressing ESC\r\n     */\n\n\n    set autoClose(value) {\n      if (typeof value === 'boolean') {\n        this._state.autoClose = value;\n      }\n    }\n\n    get autoClose() {\n      return this._state.autoClose;\n    }\n    /**\r\n     * Disables dropdown toggle and hides dropdown menu if opened\r\n     */\n\n\n    set isDisabled(value) {\n      this._isDisabled = value;\n\n      this._state.isDisabledChange.emit(value);\n\n      if (value) {\n        this.hide();\n      }\n    }\n\n    get isDisabled() {\n      return this._isDisabled;\n    }\n    /**\r\n     * Returns whether or not the popover is currently being shown\r\n     */\n\n\n    get isOpen() {\n      if (this._showInline) {\n        return this._isInlineOpen;\n      }\n\n      return this._dropdown.isShown;\n    }\n\n    set isOpen(value) {\n      if (value) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    }\n\n    get isBs4() {\n      return !isBs3$1();\n    }\n\n    ngOnInit() {\n      // fix: seems there are an issue with `routerLinkActive`\n      // which result in duplicated call ngOnInit without call to ngOnDestroy\n      // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n      if (this._isInited) {\n        return;\n      }\n\n      this._isInited = true;\n      this._showInline = !this.container;\n      this._dropup = this.dropup; // attach DOM listeners\n\n      this._dropdown.listen({\n        triggers: this.triggers,\n        show: () => this.show()\n      }); // toggle visibility on toggle element click\n\n\n      this._state.toggleClick.pipe(takeUntil(this._destroy$)).subscribe(value => this.toggle(value)); // hide dropdown if set disabled while opened\n\n\n      this._state.isDisabledChange.pipe(takeUntil(this._destroy$)).subscribe(element => {\n        if (element === true) {\n          this.hide();\n        }\n      }); // attach dropdown menu inside of dropdown\n\n\n      if (this._showInline) {\n        this._state.dropdownMenu.then(dropdownMenu => {\n          this._inlinedMenu = dropdownMenu.viewContainer.createEmbeddedView(dropdownMenu.templateRef);\n        });\n      }\n\n      this._state.isOpenChange.pipe(takeUntil(this._destroy$)).subscribe(() => {\n        setTimeout(() => {\n          const dropdownContainer = this._elementRef.nativeElement.querySelector('.dropdown-menu');\n\n          const left = dropdownContainer.getBoundingClientRect().left;\n\n          if (dropdownContainer.classList.contains('dropdown-menu-right') && left <= dropdownContainer.clientWidth) {\n            if (left < 0) {\n              this._renderer.setStyle(dropdownContainer, 'right', left + 'px');\n            } else {\n              this._renderer.setStyle(dropdownContainer, 'right', '0');\n            }\n          }\n        }, 0);\n      });\n    }\n    /**\r\n     * Opens an element’s popover. This is considered a “manual” triggering of\r\n     * the popover.\r\n     */\n\n\n    show() {\n      if (this.isOpen || this.isDisabled) {\n        return;\n      } // material and dropup dropdown animation\n\n\n      const button = this._elementRef.nativeElement.children[0];\n\n      const container = this._elementRef.nativeElement.querySelector('.dropdown-menu');\n\n      if (!container.parentNode.classList.contains('btn-group') && !container.parentNode.classList.contains('dropdown') && !this._isDropupDefault) {\n        container.parentNode.classList.add('dropdown');\n      }\n\n      if (this.dropup && !this._isDropupDefault) {\n        container.parentNode.classList.add('dropup-material');\n      }\n\n      if (button.tagName !== 'BUTTON') {\n        if (button.tagName === 'A') {\n          container.classList.add('a-various-dropdown');\n        } else {\n          container.classList.add('various-dropdown');\n        }\n      } else {\n        if (button.classList.contains('btn-sm')) {\n          container.classList.add('small-dropdown');\n        }\n\n        if (button.classList.contains('btn-md')) {\n          container.classList.add('medium-dropdown');\n        }\n\n        if (button.classList.contains('btn-lg')) {\n          container.classList.add('large-dropdown');\n        }\n      }\n\n      setTimeout(() => {\n        container.classList.add('fadeInDropdown');\n\n        if (this.dynamicPosition) {\n          const bounding = container.getBoundingClientRect();\n          const out = {\n            top: bounding.top < 0,\n            bottom: bounding.bottom > (window.innerHeight || document.documentElement.clientHeight)\n          };\n\n          if (this.dropup && out.top) {\n            this.dropup = false;\n          } else if (!this.dropup && out.bottom) {\n            this.dropup = true;\n          }\n        }\n      }, 0);\n\n      if (this._showInline) {\n        this._isInlineOpen = true;\n\n        if (container.parentNode.classList.contains('dropdown') || container.parentNode.classList.contains('dropup-material')) {\n          setTimeout(() => {\n            this.onShown.emit(true);\n            this.shown.emit(true);\n          }, 560);\n        } else {\n          setTimeout(() => {\n            this.onShown.emit(true);\n            this.shown.emit(true);\n          }, 0);\n        }\n\n        this._state.isOpenChange.emit(true);\n\n        return;\n      }\n\n      this._state.dropdownMenu.then(dropdownMenu => {\n        // check direction in which dropdown should be opened\n        const _dropup = this.dropup === true || this.dropupDefault === true;\n\n        this._state.direction = _dropup ? 'up' : 'down';\n\n        const _placement = this.placement || (_dropup ? 'top left' : 'bottom left'); // show dropdown\n\n\n        this._dropdown.attach(BsDropdownContainerComponent).to(this.container).position({\n          attachment: _placement\n        }).show({\n          content: dropdownMenu.templateRef,\n          placement: _placement\n        });\n\n        this._state.isOpenChange.emit(true);\n      });\n    }\n    /**\r\n     * Closes an element’s popover. This is considered a “manual” triggering of\r\n     * the popover.\r\n     */\n\n\n    hide() {\n      if (!this.isOpen) {\n        return;\n      }\n\n      if (this.dropup !== this._dropup) {\n        this.dropup = this._dropup;\n      }\n\n      const container = this._elementRef.nativeElement.querySelector('.dropdown-menu');\n\n      container.classList.remove('fadeInDropdown');\n\n      if (container.parentNode.classList.contains('dropdown') || container.parentNode.classList.contains('dropup-material')) {\n        setTimeout(() => {\n          if (this._showInline) {\n            this._isInlineOpen = false;\n            this.onHidden.emit(true);\n            this.hidden.emit(true);\n            this.cdRef.markForCheck();\n          } else {\n            this._dropdown.hide();\n          }\n\n          this._state.isOpenChange.emit(false);\n        }, 560);\n      } else {\n        setTimeout(() => {\n          if (this._showInline) {\n            this._isInlineOpen = false;\n            this.onHidden.emit(true);\n            this.hidden.emit(true);\n            this.cdRef.markForCheck();\n          } else {\n            this._dropdown.hide();\n          }\n\n          this._state.isOpenChange.emit(false);\n        }, 0);\n      }\n    }\n    /**\r\n     * Toggles an element’s popover. This is considered a “manual” triggering of\r\n     * the popover.\r\n     */\n\n\n    toggle(value) {\n      if (this.isOpen || value === false) {\n        return this.hide();\n      }\n\n      return this.show();\n    }\n\n    ngOnDestroy() {\n      // clean up subscriptions and destroy dropdown\n      this._destroy$.next();\n\n      this._destroy$.complete();\n\n      this._dropdown.dispose();\n    }\n\n  }\n\n  BsDropdownDirective.ɵfac = function BsDropdownDirective_Factory(t) {\n    return new (t || BsDropdownDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ComponentLoaderFactory), ɵngcc0.ɵɵdirectiveInject(BsDropdownConfig), ɵngcc0.ɵɵdirectiveInject(BsDropdownState), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  BsDropdownDirective.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: BsDropdownDirective,\n    selectors: [[\"\", \"mdbDropdown\", \"\"], [\"\", \"dropdown\", \"\"]],\n    hostVars: 6,\n    hostBindings: function BsDropdownDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"dropup\", ctx.isDropup)(\"open\", ctx.isOpen)(\"show\", ctx.isOpen);\n      }\n    },\n    inputs: {\n      dropupDefault: \"dropupDefault\",\n      dynamicPosition: \"dynamicPosition\",\n      autoClose: \"autoClose\",\n      isDisabled: \"isDisabled\",\n      isOpen: \"isOpen\",\n      dropup: \"dropup\",\n      placement: \"placement\",\n      triggers: \"triggers\",\n      container: \"container\"\n    },\n    outputs: {\n      onShown: \"onShown\",\n      shown: \"shown\",\n      onHidden: \"onHidden\",\n      hidden: \"hidden\",\n      isOpenChange: \"isOpenChange\"\n    },\n    exportAs: [\"bs-dropdown\"],\n    features: [ɵngcc0.ɵɵProvidersFeature([BsDropdownState])],\n    attrs: _c8,\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function BsDropdownDirective_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    styles: [\".dropdown-menu .dropdown-item:active{background-color:#757575}.show>.dropdown-menu{display:block}.show>a{outline:0}.dropdown-menu{display:none;position:absolute;margin-top:5px;left:0px;will-change:transform}.various-dropdown{transform:translateY(21px)!important}.a-various-dropdown{transform:translateY(29px)!important}.medium-dropdown{transform:translateY(36px)!important}.small-dropdown{transform:translate(5px,34px)!important}.large-dropdown{transform:translate(5px,57px)!important}.btn-group>.dropdown-menu{transform:translateY(43px)}.dropup>.dropdown-menu{display:none;transform:translate(117px)!important;will-change:transform}.dropup.show .dropdown-menu{display:block;opacity:0}.dropup.show .fadeInDropdown{opacity:1}.dropup-material.show .dropdown-menu{transition:.55s}.dropdown-menu{display:none;position:absolute;transform:translate(6px,49px);top:0px;left:0px;will-change:transform}.dropdown.show .dropdown-menu{display:block;opacity:0;transition:.55s}.dropdown.show .fadeInDropdown{opacity:1}\\n\"],\n    encapsulation: 2\n  });\n  return BsDropdownDirective;\n})();\nlet BsDropdownMenuDirective = /*#__PURE__*/(() => {\n  class BsDropdownMenuDirective {\n    constructor(_state, _viewContainer, _templateRef) {\n      _state.resolveDropdownMenu({\n        templateRef: _templateRef,\n        viewContainer: _viewContainer\n      });\n    }\n\n  }\n\n  BsDropdownMenuDirective.ɵfac = function BsDropdownMenuDirective_Factory(t) {\n    return new (t || BsDropdownMenuDirective)(ɵngcc0.ɵɵdirectiveInject(BsDropdownState), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n  };\n\n  BsDropdownMenuDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: BsDropdownMenuDirective,\n    selectors: [[\"\", \"mdbDropdownMenu\", \"\"], [\"\", \"dropdownMenu\", \"\"]],\n    exportAs: [\"bs-dropdown-menu\"]\n  });\n  return BsDropdownMenuDirective;\n})();\nlet BsDropdownToggleDirective = /*#__PURE__*/(() => {\n  class BsDropdownToggleDirective {\n    constructor(_state, _element, _renderer, _cdRef) {\n      this._state = _state;\n      this._element = _element;\n      this._renderer = _renderer;\n      this._cdRef = _cdRef;\n      this._subscriptions = [];\n      this.ariaHaspopup = true;\n      this.isDisabled = null; // sync is open value with state\n\n      this._state.isOpenChange.subscribe(value => {\n        this.isOpen = value;\n\n        if (value) {\n          this._documentClickListener = this._renderer.listen('document', 'click', event => {\n            if (this._state.autoClose && event.button !== 2 && !this._element.nativeElement.contains(event.target)) {\n              this._state.toggleClick.emit(false);\n\n              this._cdRef.detectChanges();\n            }\n          });\n          this._escKeyUpListener = this._renderer.listen(this._element.nativeElement, 'keyup.esc', () => {\n            if (this._state.autoClose) {\n              this._state.toggleClick.emit(false);\n\n              this._cdRef.detectChanges();\n            }\n          });\n        } else {\n          this._documentClickListener();\n\n          this._escKeyUpListener();\n        }\n      }); // populate disabled state\n\n\n      this._subscriptions.push(this._state.isDisabledChange.subscribe(value => this.isDisabled = value || null));\n    }\n\n    onClick() {\n      if (this.isDisabled) {\n        return;\n      }\n\n      this._state.toggleClick.emit();\n    }\n\n    ngOnDestroy() {\n      if (this._documentClickListener) {\n        this._documentClickListener();\n      }\n\n      if (this._escKeyUpListener) {\n        this._escKeyUpListener();\n      }\n\n      for (const sub of this._subscriptions) {\n        sub.unsubscribe();\n      }\n    }\n\n  }\n\n  BsDropdownToggleDirective.ɵfac = function BsDropdownToggleDirective_Factory(t) {\n    return new (t || BsDropdownToggleDirective)(ɵngcc0.ɵɵdirectiveInject(BsDropdownState), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  BsDropdownToggleDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: BsDropdownToggleDirective,\n    selectors: [[\"\", \"mdbDropdownToggle\", \"\"], [\"\", \"dropdownToggle\", \"\"]],\n    hostVars: 3,\n    hostBindings: function BsDropdownToggleDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function BsDropdownToggleDirective_click_HostBindingHandler() {\n          return ctx.onClick();\n        });\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-haspopup\", ctx.ariaHaspopup)(\"disabled\", ctx.isDisabled)(\"aria-expanded\", ctx.isOpen);\n      }\n    },\n    exportAs: [\"bs-dropdown-toggle\"]\n  });\n  return BsDropdownToggleDirective;\n})();\nlet DropdownModule = /*#__PURE__*/(() => {\n  class DropdownModule {\n    static forRoot(config) {\n      return {\n        ngModule: DropdownModule,\n        providers: [ComponentLoaderFactory, PositioningService, BsDropdownState, {\n          provide: BsDropdownConfig,\n          useValue: config ? config : {\n            autoClose: true\n          }\n        }]\n      };\n    }\n\n  }\n\n  DropdownModule.ɵfac = function DropdownModule_Factory(t) {\n    return new (t || DropdownModule)();\n  };\n\n  DropdownModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DropdownModule\n  });\n  DropdownModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  /*tslint:disable:no-invalid-this */\n\n  return DropdownModule;\n})();\n\nfunction OnChange() {\n  const sufix = 'Change';\n  return function OnChangeHandler(target, propertyKey) {\n    const _key = ` __${propertyKey}Value`;\n    Object.defineProperty(target, propertyKey, {\n      get() {\n        return this[_key];\n      },\n\n      set(value) {\n        const prevValue = this[_key];\n        this[_key] = value;\n\n        if (prevValue !== value && this[propertyKey + sufix]) {\n          this[propertyKey + sufix].emit(value);\n        }\n      }\n\n    });\n  };\n}\n/* tslint:enable */\n\n\nclass LinkedList {\n  constructor() {\n    // public length: = 0;\n    this.length = 0;\n    this.asArray = []; // Array methods overriding END\n  }\n\n  getNode(position) {\n    if (this.length === 0 || position < 0 || position >= this.length) {\n      throw new Error('Position is out of the list');\n    }\n\n    let current = this.head;\n\n    for (let index = 0; index < position; index++) {\n      current = current.next;\n    }\n\n    return current;\n  }\n\n  createInternalArrayRepresentation() {\n    const outArray = [];\n    let current = this.head;\n\n    while (current) {\n      outArray.push(current.value);\n      current = current.next;\n    }\n\n    this.asArray = outArray;\n  } // public get(position: number): T {\n\n\n  get(position) {\n    if (this.length === 0 || position < 0 || position >= this.length) {\n      return void 0;\n    }\n\n    let current = this.head;\n\n    for (let index = 0; index < position; index++) {\n      current = current.next;\n    }\n\n    return current.value;\n  }\n\n  add(value, position = this.length) {\n    if (position < 0 || position > this.length) {\n      throw new Error('Position is out of the list');\n    }\n\n    const node = {\n      value: value,\n      next: undefined,\n      previous: undefined\n    };\n\n    if (this.length === 0) {\n      this.head = node;\n      this.tail = node;\n      this.current = node;\n    } else {\n      if (position === 0) {\n        // first node\n        node.next = this.head;\n        this.head.previous = node;\n        this.head = node;\n      } else if (position === this.length) {\n        // last node\n        this.tail.next = node;\n        node.previous = this.tail;\n        this.tail = node;\n      } else {\n        // node in middle\n        const currentPreviousNode = this.getNode(position - 1);\n        const currentNextNode = currentPreviousNode.next;\n        currentPreviousNode.next = node;\n        currentNextNode.previous = node;\n        node.previous = currentPreviousNode;\n        node.next = currentNextNode;\n      }\n    }\n\n    this.length++;\n    this.createInternalArrayRepresentation();\n  }\n\n  remove(position = 0) {\n    if (this.length === 0 || position < 0 || position >= this.length) {\n      throw new Error('Position is out of the list');\n    }\n\n    if (position === 0) {\n      // first node\n      this.head = this.head.next;\n\n      if (this.head) {\n        // there is no second node\n        this.head.previous = undefined;\n      } else {\n        // there is no second node\n        this.tail = undefined;\n      }\n    } else if (position === this.length - 1) {\n      // last node\n      this.tail = this.tail.previous;\n      this.tail.next = undefined;\n    } else {\n      // middle node\n      const removedNode = this.getNode(position);\n      removedNode.next.previous = removedNode.previous;\n      removedNode.previous.next = removedNode.next;\n    }\n\n    this.length--;\n    this.createInternalArrayRepresentation();\n  }\n\n  set(position, value) {\n    if (this.length === 0 || position < 0 || position >= this.length) {\n      throw new Error('Position is out of the list');\n    }\n\n    const node = this.getNode(position);\n    node.value = value;\n    this.createInternalArrayRepresentation();\n  }\n\n  toArray() {\n    return this.asArray;\n  }\n\n  findAll(fn) {\n    let current = this.head;\n    const result = [];\n\n    for (let index = 0; index < this.length; index++) {\n      if (fn(current.value, index)) {\n        result.push({\n          index,\n          value: current.value\n        });\n      }\n\n      current = current.next;\n    }\n\n    return result;\n  } // Array methods overriding start\n\n\n  push(...args) {\n    args.forEach(arg => {\n      this.add(arg);\n    });\n    return this.length;\n  } // public pop(): T {\n\n\n  pop() {\n    if (this.length === 0) {\n      return undefined;\n    }\n\n    const last = this.tail;\n    this.remove(this.length - 1);\n    return last.value;\n  }\n\n  unshift(...args) {\n    args.reverse();\n    args.forEach(arg => {\n      this.add(arg, 0);\n    });\n    return this.length;\n  } // public shift(): T {\n\n\n  shift() {\n    if (this.length === 0) {\n      return undefined;\n    }\n\n    const lastItem = this.head.value;\n    this.remove();\n    return lastItem;\n  }\n\n  forEach(fn) {\n    let current = this.head;\n\n    for (let index = 0; index < this.length; index++) {\n      fn(current.value, index);\n      current = current.next;\n    }\n  }\n\n  indexOf(value) {\n    let current = this.head;\n    let position = 0;\n\n    for (let index = 0; index < this.length; index++) {\n      if (current.value === value) {\n        position = index;\n        break;\n      }\n\n      current = current.next;\n    }\n\n    return position;\n  }\n\n  some(fn) {\n    let current = this.head;\n    let result = false;\n\n    while (current && !result) {\n      if (fn(current.value)) {\n        result = true;\n        break;\n      }\n\n      current = current.next;\n    }\n\n    return result;\n  }\n\n  every(fn) {\n    let current = this.head;\n    let result = true;\n\n    while (current && result) {\n      if (!fn(current.value)) {\n        result = false;\n      }\n\n      current = current.next;\n    }\n\n    return result;\n  }\n\n  toString() {\n    return '[Linked List]';\n  } // public find(fn: any): T {\n\n\n  find(fn) {\n    let current = this.head; // let result: T;\n\n    let result;\n\n    for (let index = 0; index < this.length; index++) {\n      if (fn(current.value, index)) {\n        result = current.value;\n        break;\n      }\n\n      current = current.next;\n    }\n\n    return result;\n  }\n\n  findIndex(fn) {\n    let current = this.head; // let result: number;\n\n    let result;\n\n    for (let index = 0; index < this.length; index++) {\n      if (fn(current.value, index)) {\n        result = index;\n        break;\n      }\n\n      current = current.next;\n    }\n\n    return result;\n  }\n\n}\n/**\r\n * @copyright Valor Software\r\n * @copyright Angular ng-bootstrap team\r\n */\n\n\nclass Trigger {\n  constructor(open, close) {\n    this.open = open;\n    this.close = close || open;\n  }\n\n  isManual() {\n    return this.open === 'manual' || this.close === 'manual';\n  }\n\n}\n\nclass Utils {\n  constructor() {}\n\n  static reflow(element) {\n    (bs => bs)(element.offsetHeight);\n  } // source: https://github.com/jquery/jquery/blob/master/src/css/var/getStyles.js\n\n\n  static getStyles(elem) {\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    let view = elem.ownerDocument.defaultView;\n\n    if (!view || !view.opener) {\n      view = win$1;\n    }\n\n    return view.getComputedStyle(elem);\n  }\n\n  focusTrapModal(event, el) {\n    let focusableElements;\n    let firstFocusableElement;\n    let lastFocusableElement;\n    const KEYCODE_TAB = 9;\n    /*tslint:disable-next-line:max-line-length */\n\n    focusableElements = el.nativeElement.querySelectorAll('a[href], button, textarea, input, select, form, mdb-select, mdb-auto-completer, mdb-checkbox, mdb-range-input');\n    firstFocusableElement = focusableElements[0];\n    lastFocusableElement = focusableElements[focusableElements.length - 1];\n\n    if (event.key === 'Tab' || event.keyCode === KEYCODE_TAB) {\n      if (event.shiftKey) {\n        if (document$2 && document$2.activeElement === firstFocusableElement) {\n          lastFocusableElement.focus();\n          event.preventDefault();\n        }\n      } else {\n        if (document$2 && document$2.activeElement === lastFocusableElement) {\n          firstFocusableElement.focus();\n          event.preventDefault();\n        }\n      }\n    }\n  }\n\n  getClosestEl(el, selector) {\n    for (; el && el !== document$2; el = el.parentNode) {\n      if (el.matches && el.matches(selector)) {\n        return el;\n      }\n    }\n\n    return null;\n  }\n\n  getCoords(elem) {\n    const box = elem.getBoundingClientRect();\n    const body = document$2.body;\n    const docEl = document$2.documentElement;\n    const scrollTop = win$1.pageYOffset || docEl.scrollTop || body.scrollTop;\n    const scrollLeft = win$1.pageXOffset || docEl.scrollLeft || body.scrollLeft;\n    const clientTop = docEl.clientTop || body.clientTop || 0;\n    const clientLeft = docEl.clientLeft || body.clientLeft || 0;\n    const top = box.top + scrollTop - clientTop;\n    const left = box.left + scrollLeft - clientLeft;\n    return {\n      top: Math.round(top),\n      left: Math.round(left)\n    };\n  }\n\n}\n\nlet MdbIconComponent = /*#__PURE__*/(() => {\n  class MdbIconComponent {\n    constructor(_el, _renderer) {\n      this._el = _el;\n      this._renderer = _renderer;\n      this.fab = false;\n      this.far = false;\n      this.fal = false;\n      this.fad = false;\n      this.fas = true;\n      this.sizeClass = '';\n      this.utils = new Utils();\n    }\n\n    ngOnInit() {\n      if (this.size) {\n        this.sizeClass = `fa-${this.size}`;\n      }\n\n      const classList = this._el.nativeElement.classList;\n      this.fab = classList.contains('fab');\n      this.far = classList.contains('far');\n      this.fas = classList.contains('fas');\n      this.fal = classList.contains('fal');\n      this.fad = classList.contains('fad');\n      const formWrapper = this.utils.getClosestEl(this._el.nativeElement, '.md-form') || this.utils.getClosestEl(this._el.nativeElement, '.md-outline');\n\n      if (formWrapper) {\n        formWrapper.childNodes.forEach(el => {\n          if (el.tagName === 'INPUT' || 'TEXTAREA') {\n            this._renderer.listen(el, 'focus', () => {\n              this._renderer.addClass(this._el.nativeElement, 'active');\n            });\n\n            this._renderer.listen(el, 'blur', () => {\n              this._renderer.removeClass(this._el.nativeElement, 'active');\n            });\n          }\n        });\n      }\n    }\n\n  }\n\n  MdbIconComponent.ɵfac = function MdbIconComponent_Factory(t) {\n    return new (t || MdbIconComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  MdbIconComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdbIconComponent,\n    selectors: [[\"mdb-icon\"]],\n    inputs: {\n      icon: \"icon\",\n      size: \"size\",\n      class: \"class\",\n      classInside: \"classInside\"\n    },\n    decls: 1,\n    vars: 13,\n    consts: [[3, \"ngClass\"]],\n    template: function MdbIconComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"i\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMapInterpolate4(\"fa-\", ctx.icon, \" \", ctx.class, \" \", ctx.classInside, \" \", ctx.sizeClass, \"\");\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction5(7, _c9, ctx.fas, ctx.far, ctx.fab, ctx.fal, ctx.fad));\n      }\n    },\n    directives: [ɵngcc1.NgClass],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return MdbIconComponent;\n})();\n// tslint:disable-next-line:directive-selector\nlet FalDirective = /*#__PURE__*/(() => {\n  class FalDirective {\n    constructor(_el, _r) {\n      this._el = _el;\n      this._r = _r;\n\n      this._r.addClass(this._el.nativeElement, 'fal');\n    }\n\n  }\n\n  FalDirective.ɵfac = function FalDirective_Factory(t) {\n    return new (t || FalDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  FalDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FalDirective,\n    selectors: [[\"\", \"fal\", \"\"], [\"\", \"light\", \"\"]]\n  });\n  return FalDirective;\n})();\n// tslint:disable-next-line:directive-selector\nlet FarDirective = /*#__PURE__*/(() => {\n  class FarDirective {\n    constructor(_el, _r) {\n      this._el = _el;\n      this._r = _r;\n\n      this._r.addClass(this._el.nativeElement, 'far');\n    }\n\n  }\n\n  FarDirective.ɵfac = function FarDirective_Factory(t) {\n    return new (t || FarDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  FarDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FarDirective,\n    selectors: [[\"\", \"far\", \"\"], [\"\", \"regular\", \"\"]]\n  });\n  return FarDirective;\n})();\n// tslint:disable-next-line:directive-selector\nlet FasDirective = /*#__PURE__*/(() => {\n  class FasDirective {\n    constructor(_el, _r) {\n      this._el = _el;\n      this._r = _r;\n\n      this._r.addClass(this._el.nativeElement, 'fas');\n    }\n\n  }\n\n  FasDirective.ɵfac = function FasDirective_Factory(t) {\n    return new (t || FasDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  FasDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FasDirective,\n    selectors: [[\"\", \"fas\", \"\"], [\"\", \"solid\", \"\"]]\n  });\n  return FasDirective;\n})();\n// tslint:disable-next-line:directive-selector\nlet FabDirective = /*#__PURE__*/(() => {\n  class FabDirective {\n    constructor(_el, _r) {\n      this._el = _el;\n      this._r = _r;\n\n      this._r.addClass(this._el.nativeElement, 'fab');\n    }\n\n  }\n\n  FabDirective.ɵfac = function FabDirective_Factory(t) {\n    return new (t || FabDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  FabDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FabDirective,\n    selectors: [[\"\", \"fab\", \"\"], [\"\", \"brands\", \"\"]]\n  });\n  return FabDirective;\n})();\n// tslint:disable-next-line:directive-selector\nlet FadDirective = /*#__PURE__*/(() => {\n  class FadDirective {\n    constructor(_el, _r) {\n      this._el = _el;\n      this._r = _r;\n\n      this._r.addClass(this._el.nativeElement, 'fad');\n    }\n\n  }\n\n  FadDirective.ɵfac = function FadDirective_Factory(t) {\n    return new (t || FadDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  FadDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FadDirective,\n    selectors: [[\"\", \"fad\", \"\"], [\"\", \"duotone\", \"\"]]\n  });\n  return FadDirective;\n})();\nlet IconsModule = /*#__PURE__*/(() => {\n  class IconsModule {}\n\n  IconsModule.ɵfac = function IconsModule_Factory(t) {\n    return new (t || IconsModule)();\n  };\n\n  IconsModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: IconsModule\n  });\n  IconsModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return IconsModule;\n})();\nlet defaultIdNumber$1 = 0; // tslint:disable-next-line:component-class-suffix\n\nlet MdbErrorDirective = /*#__PURE__*/(() => {\n  class MdbErrorDirective {\n    constructor(el, renderer) {\n      this.el = el;\n      this.renderer = renderer;\n      this.id = `mdb-error-${defaultIdNumber$1++}`;\n      this.errorMsg = true;\n      this.messageId = this.id;\n      this.utils = new Utils();\n    }\n\n    _calculateMarginTop() {\n      const parent = this.el.nativeElement.parentNode.querySelector('.form-check');\n      const heightParent = parent ? parent.offsetHeight : null;\n\n      if (heightParent) {\n        const margin = heightParent / 12.5;\n        this.el.nativeElement.style.top = `${heightParent + heightParent / margin}px`;\n      }\n    }\n\n    ngOnInit() {\n      this.prefix = this.el.nativeElement.parentNode.querySelector('.prefix');\n\n      if (this.prefix) {\n        this.prefix.classList.add('error-message');\n      }\n\n      const textarea = this.utils.getClosestEl(this.el.nativeElement, '.md-textarea');\n\n      this._calculateMarginTop();\n\n      if (textarea) {\n        let height = textarea.offsetHeight + 4 + 'px';\n        this.renderer.setStyle(this.el.nativeElement, 'top', height);\n        this.textareaListenFunction = this.renderer.listen(textarea, 'keyup', () => {\n          height = textarea.offsetHeight + 4 + 'px';\n          this.renderer.setStyle(this.el.nativeElement, 'top', height);\n        });\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.textareaListenFunction) {\n        this.textareaListenFunction();\n      }\n\n      if (this.prefix) {\n        this.prefix.classList.remove('error-message');\n      }\n    }\n\n  }\n\n  MdbErrorDirective.ɵfac = function MdbErrorDirective_Factory(t) {\n    return new (t || MdbErrorDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  MdbErrorDirective.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdbErrorDirective,\n    selectors: [[\"mdb-error\"]],\n    hostVars: 3,\n    hostBindings: function MdbErrorDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.messageId);\n        ɵngcc0.ɵɵclassProp(\"error-message\", ctx.errorMsg);\n      }\n    },\n    inputs: {\n      id: \"id\"\n    },\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MdbErrorDirective_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    styles: [_c10],\n    encapsulation: 2\n  });\n  return MdbErrorDirective;\n})();\nlet defaultIdNumber = 0; // tslint:disable-next-line:component-class-suffix\n\nlet MdbSuccessDirective = /*#__PURE__*/(() => {\n  class MdbSuccessDirective {\n    constructor(el, renderer) {\n      this.el = el;\n      this.renderer = renderer;\n      this.id = `mdb-success-${defaultIdNumber++}`;\n      this.successMsg = true;\n      this.messageId = this.id;\n      this.utils = new Utils();\n    }\n\n    _calculateMarginTop() {\n      const parent = this.el.nativeElement.parentNode.querySelector('.form-check');\n      const heightParent = parent ? parent.offsetHeight : null;\n\n      if (heightParent) {\n        const margin = heightParent / 12.5;\n        this.el.nativeElement.style.top = `${heightParent + heightParent / margin}px`;\n      }\n    }\n\n    ngOnInit() {\n      this.prefix = this.el.nativeElement.parentNode.querySelector('.prefix');\n\n      if (this.prefix) {\n        this.prefix.classList.add('success-message');\n      }\n\n      const textarea = this.utils.getClosestEl(this.el.nativeElement, '.md-textarea');\n\n      this._calculateMarginTop();\n\n      if (textarea) {\n        let height = textarea.offsetHeight + 4 + 'px';\n        this.renderer.setStyle(this.el.nativeElement, 'top', height);\n        this.textareaListenFunction = this.renderer.listen(textarea, 'keyup', () => {\n          height = textarea.offsetHeight + 4 + 'px';\n          this.renderer.setStyle(this.el.nativeElement, 'top', height);\n        });\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.textareaListenFunction) {\n        this.textareaListenFunction();\n      }\n\n      if (this.prefix) {\n        this.prefix.classList.remove('success-message');\n      }\n    }\n\n  }\n\n  MdbSuccessDirective.ɵfac = function MdbSuccessDirective_Factory(t) {\n    return new (t || MdbSuccessDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  MdbSuccessDirective.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdbSuccessDirective,\n    selectors: [[\"mdb-success\"]],\n    hostVars: 3,\n    hostBindings: function MdbSuccessDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.messageId);\n        ɵngcc0.ɵɵclassProp(\"success-message\", ctx.successMsg);\n      }\n    },\n    inputs: {\n      id: \"id\"\n    },\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MdbSuccessDirective_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    styles: [_c10],\n    encapsulation: 2\n  });\n  return MdbSuccessDirective;\n})();\nlet MdbValidateDirective = /*#__PURE__*/(() => {\n  class MdbValidateDirective {\n    constructor(renderer, el) {\n      this.renderer = renderer;\n      this.el = el;\n      this._validate = true;\n      this._validateSuccess = true;\n      this._validateError = true;\n    }\n\n    get validate() {\n      return this._validate;\n    }\n\n    set validate(value) {\n      this._validate = value;\n      this.updateErrorClass();\n      this.updateSuccessClass();\n    }\n\n    get validateSuccess() {\n      return this._validateSuccess;\n    }\n\n    set validateSuccess(value) {\n      this._validateSuccess = value;\n      this.updateSuccessClass();\n    }\n\n    get validateError() {\n      return this._validateError;\n    }\n\n    set validateError(value) {\n      this._validateError = value;\n      this.updateErrorClass();\n      this.updateSuccessClass();\n    }\n\n    updateSuccessClass() {\n      if (this.validate && this.validateSuccess) {\n        this.renderer.addClass(this.el.nativeElement, 'validate-success');\n      } else {\n        this.renderer.removeClass(this.el.nativeElement, 'validate-success');\n      }\n    }\n\n    updateErrorClass() {\n      if (this.validate && this.validateError) {\n        this.renderer.addClass(this.el.nativeElement, 'validate-error');\n      } else {\n        this.renderer.removeClass(this.el.nativeElement, 'validate-error');\n      }\n    }\n\n    ngOnInit() {\n      this.updateSuccessClass();\n      this.updateErrorClass();\n    }\n\n  }\n\n  MdbValidateDirective.ɵfac = function MdbValidateDirective_Factory(t) {\n    return new (t || MdbValidateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  MdbValidateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MdbValidateDirective,\n    selectors: [[\"\", \"mdbValidate\", \"\"]],\n    inputs: {\n      validate: \"validate\",\n      validateSuccess: \"validateSuccess\",\n      validateError: \"validateError\",\n      mdbValidate: \"mdbValidate\"\n    }\n  });\n  return MdbValidateDirective;\n})();\nlet InputUtilitiesModule = /*#__PURE__*/(() => {\n  class InputUtilitiesModule {}\n\n  InputUtilitiesModule.ɵfac = function InputUtilitiesModule_Factory(t) {\n    return new (t || InputUtilitiesModule)();\n  };\n\n  InputUtilitiesModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: InputUtilitiesModule\n  });\n  InputUtilitiesModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return InputUtilitiesModule;\n})();\nlet EqualValidatorDirective = /*#__PURE__*/(() => {\n  class EqualValidatorDirective {\n    constructor(validateEqual, reverse) {\n      this.validateEqual = validateEqual;\n      this.reverse = reverse;\n    }\n\n    get isReverse() {\n      if (!this.reverse) {\n        return false;\n      }\n\n      return this.reverse === 'true' ? true : false;\n    }\n\n    validate(c) {\n      // self value (e.g. retype password)\n      const v = c.value; // control value (e.g. password)\n\n      const e = c.root.get(this.validateEqual); // value not equal\n\n      if (e && v !== e.value) {\n        return {\n          validateEqual: false\n        };\n      } // value equal and reverse\n\n\n      if (e && v === e.value && this.isReverse) {\n        delete e.errors['validateEqual'];\n\n        if (!Object.keys(e.errors).length) {\n          e.setErrors(null);\n        }\n      } // value not equal and reverse\n\n\n      if (e && v !== e.value && this.isReverse) {\n        e.setErrors({\n          validateEqual: false\n        });\n      } // return null;\n\n\n      return null;\n    }\n\n  }\n\n  EqualValidatorDirective.ɵfac = function EqualValidatorDirective_Factory(t) {\n    return new (t || EqualValidatorDirective)(ɵngcc0.ɵɵinjectAttribute('validateEqual'), ɵngcc0.ɵɵinjectAttribute('reverse'));\n  };\n\n  EqualValidatorDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: EqualValidatorDirective,\n    selectors: [[\"\", \"mdb-validateEqual\", \"\", \"formControlName\", \"\"], [\"\", \"validateEqual\", \"\", \"formControl\", \"\"], [\"\", \"validateEqual\", \"\", \"ngModel\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => EqualValidatorDirective),\n      multi: true\n    }])]\n  });\n  return EqualValidatorDirective;\n})();\nlet MdbInputDirective = /*#__PURE__*/(() => {\n  class MdbInputDirective {\n    constructor(_elRef, _renderer, platformId) {\n      this._elRef = _elRef;\n      this._renderer = _renderer;\n      this.el = null;\n      this.elLabel = null;\n      this.elIcon = null;\n      this.element = null;\n      this.mdbValidate = true;\n      this.validateSuccess = true;\n      this.validateError = true;\n      this.focusCheckbox = true;\n      this.focusRadio = true;\n      this.isBrowser = false;\n      this.isClicked = false;\n      this.isBrowser = isPlatformBrowser(platformId);\n    }\n\n    onfocus() {\n      try {\n        this._renderer.addClass(this.elLabel, 'active');\n\n        this.isClicked = true;\n      } catch (error) {}\n    }\n\n    onblur() {\n      this.validationFunction();\n\n      try {\n        if (this.el.nativeElement.value === '') {\n          this._renderer.removeClass(this.elLabel, 'active');\n        }\n\n        this.isClicked = false;\n      } catch (error) {}\n    }\n\n    onchange() {\n      try {\n        this.checkValue();\n      } catch (error) {}\n    }\n\n    oniput() {\n      this.validationFunction();\n    }\n\n    onkeydown(event) {\n      try {\n        if (event.target.type === 'number') {\n          if (event.shiftKey) {\n            switch (event.keyCode) {\n              case UP_ARROW:\n                event.target.value = +event.target.value + 10;\n                break;\n\n              case DOWN_ARROW:\n                event.target.value = +event.target.value - 10;\n                break;\n            }\n          }\n\n          if (event.altKey) {\n            switch (event.keyCode) {\n              case UP_ARROW:\n                event.target.value = +event.target.value + 0.1;\n                break;\n\n              case DOWN_ARROW:\n                event.target.value = +event.target.value - 0.1;\n                break;\n            }\n          }\n        }\n      } catch (error) {}\n\n      this.delayedResize();\n    }\n\n    oncut() {\n      try {\n        setTimeout(() => {\n          this.delayedResize();\n        }, 0);\n      } catch (error) {}\n    }\n\n    onpaste() {\n      try {\n        setTimeout(() => {\n          this.delayedResize();\n        }, 0);\n      } catch (error) {}\n    }\n\n    ondrop() {\n      try {\n        setTimeout(() => {\n          this.delayedResize();\n        }, 0);\n      } catch (error) {}\n    }\n\n    updateErrorMsg(value) {\n      if (this.wrongTextContainer) {\n        this.wrongTextContainer.innerHTML = value;\n      }\n    }\n\n    updateSuccessMsg(value) {\n      if (this.rightTextContainer) {\n        this.rightTextContainer.innerHTML = value;\n      }\n    }\n\n    ngOnInit() {\n      try {\n        setTimeout(() => {\n          this.delayedResize();\n        }, 0);\n      } catch (error) {\n        console.log(error);\n      } // Inititalise a new <span> wrong/right elements and render it below the host component.\n\n\n      if (this.mdbValidate) {\n        this.wrongTextContainer = this._renderer.createElement('span');\n\n        this._renderer.addClass(this.wrongTextContainer, 'inputVal');\n\n        this._renderer.addClass(this.wrongTextContainer, 'text-danger');\n\n        this._renderer.appendChild(this._elRef.nativeElement.parentElement, this.wrongTextContainer);\n\n        const textWrong = this._elRef.nativeElement.getAttribute('data-error');\n\n        this.wrongTextContainer.innerHTML = textWrong ? textWrong : 'wrong';\n\n        if (!textWrong && this.errorMessage !== undefined) {\n          this.wrongTextContainer.innerHTML = this.errorMessage;\n        }\n\n        this._renderer.setStyle(this.wrongTextContainer, 'visibility', 'hidden');\n\n        this.rightTextContainer = this._renderer.createElement('span');\n\n        this._renderer.addClass(this.rightTextContainer, 'inputVal');\n\n        this._renderer.addClass(this.rightTextContainer, 'text-success');\n\n        this._renderer.appendChild(this._elRef.nativeElement.parentElement, this.rightTextContainer);\n\n        const textSuccess = this._elRef.nativeElement.getAttribute('data-success');\n\n        this.rightTextContainer.innerHTML = textSuccess ? textSuccess : 'success';\n\n        if (!textSuccess && this.successMessage !== undefined) {\n          this.rightTextContainer.innerHTML = this.successMessage;\n        }\n\n        this._renderer.setStyle(this.rightTextContainer, 'visibility', 'hidden');\n      }\n    }\n\n    ngOnChanges(changes) {\n      if (changes.hasOwnProperty('errorMessage')) {\n        const newErrorMsg = changes.errorMessage.currentValue;\n        this.updateErrorMsg(newErrorMsg);\n      }\n\n      if (changes.hasOwnProperty('successMessage')) {\n        const newSuccessMsg = changes.successMessage.currentValue;\n        this.updateSuccessMsg(newSuccessMsg);\n      }\n    }\n\n    ngDoCheck() {\n      if (this.mdbValidate && this._elRef.nativeElement.classList.contains('ng-valid') && this._elRef.nativeElement.classList.contains('ng-dirty') && !this._elRef.nativeElement.classList.contains('counter-success')) {\n        this._renderer.addClass(this._elRef.nativeElement, 'counter-success');\n\n        this._renderer.setStyle(this.wrongTextContainer, 'visibility', 'hidden');\n\n        this._renderer.setStyle(this.rightTextContainer, 'visibility', 'visible');\n\n        this._renderer.setStyle(this.rightTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n\n        this._renderer.setStyle(this.wrongTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n      }\n\n      if (this.mdbValidate && this._elRef.nativeElement.classList.contains('ng-invalid') && this._elRef.nativeElement.classList.contains('ng-dirty') && !this._elRef.nativeElement.classList.contains('counter-danger')) {\n        this._renderer.addClass(this._elRef.nativeElement, 'counter-danger');\n\n        this._renderer.setStyle(this.rightTextContainer, 'visibility', 'hidden');\n\n        this._renderer.setStyle(this.wrongTextContainer, 'visibility', 'visible');\n\n        this._renderer.setStyle(this.rightTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n\n        this._renderer.setStyle(this.wrongTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n      }\n\n      if (this._elRef.nativeElement.classList.contains('ng-invalid') && this._elRef.nativeElement.classList.contains('ng-pristine') && this._elRef.nativeElement.classList.contains('ng-untouched') || this._elRef.nativeElement.disabled) {\n        if (this._elRef.nativeElement.classList.contains('counter-success')) {\n          this._renderer.removeClass(this._elRef.nativeElement, 'counter-success');\n\n          this._renderer.setStyle(this.rightTextContainer, 'visibility', 'hidden');\n        } else if (this._elRef.nativeElement.classList.contains('counter-danger')) {\n          this._renderer.removeClass(this._elRef.nativeElement, 'counter-danger');\n\n          this._renderer.setStyle(this.wrongTextContainer, 'visibility', 'hidden');\n        }\n      }\n\n      if (!this.validateSuccess) {\n        this._renderer.removeClass(this._elRef.nativeElement, 'counter-success');\n\n        this._renderer.setStyle(this.rightTextContainer, 'display', 'none');\n\n        if (this._elRef.nativeElement.classList.contains('ng-valid')) {\n          this._renderer.removeClass(this._elRef.nativeElement, 'counter-danger');\n        }\n      }\n\n      if (!this.validateError) {\n        this._renderer.removeClass(this._elRef.nativeElement, 'counter-danger');\n\n        this._renderer.setStyle(this.wrongTextContainer, 'display', 'none');\n\n        if (this._elRef.nativeElement.classList.contains('ng-invalid')) {\n          this._renderer.removeClass(this._elRef.nativeElement, 'counter-success');\n        }\n      }\n    }\n\n    validationFunction() {\n      setTimeout(() => {\n        if (this._elRef.nativeElement.classList.contains('ng-invalid')) {\n          this._renderer.removeClass(this._elRef.nativeElement, 'counter-success');\n\n          this._renderer.removeClass(this._elRef.nativeElement, 'counter-danger');\n        }\n\n        if (this._elRef.nativeElement.classList.contains('ng-touched') && this._elRef.nativeElement.classList.contains('ng-invalid')) {\n          if (this.mdbValidate) {\n            this._renderer.addClass(this._elRef.nativeElement, 'counter-danger');\n\n            this._renderer.setStyle(this.rightTextContainer, 'visibility', 'hidden');\n\n            this._renderer.setStyle(this.wrongTextContainer, 'visibility', 'visible');\n\n            this._renderer.setStyle(this.rightTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n\n            this._renderer.setStyle(this.wrongTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n          }\n        } else if (this._elRef.nativeElement.classList.contains('ng-touched') && this._elRef.nativeElement.classList.contains('ng-valid')) {\n          if (this.mdbValidate) {\n            this._renderer.addClass(this._elRef.nativeElement, 'counter-success');\n\n            this._renderer.setStyle(this.rightTextContainer, 'visibility', 'visible');\n\n            this._renderer.setStyle(this.wrongTextContainer, 'visibility', 'hidden');\n\n            this._renderer.setStyle(this.rightTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n\n            this._renderer.setStyle(this.wrongTextContainer, 'top', this._elRef.nativeElement.offsetHeight + 'px');\n          }\n        }\n      }, 0);\n    }\n\n    ngAfterViewInit() {\n      if (this.isBrowser) {\n        try {\n          this.element = document.querySelector('.md-textarea-auto');\n        } catch (error) {}\n      }\n\n      const type = this.el.nativeElement.type;\n\n      if (this.focusCheckbox && type === 'checkbox') {\n        this._renderer.addClass(this.el.nativeElement, 'onFocusSelect');\n      }\n\n      if (this.focusRadio && type === 'radio') {\n        this._renderer.addClass(this.el.nativeElement, 'onFocusSelect');\n      }\n    }\n\n    ngAfterViewChecked() {\n      this.initComponent();\n      this.checkValue();\n    }\n\n    resize() {\n      if (this.el.nativeElement.classList.contains('md-textarea-auto')) {\n        this._renderer.setStyle(this.el.nativeElement, 'height', 'auto');\n\n        this._renderer.setStyle(this.el.nativeElement, 'height', this.el.nativeElement.scrollHeight + 'px');\n      }\n    }\n\n    delayedResize() {\n      setTimeout(() => {\n        this.resize();\n      }, 0);\n    }\n\n    initComponent() {\n      let inputId;\n      let inputP;\n\n      if (this.isBrowser) {\n        try {\n          inputId = this.el.nativeElement.id;\n        } catch (err) {}\n\n        try {\n          inputP = this.el.nativeElement.parentNode;\n        } catch (err) {}\n\n        this.elLabel = inputP.querySelector('label[for=\"' + inputId + '\"]') || inputP.querySelector('label');\n\n        if (this.elLabel && this.el.nativeElement.value !== '') {\n          this._renderer.addClass(this.elLabel, 'active');\n        }\n\n        this.elIcon = inputP.querySelector('i') || false;\n\n        if (this.elIcon) {\n          this._renderer.addClass(this.elIcon, 'active');\n        }\n      }\n    }\n\n    checkValue() {\n      let value = '';\n\n      if (this.elLabel != null) {\n        value = this.el.nativeElement.value || '';\n\n        if (value === '') {\n          this._renderer.removeClass(this.elLabel, 'active');\n\n          if (this.elIcon) {\n            this._renderer.removeClass(this.elIcon, 'active');\n          } // tslint:disable-next-line:max-line-length\n\n        }\n\n        if (value === '' && this.isClicked || value === '' && this.el.nativeElement.placeholder || value === '' && this.el.nativeElement.attributes.placeholder) {\n          this._renderer.addClass(this.elLabel, 'active');\n        }\n      }\n    }\n\n  }\n\n  MdbInputDirective.ɵfac = function MdbInputDirective_Factory(t) {\n    return new (t || MdbInputDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n\n  MdbInputDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MdbInputDirective,\n    selectors: [[\"\", \"mdbInputDirective\", \"\"]],\n    hostBindings: function MdbInputDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MdbInputDirective_focus_HostBindingHandler() {\n          return ctx.onfocus();\n        })(\"blur\", function MdbInputDirective_blur_HostBindingHandler() {\n          return ctx.onblur();\n        })(\"change\", function MdbInputDirective_change_HostBindingHandler() {\n          return ctx.onchange();\n        })(\"input\", function MdbInputDirective_input_HostBindingHandler() {\n          return ctx.oniput();\n        })(\"keydown\", function MdbInputDirective_keydown_HostBindingHandler($event) {\n          return ctx.onkeydown($event);\n        })(\"cut\", function MdbInputDirective_cut_HostBindingHandler() {\n          return ctx.oncut();\n        })(\"paste\", function MdbInputDirective_paste_HostBindingHandler() {\n          return ctx.onpaste();\n        })(\"drop\", function MdbInputDirective_drop_HostBindingHandler() {\n          return ctx.ondrop();\n        });\n      }\n    },\n    inputs: {\n      mdbValidate: \"mdbValidate\",\n      validateSuccess: \"validateSuccess\",\n      validateError: \"validateError\",\n      focusCheckbox: \"focusCheckbox\",\n      focusRadio: \"focusRadio\",\n      mdbInputDirective: \"mdbInputDirective\",\n      customRegex: \"customRegex\",\n      errorMessage: \"errorMessage\",\n      successMessage: \"successMessage\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  return MdbInputDirective;\n})();\n// tslint:disable-next-line:directive-class-suffix\nlet MdbInput = /*#__PURE__*/(() => {\n  class MdbInput {\n    constructor(el, _renderer, platformId) {\n      this.el = el;\n      this._renderer = _renderer;\n      this.elLabel = null;\n      this.elIcon = null;\n      this.focusCheckbox = true;\n      this.focusRadio = true;\n      this.isBrowser = false;\n      this.isClicked = false;\n      this.element = null;\n      this.isBrowser = isPlatformBrowser(platformId);\n    }\n\n    onfocus() {\n      try {\n        this._renderer.addClass(this.elLabel, 'active');\n\n        this.isClicked = true;\n      } catch (error) {}\n    }\n\n    onblur() {\n      try {\n        if (this.el.nativeElement.value === '') {\n          this._renderer.removeClass(this.elLabel, 'active');\n        }\n\n        this.isClicked = false;\n      } catch (error) {}\n    }\n\n    onchange() {\n      try {\n        this.checkValue();\n      } catch (error) {}\n    }\n\n    onkeydown(event) {\n      try {\n        if (event.target.type === 'number') {\n          if (event.shiftKey) {\n            switch (event.keyCode) {\n              case UP_ARROW:\n                event.target.value = +event.target.value + 10;\n                break;\n\n              case DOWN_ARROW:\n                event.target.value = +event.target.value - 10;\n                break;\n            }\n          }\n\n          if (event.altKey) {\n            switch (event.keyCode) {\n              case UP_ARROW:\n                event.target.value = +event.target.value + 0.1;\n                break;\n\n              case DOWN_ARROW:\n                event.target.value = +event.target.value - 0.1;\n                break;\n            }\n          }\n        }\n      } catch (error) {}\n\n      this.delayedResize();\n    }\n\n    oncut() {\n      try {\n        setTimeout(() => {\n          this.delayedResize();\n        }, 0);\n      } catch (error) {}\n    }\n\n    onpaste() {\n      try {\n        setTimeout(() => {\n          this.delayedResize();\n        }, 0);\n      } catch (error) {}\n    }\n\n    ondrop() {\n      try {\n        setTimeout(() => {\n          this.delayedResize();\n        }, 0);\n      } catch (error) {}\n    }\n\n    ngAfterViewInit() {\n      if (this.isBrowser) {\n        try {\n          this.element = document.querySelector('.md-textarea-auto');\n\n          if (this.element) {\n            this.delayedResize();\n          }\n        } catch (error) {}\n      }\n\n      const type = this.el.nativeElement.type;\n\n      if (this.focusCheckbox && type === 'checkbox') {\n        this._renderer.addClass(this.el.nativeElement, 'onFocusSelect');\n      }\n\n      if (this.focusRadio && type === 'radio') {\n        this._renderer.addClass(this.el.nativeElement, 'onFocusSelect');\n      }\n    }\n\n    ngAfterViewChecked() {\n      this.initComponent();\n      this.checkValue();\n    }\n\n    resize() {\n      if (this.el.nativeElement.classList.contains('md-textarea-auto')) {\n        this._renderer.setStyle(this.el.nativeElement, 'height', 'auto');\n\n        if (this.el.nativeElement.scrollHeight) {\n          this._renderer.setStyle(this.el.nativeElement, 'height', this.el.nativeElement.scrollHeight + 'px');\n        }\n      }\n    }\n\n    delayedResize() {\n      setTimeout(() => {\n        this.resize();\n      }, 0);\n    }\n\n    initComponent() {\n      let inputId;\n      let inputP;\n\n      if (this.isBrowser) {\n        try {\n          inputId = this.el.nativeElement.id;\n        } catch (err) {}\n\n        try {\n          inputP = this.el.nativeElement.parentNode;\n        } catch (err) {}\n\n        this.elLabel = inputP.querySelector('label[for=\"' + inputId + '\"]') || inputP.querySelector('label');\n\n        if (this.elLabel && this.el.nativeElement.value !== '') {\n          this._renderer.addClass(this.elLabel, 'active');\n        }\n\n        this.elIcon = inputP.querySelector('i') || false;\n      }\n    }\n\n    checkValue() {\n      let value = '';\n\n      if (this.elLabel != null) {\n        value = this.el.nativeElement.value || '';\n\n        if (value === '') {\n          this._renderer.removeClass(this.elLabel, 'active');\n\n          if (this.elIcon) {\n            this._renderer.removeClass(this.elIcon, 'active');\n          }\n        }\n\n        if (value === '' && this.isClicked || value === '' && this.el.nativeElement.placeholder || value === '' && this.el.nativeElement.attributes.placeholder) {\n          this._renderer.addClass(this.elLabel, 'active');\n        }\n      }\n    }\n\n  }\n\n  MdbInput.ɵfac = function MdbInput_Factory(t) {\n    return new (t || MdbInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n\n  MdbInput.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MdbInput,\n    selectors: [[\"\", \"mdbInput\", \"\"]],\n    hostBindings: function MdbInput_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MdbInput_focus_HostBindingHandler() {\n          return ctx.onfocus();\n        })(\"blur\", function MdbInput_blur_HostBindingHandler() {\n          return ctx.onblur();\n        })(\"change\", function MdbInput_change_HostBindingHandler() {\n          return ctx.onchange();\n        })(\"keydown\", function MdbInput_keydown_HostBindingHandler($event) {\n          return ctx.onkeydown($event);\n        })(\"cut\", function MdbInput_cut_HostBindingHandler() {\n          return ctx.oncut();\n        })(\"paste\", function MdbInput_paste_HostBindingHandler() {\n          return ctx.onpaste();\n        })(\"drop\", function MdbInput_drop_HostBindingHandler() {\n          return ctx.ondrop();\n        });\n      }\n    },\n    inputs: {\n      focusCheckbox: \"focusCheckbox\",\n      focusRadio: \"focusRadio\"\n    }\n  });\n  return MdbInput;\n})();\nlet InputsModule = /*#__PURE__*/(() => {\n  class InputsModule {\n    static forRoot() {\n      return {\n        ngModule: InputsModule,\n        providers: []\n      };\n    }\n\n  }\n\n  InputsModule.ɵfac = function InputsModule_Factory(t) {\n    return new (t || InputsModule)();\n  };\n\n  InputsModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: InputsModule\n  });\n  InputsModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return InputsModule;\n})();\nlet ModalOptions = /*#__PURE__*/(() => {\n  class ModalOptions {}\n\n  ModalOptions.ɵfac = function ModalOptions_Factory(t) {\n    return new (t || ModalOptions)();\n  };\n\n  ModalOptions.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ModalOptions,\n    factory: ModalOptions.ɵfac\n  });\n  return ModalOptions;\n})();\nlet MDBModalRef = /*#__PURE__*/(() => {\n  class MDBModalRef {\n    /**\r\n     * Hides the modal\r\n     */\n    hide() {}\n\n  }\n\n  MDBModalRef.ɵfac = function MDBModalRef_Factory(t) {\n    return new (t || MDBModalRef)();\n  };\n\n  MDBModalRef.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: MDBModalRef,\n    factory: MDBModalRef.ɵfac\n  });\n  return MDBModalRef;\n})();\nconst ɵ0 = {};\nconst modalConfigDefaults = {\n  backdrop: true,\n  keyboard: true,\n  focus: true,\n  show: false,\n  ignoreBackdropClick: false,\n  class: '',\n  containerClass: '',\n  animated: true,\n  scroll: false,\n  data: ɵ0\n};\nconst ClassName = {\n  SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\n  BACKDROP: 'modal-backdrop',\n  OPEN: 'modal-open',\n  FADE: 'fade',\n  IN: 'in',\n  SHOW: 'show' // bs4\n\n};\nconst Selector = {\n  DIALOG: '.modal-dialog',\n  DATA_TOGGLE: '[data-toggle=\"modal\"]',\n  DATA_DISMISS: '[data-dismiss=\"modal\"]',\n  FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'\n};\nconst TransitionDurations = {\n  MODAL: 300,\n  BACKDROP: 150\n};\nconst DISMISS_REASONS = {\n  BACKRDOP: 'backdrop-click',\n  ESC: 'esc'\n};\n\nclass ModalBackdropOptions {\n  constructor(options) {\n    this.animate = true;\n    Object.assign(this, options);\n  }\n\n}\n/** This component will be added as background layout for modals if enabled */\n\n\nlet ModalBackdropComponent = /*#__PURE__*/(() => {\n  class ModalBackdropComponent {\n    constructor(element, renderer) {\n      this.element = element;\n      this.renderer = renderer;\n      this.classNameBackDrop = true;\n      this._isShown = false;\n    }\n\n    get isAnimated() {\n      return this._isAnimated;\n    }\n\n    set isAnimated(value) {\n      this._isAnimated = value;\n    }\n\n    get isShown() {\n      return this._isShown;\n    }\n\n    set isShown(value) {\n      this._isShown = value;\n\n      if (value) {\n        this.renderer.addClass(this.element.nativeElement, `${ClassName.IN}`);\n\n        if (!isBs3$1()) {\n          this.renderer.addClass(this.element.nativeElement, `${ClassName.SHOW}`);\n        }\n      } else {\n        this.renderer.removeClass(this.element.nativeElement, `${ClassName.IN}`);\n\n        if (!isBs3$1()) {\n          this.renderer.removeClass(this.element.nativeElement, `${ClassName.SHOW}`);\n        }\n      }\n    }\n\n    ngOnInit() {\n      if (this.isAnimated) {\n        this.renderer.addClass(this.element.nativeElement, `${ClassName.FADE}`);\n        Utils.reflow(this.element.nativeElement);\n      } else {\n        this.renderer.addClass(this.element.nativeElement, `${ClassName.FADE}`);\n        Utils.reflow(this.element.nativeElement);\n      }\n\n      this.isShown = true;\n    }\n\n  }\n\n  ModalBackdropComponent.ɵfac = function ModalBackdropComponent_Factory(t) {\n    return new (t || ModalBackdropComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  ModalBackdropComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ModalBackdropComponent,\n    selectors: [[\"mdb-modal-backdrop\"]],\n    hostVars: 2,\n    hostBindings: function ModalBackdropComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"modal-backdrop\", ctx.classNameBackDrop);\n      }\n    },\n    decls: 0,\n    vars: 0,\n    template: function ModalBackdropComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return ModalBackdropComponent;\n})();\nconst TRANSITION_DURATION = 300;\nconst BACKDROP_TRANSITION_DURATION = 150;\n/** Mark any code with directive to show it's content in modal */\n// tslint:disable-next-line:component-class-suffix\n\nlet ModalDirective = /*#__PURE__*/(() => {\n  class ModalDirective {\n    constructor(_element, _focusTrapFactory, _viewContainerRef, _renderer, clf) {\n      this._element = _element;\n      this._focusTrapFactory = _focusTrapFactory;\n      this._renderer = _renderer;\n      /** This event fires immediately when the `show` instance method is called. */\n      // tslint:disable-next-line:no-output-on-prefix\n\n      this.onShow = new EventEmitter();\n      this.open = new EventEmitter();\n      /** This event is fired when the modal has been made visible to the user (will wait for CSS transitions to complete) */\n      // tslint:disable-next-line:no-output-on-prefix\n\n      this.onShown = new EventEmitter();\n      this.opened = new EventEmitter();\n      /** This event is fired immediately when the hide instance method has been called. */\n      // tslint:disable-next-line:no-output-on-prefix\n\n      this.onHide = new EventEmitter();\n      this.close = new EventEmitter();\n      /** This event is fired when the modal has finished being hidden from the user (will wait for CSS transitions to complete). */\n      // tslint:disable-next-line:no-output-on-prefix\n\n      this.onHidden = new EventEmitter();\n      this.closed = new EventEmitter(); // seems like an Options\n\n      this.isAnimated = true;\n      this._isShown = false;\n      this.isBodyOverflowing = false;\n      this.originalBodyPadding = 0;\n      this.scrollbarWidth = 0;\n      this.timerHideModal = 0;\n      this.timerRmBackDrop = 0;\n      this.isNested = false;\n      this.utils = new Utils();\n      this._backdrop = clf.createLoader(_element, _viewContainerRef, _renderer);\n    }\n    /** allows to set modal configuration via element property */\n\n\n    set config(conf) {\n      this._config = this.getConfig(conf);\n    }\n\n    get config() {\n      return this._config;\n    }\n\n    get isShown() {\n      return this._isShown;\n    }\n    /*   @HostListener('keydown', ['$event']) onKeyDown(event: any) {\r\n      this.utils.focusTrapModal(event, this._element);\r\n    }\r\n    */\n\n\n    onClick(event) {\n      if (this.config.ignoreBackdropClick || this.config.backdrop === 'static' || event.target !== this._element.nativeElement) {\n        return;\n      }\n\n      this.dismissReason = DISMISS_REASONS.BACKRDOP;\n      this.hide(event);\n    } // todo: consider preventing default and stopping propagation\n\n\n    onEsc() {\n      if (this.config.keyboard) {\n        this.dismissReason = DISMISS_REASONS.ESC;\n        this.hide();\n      }\n    }\n\n    ngOnDestroy() {\n      this.config = void 0;\n\n      if (this._isShown) {\n        this._isShown = false;\n        this.hideModal();\n\n        this._backdrop.dispose();\n      }\n    }\n\n    ngAfterViewInit() {\n      this._config = this._config || this.getConfig();\n      setTimeout(() => {\n        if (this._config.show) {\n          this.show();\n        }\n      }, 0);\n\n      this._createFocusTrap();\n    }\n\n    ngOnChanges() {\n      this.config.backdrop ? this.showBackdrop() : this.removeBackdrop();\n    }\n    /* Public methods */\n\n    /** Allows to manually toggle modal visibility */\n\n\n    toggle() {\n      return this._isShown ? this.hide() : this.show();\n    }\n    /** Allows to manually open modal */\n\n\n    show() {\n      this.dismissReason = null;\n      this.onShow.emit(this);\n      this.open.emit(this);\n\n      if (this._isShown) {\n        return;\n      }\n\n      clearTimeout(this.timerHideModal);\n      clearTimeout(this.timerRmBackDrop);\n      this._isShown = true;\n      this.checkScrollbar();\n      this.setScrollbar();\n\n      if (document$2 && document$2.body) {\n        if (document$2.body.classList.contains(ClassName.OPEN)) {\n          this.isNested = true;\n        } else {\n          this._renderer.addClass(document$2.body, ClassName.OPEN);\n        }\n      }\n\n      this.showBackdrop(() => {\n        this.showElement();\n      });\n\n      if (!this.config.backdrop && this.config.ignoreBackdropClick) {\n        this._renderer.setStyle(this._element.nativeElement, 'position', 'fixed');\n\n        if (navigator$1.userAgent.indexOf('Safari') !== -1 && navigator$1.userAgent.indexOf('Chrome') === -1) {\n          this._renderer.setStyle(this._element.nativeElement, 'overflow', 'unset');\n\n          this._renderer.setStyle(this._element.nativeElement, 'overflow-y', 'unset');\n\n          this._renderer.setStyle(this._element.nativeElement, 'overflow-x', 'unset');\n        }\n      }\n    }\n    /** Allows to manually close modal */\n\n\n    hide(event) {\n      if (event) {\n        event.preventDefault();\n      } // fix(modal): resolved problem with not pausing iframe/video when closing modal\n\n\n      const iframeElements = Array.from(this._element.nativeElement.querySelectorAll('iframe'));\n      const videoElements = Array.from(this._element.nativeElement.querySelectorAll('video'));\n      iframeElements.forEach(iframe => {\n        const srcAttribute = iframe.getAttribute('src');\n\n        this._renderer.setAttribute(iframe, 'src', srcAttribute);\n      });\n      videoElements.forEach(video => {\n        video.pause();\n      });\n      this.onHide.emit(this);\n      this.close.emit(this);\n\n      if (!this._isShown) {\n        return;\n      }\n\n      clearTimeout(this.timerHideModal);\n      clearTimeout(this.timerRmBackDrop);\n      this._isShown = false;\n\n      this._renderer.removeClass(this._element.nativeElement, ClassName.IN);\n\n      if (!isBs3$1()) {\n        this._renderer.removeClass(this._element.nativeElement, ClassName.SHOW);\n      }\n\n      if (this.isAnimated) {\n        this.timerHideModal = setTimeout(() => this.hideModal(), TRANSITION_DURATION);\n      } else {\n        this.hideModal();\n      }\n    }\n    /** Private methods @internal */\n\n\n    getConfig(config) {\n      return Object.assign({}, modalConfigDefaults, config);\n    }\n    /**\r\n     *  Show dialog\r\n     *  @internal\r\n     */\n\n\n    showElement() {\n      if (!this._element.nativeElement.parentNode || this._element.nativeElement.parentNode.nodeType !== Node.ELEMENT_NODE) {\n        // don't move modals dom position\n        if (document$2 && document$2.body) {\n          document$2.body.appendChild(this._element.nativeElement);\n        }\n      }\n\n      this._renderer.setAttribute(this._element.nativeElement, 'aria-hidden', 'false');\n\n      this._renderer.setStyle(this._element.nativeElement, 'display', 'block');\n\n      this._renderer.setProperty(this._element.nativeElement, 'scrollTop', 0);\n\n      if (this.isAnimated) {\n        Utils.reflow(this._element.nativeElement);\n      }\n\n      this._renderer.addClass(this._element.nativeElement, ClassName.IN);\n\n      if (!isBs3$1()) {\n        this._renderer.addClass(this._element.nativeElement, ClassName.SHOW);\n      }\n\n      const transitionComplete = () => {\n        if (this._config.focus) {\n          this._element.nativeElement.focus();\n        }\n\n        this.onShown.emit(this);\n        this.opened.emit(this);\n      };\n\n      if (this.isAnimated) {\n        setTimeout(transitionComplete, TRANSITION_DURATION);\n      } else {\n        transitionComplete();\n      }\n    }\n\n    _createFocusTrap() {\n      if (!this._focusTrap) {\n        this._focusTrap = this._focusTrapFactory.create(this._element.nativeElement);\n      }\n    }\n    /** @internal */\n\n\n    hideModal() {\n      this._renderer.setAttribute(this._element.nativeElement, 'aria-hidden', 'true');\n\n      this._renderer.setStyle(this._element.nativeElement, 'display', 'none');\n\n      this.showBackdrop(() => {\n        if (!this.isNested) {\n          if (document$2 && document$2.body) {\n            this._renderer.removeClass(document$2.body, ClassName.OPEN);\n          }\n        }\n\n        this.resetAdjustments();\n        this.focusOtherModal();\n        this.onHidden.emit(this);\n        this.closed.emit(this);\n      });\n    }\n    /** @internal */\n\n\n    showBackdrop(callback) {\n      if (this._isShown && this.config.backdrop && (!this.backdrop || !this.backdrop.instance.isShown)) {\n        this.removeBackdrop();\n\n        this._backdrop.attach(ModalBackdropComponent).to('body').show({\n          isAnimated: this.isAnimated\n        });\n\n        this.backdrop = this._backdrop._componentRef;\n\n        if (!callback) {\n          return;\n        }\n\n        if (!this.isAnimated) {\n          callback();\n          return;\n        }\n\n        setTimeout(callback, BACKDROP_TRANSITION_DURATION);\n      } else if (!this._isShown && this.backdrop) {\n        this.backdrop.instance.isShown = false;\n\n        const callbackRemove = () => {\n          this.removeBackdrop();\n\n          if (callback) {\n            callback();\n          }\n        };\n\n        if (this.backdrop.instance.isAnimated) {\n          this.timerRmBackDrop = setTimeout(callbackRemove, BACKDROP_TRANSITION_DURATION);\n        } else {\n          callbackRemove();\n        }\n      } else if (callback) {\n        callback();\n      }\n    }\n    /** @internal */\n\n\n    removeBackdrop() {\n      this._backdrop.hide();\n\n      this.backdrop = undefined;\n    }\n\n    focusOtherModal() {\n      try {\n        const otherOpenedModals = this._element.nativeElement.parentElement.querySelectorAll('.in[mdbModal]');\n\n        if (!otherOpenedModals.length) {\n          return;\n        }\n\n        otherOpenedModals[otherOpenedModals.length - 1].nativeElement.focus();\n      } catch (error) {}\n    }\n    /** @internal */\n\n\n    resetAdjustments() {\n      this._renderer.setStyle(this._element.nativeElement, 'paddingLeft', '');\n\n      this._renderer.setStyle(this._element.nativeElement, 'paddingRight', '');\n    }\n    /** Scroll bar tricks */\n\n    /** @internal */\n\n\n    checkScrollbar() {\n      this.isBodyOverflowing = document$2.body.clientWidth < win$1.innerWidth;\n      this.scrollbarWidth = this.getScrollbarWidth();\n    }\n\n    setScrollbar() {\n      if (!document$2) {\n        return;\n      }\n\n      this.originalBodyPadding = parseInt(win$1.getComputedStyle(document$2.body).getPropertyValue('padding-right') || 0, 10);\n    } // thx d.walsh\n\n\n    getScrollbarWidth() {\n      const scrollDiv = this._renderer.createElement('div', void 0);\n\n      this._renderer.appendChild(document$2.body, scrollDiv);\n\n      scrollDiv.className = ClassName.SCROLLBAR_MEASURER;\n      const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document$2.body.removeChild(scrollDiv);\n      return scrollbarWidth;\n    }\n\n  }\n\n  ModalDirective.ɵfac = function ModalDirective_Factory(t) {\n    return new (t || ModalDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ConfigurableFocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ComponentLoaderFactory));\n  };\n\n  ModalDirective.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ModalDirective,\n    selectors: [[\"\", \"mdbModal\", \"\"]],\n    hostBindings: function ModalDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function ModalDirective_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        })(\"keydown.esc\", function ModalDirective_keydown_esc_HostBindingHandler() {\n          return ctx.onEsc();\n        });\n      }\n    },\n    inputs: {\n      config: \"config\"\n    },\n    outputs: {\n      onShow: \"onShow\",\n      open: \"open\",\n      onShown: \"onShown\",\n      opened: \"opened\",\n      onHide: \"onHide\",\n      close: \"close\",\n      onHidden: \"onHidden\",\n      closed: \"closed\"\n    },\n    exportAs: [\"mdb-modal\", \"mdbModal\"],\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    attrs: _c11,\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function ModalDirective_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    styles: [_c12],\n    encapsulation: 2\n  });\n  return ModalDirective;\n})();\nlet ModalContainerComponent = /*#__PURE__*/(() => {\n  class ModalContainerComponent {\n    constructor(options, _element, _renderer) {\n      // this.mdbModalService = msConfig.serviceInstance;\n      this._renderer = _renderer;\n      this.modalClass = 'modal';\n      this.tabindex = -1;\n      this.role = 'dialog';\n      this.modal = true;\n      this.isShown = false;\n      this.isModalHiding = false;\n      this._element = _element;\n      this.config = Object.assign({}, options);\n    }\n\n    onClick(event) {\n      if (this.config.ignoreBackdropClick || this.config.backdrop === 'static' || event.target !== this._element.nativeElement) {\n        return;\n      }\n\n      this.mdbModalService.setDismissReason(DISMISS_REASONS.BACKRDOP);\n      this.hide();\n    }\n\n    onEsc() {\n      if (this.config.keyboard && this.level === this.mdbModalService.getModalsCount()) {\n        this.mdbModalService.setDismissReason(DISMISS_REASONS.ESC);\n        this.hide();\n      }\n    }\n\n    ngOnInit() {\n      if (this.config.animated) {\n        this._renderer.addClass(this._element.nativeElement, 'fade');\n      }\n\n      this._renderer.setStyle(this._element.nativeElement, 'display', 'block');\n\n      if (window && window.navigator.userAgent.indexOf('Edge') !== -1 && this.config && this.config.toString().indexOf('side-modal') === -1 || window && window.navigator.userAgent.indexOf('Edge') !== -1 && this.config && this.config.toString().indexOf('modal-full-height') === -1) {\n        this.isShown = true;\n\n        this._renderer.addClass(this._element.nativeElement, isBs3$1() ? ClassName.IN : ClassName.SHOW);\n\n        this._renderer.setStyle(this._element.nativeElement, 'transition', 'transform 0.3s ease-out');\n\n        this._renderer.setStyle(this._element.nativeElement, 'transform', 'translate(0, 25px)');\n      } else {\n        setTimeout(() => {\n          this.isShown = true;\n\n          this._renderer.addClass(this._element.nativeElement, isBs3$1() ? ClassName.IN : ClassName.SHOW);\n        }, this.isAnimated ? TransitionDurations.BACKDROP : 0);\n      }\n\n      if (document && document.body) {\n        if (this.mdbModalService.getModalsCount() === 1) {\n          this.mdbModalService.checkScrollbar();\n          this.mdbModalService.setScrollbar();\n        }\n\n        this._renderer.addClass(document.body, ClassName.OPEN);\n      }\n\n      if (this.config.containerClass) {\n        this.updateContainerClass();\n      }\n\n      if (this.config.scroll) {\n        this._renderer.setStyle(this._element.nativeElement, 'overflow-y', 'auto');\n      }\n    }\n\n    focusModalElement() {\n      if (this.config.focus) {\n        this._element.nativeElement.focus();\n      }\n    }\n\n    updateContainerClass() {\n      if (this.config.containerClass) {\n        const containerClasses = this.config.containerClass;\n        const classArr = containerClasses.split(' ');\n\n        for (let i = 0; i < classArr.length; i++) {\n          this._renderer.addClass(this._element.nativeElement, classArr[i]);\n        }\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.isShown) {\n        this.hide();\n      }\n    }\n\n    hide() {\n      if (this.isModalHiding || !this.isShown) {\n        return;\n      }\n\n      this.isModalHiding = true;\n\n      this._renderer.removeClass(this._element.nativeElement, isBs3$1() ? ClassName.IN : ClassName.SHOW); // fix(modal): resolved problem with not pausing iframe/video when closing modal\n\n\n      const iframeElements = Array.from(this._element.nativeElement.querySelectorAll('iframe'));\n      const videoElements = Array.from(this._element.nativeElement.querySelectorAll('video'));\n      iframeElements.forEach(iframe => {\n        const srcAttribute = iframe.getAttribute('src');\n\n        this._renderer.setAttribute(iframe, 'src', srcAttribute);\n      });\n      videoElements.forEach(video => {\n        video.pause();\n      });\n      setTimeout(() => {\n        this.isShown = false;\n\n        if (document && document.body && this.mdbModalService.getModalsCount() === 1) {\n          this._renderer.removeClass(document.body, ClassName.OPEN);\n        }\n\n        this.mdbModalService.hide(this.level);\n        this.isModalHiding = false;\n      }, this.isAnimated ? TransitionDurations.MODAL : 0);\n    }\n\n  }\n\n  ModalContainerComponent.ɵfac = function ModalContainerComponent_Factory(t) {\n    return new (t || ModalContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ModalOptions), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  ModalContainerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: ModalContainerComponent,\n    selectors: [[\"mdb-modal-container\"]],\n    hostVars: 4,\n    hostBindings: function ModalContainerComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function ModalContainerComponent_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        })(\"keydown.esc\", function ModalContainerComponent_keydown_esc_HostBindingHandler() {\n          return ctx.onEsc();\n        }, false, ɵngcc0.ɵɵresolveWindow);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"tabindex\", ctx.tabindex);\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role);\n        ɵngcc0.ɵɵclassProp(\"modal\", ctx.modal);\n      }\n    },\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 2,\n    consts: [[\"role\", \"document\", \"cdkTrapFocus\", \"\"], [1, \"modal-content\", \"modal-dynamic\"]],\n    template: function ModalContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(\"modal-dialog\" + (ctx.config.class ? \" \" + ctx.config.class : \"\"));\n      }\n    },\n    directives: [ɵngcc2.CdkTrapFocus],\n    styles: [_c12],\n    encapsulation: 2\n  });\n  return ModalContainerComponent;\n})();\nlet MDBModalService = /*#__PURE__*/(() => {\n  class MDBModalService {\n    constructor(rendererFactory, clf) {\n      this.clf = clf;\n      this.config = modalConfigDefaults;\n      this.open = new EventEmitter();\n      this.opened = new EventEmitter();\n      this.close = new EventEmitter();\n      this.closed = new EventEmitter();\n      this.isBodyOverflowing = false;\n      this.originalBodyPadding = 0;\n      this.scrollbarWidth = 0;\n      this.modalsCount = 0;\n      this.lastDismissReason = '';\n      this.loaders = [];\n      this._backdropLoader = this.clf.createLoader(this.el, this.vcr, this.renderer);\n      this.renderer = rendererFactory.createRenderer(null, null);\n    }\n    /** Shows a modal */\n\n\n    show(content, config) {\n      this.modalsCount++;\n\n      this._createLoaders();\n\n      this.config = Object.assign({}, modalConfigDefaults, config);\n\n      this._showBackdrop();\n\n      this.lastDismissReason = null;\n      return this._showModal(content);\n    }\n\n    hide(level) {\n      if (this.modalsCount === 1) {\n        this._hideBackdrop();\n\n        this.resetScrollbar();\n      }\n\n      this.modalsCount = this.modalsCount >= 1 ? this.modalsCount - 1 : 0;\n      setTimeout(() => {\n        this._hideModal(level);\n\n        this.removeLoaders(level);\n      }, this.config.animated ? TransitionDurations.BACKDROP : 0);\n    }\n\n    _showBackdrop() {\n      const isBackdropEnabled = this.config.backdrop || this.config.backdrop === 'static';\n      const isBackdropInDOM = !this.backdropRef || !this.backdropRef.instance.isShown;\n\n      if (this.modalsCount === 1) {\n        this.removeBackdrop();\n\n        if (isBackdropEnabled && isBackdropInDOM) {\n          this._backdropLoader.attach(ModalBackdropComponent).to('body').show({\n            isAnimated: this.config.animated\n          });\n\n          this.backdropRef = this._backdropLoader._componentRef;\n        }\n      }\n    }\n\n    _hideBackdrop() {\n      if (!this.backdropRef) {\n        return;\n      }\n\n      this.backdropRef.instance.isShown = false;\n      const duration = this.config.animated ? TransitionDurations.BACKDROP : 0;\n      setTimeout(() => this.removeBackdrop(), duration);\n    }\n\n    _showModal(content) {\n      const modalLoader = this.loaders[this.loaders.length - 1];\n      const mdbModalRef = new MDBModalRef();\n      const modalContainerRef = modalLoader.provide({\n        provide: ModalOptions,\n        useValue: this.config\n      }).provide({\n        provide: MDBModalRef,\n        useValue: mdbModalRef\n      }).attach(ModalContainerComponent).to('body').show({\n        content,\n        isAnimated: this.config.animated,\n        data: this.config.data,\n        mdbModalService: this\n      });\n      modalContainerRef.instance.focusModalElement();\n      modalContainerRef.instance.level = this.getModalsCount();\n\n      mdbModalRef.hide = () => {\n        modalContainerRef.instance.hide();\n      };\n\n      mdbModalRef.content = modalLoader.getInnerComponent() || null;\n      return mdbModalRef;\n    }\n\n    _hideModal(level) {\n      const modalLoader = this.loaders[level - 1];\n\n      if (modalLoader) {\n        modalLoader.hide();\n      }\n    }\n\n    getModalsCount() {\n      return this.modalsCount;\n    }\n\n    setDismissReason(reason) {\n      this.lastDismissReason = reason;\n    }\n\n    removeBackdrop() {\n      this._backdropLoader.hide();\n\n      this.backdropRef = null;\n    }\n    /** AFTER PR MERGE MODAL.COMPONENT WILL BE USING THIS CODE*/\n\n    /** Scroll bar tricks */\n\n    /** @internal */\n\n\n    checkScrollbar() {\n      this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\n      this.scrollbarWidth = this.getScrollbarWidth();\n    }\n\n    setScrollbar() {\n      if (!document) {\n        return;\n      }\n\n      this.originalBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right') || '0', 10);\n    }\n\n    resetScrollbar() {\n      document.body.style.paddingRight = this.originalBodyPadding + 'px';\n    } // thx d.walsh\n\n\n    getScrollbarWidth() {\n      const scrollDiv = this.renderer.createElement('div');\n      this.renderer.addClass(scrollDiv, ClassName.SCROLLBAR_MEASURER);\n      this.renderer.appendChild(document.body, scrollDiv);\n      const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      this.renderer.removeChild(document.body, scrollDiv);\n      return scrollbarWidth;\n    }\n\n    _createLoaders() {\n      const loader = this.clf.createLoader(this.el, this.vcr, this.renderer);\n      this.copyEvent(loader.onBeforeShow, this.open);\n      this.copyEvent(loader.onShown, this.opened);\n      this.copyEvent(loader.onBeforeHide, this.close);\n      this.copyEvent(loader.onHidden, this.closed);\n      this.loaders.push(loader);\n    }\n\n    removeLoaders(level) {\n      this.loaders.splice(level - 1, 1);\n      this.loaders.forEach((loader, i) => {\n        loader.instance.level = i + 1;\n      });\n    }\n\n    copyEvent(from, to) {\n      from.subscribe(() => {\n        to.emit(this.lastDismissReason);\n      });\n    }\n\n  }\n\n  MDBModalService.ɵfac = function MDBModalService_Factory(t) {\n    return new (t || MDBModalService)(ɵngcc0.ɵɵinject(ɵngcc0.RendererFactory2), ɵngcc0.ɵɵinject(ComponentLoaderFactory));\n  };\n\n  MDBModalService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: MDBModalService,\n    factory: MDBModalService.ɵfac\n  });\n  return MDBModalService;\n})();\nlet ModalModule = /*#__PURE__*/(() => {\n  class ModalModule {\n    static forRoot() {\n      return {\n        ngModule: ModalModule,\n        providers: [MDBModalService, ComponentLoaderFactory, PositioningService]\n      };\n    }\n\n  }\n\n  ModalModule.ɵfac = function ModalModule_Factory(t) {\n    return new (t || ModalModule)();\n  };\n\n  ModalModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ModalModule\n  });\n  ModalModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[A11yModule]]\n  });\n  return ModalModule;\n})();\nlet NavbarService = /*#__PURE__*/(() => {\n  class NavbarService {\n    constructor() {\n      this.navbarLinkClicks = new Subject();\n    }\n\n    getNavbarLinkClicks() {\n      return this.navbarLinkClicks.asObservable();\n    }\n\n    setNavbarLinkClicks() {\n      this.navbarLinkClicks.next();\n    }\n\n  }\n\n  NavbarService.ɵfac = function NavbarService_Factory(t) {\n    return new (t || NavbarService)();\n  };\n\n  NavbarService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: NavbarService,\n    factory: NavbarService.ɵfac\n  });\n  return NavbarService;\n})();\nlet LinksComponent = /*#__PURE__*/(() => {\n  class LinksComponent {\n    constructor(_navbarService, renderer) {\n      this._navbarService = _navbarService;\n      this.renderer = renderer;\n      this.linkClick = new EventEmitter();\n    }\n\n    ngAfterContentInit() {\n      setTimeout(() => {\n        this.links.forEach(link => {\n          this.renderer.listen(link.nativeElement, 'click', () => {\n            this._navbarService.setNavbarLinkClicks();\n          });\n        });\n      }, 0);\n    }\n\n  }\n\n  LinksComponent.ɵfac = function LinksComponent_Factory(t) {\n    return new (t || LinksComponent)(ɵngcc0.ɵɵdirectiveInject(NavbarService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  LinksComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: LinksComponent,\n    selectors: [[\"links\"]],\n    contentQueries: function LinksComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, RouterLinkWithHref, 5, ElementRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.links = _t);\n      }\n    },\n    outputs: {\n      linkClick: \"linkClick\"\n    },\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function LinksComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n  return LinksComponent;\n})();\nlet NavbarComponent = /*#__PURE__*/(() => {\n  class NavbarComponent {\n    constructor(renderer, _navbarService, _cdRef, _ngZone, _document) {\n      this.renderer = renderer;\n      this._navbarService = _navbarService;\n      this._cdRef = _cdRef;\n      this._ngZone = _ngZone;\n      this._document = _document;\n      this.containerInside = true;\n      this.collapseId = 'navbarCollapse';\n      this.scrollSensitivity = 120;\n      this.scrollableNavbar = false;\n      this.shown = new EventEmitter();\n      this.hidden = new EventEmitter();\n      this._destroy$ = new Subject();\n      this.isShown = false;\n      this.duration = 350; // ms\n\n      this.collapse = true;\n      this.showClass = false;\n      this.collapsing = false;\n      this._itemsLength = 0;\n      this.ariaExpanded = false;\n\n      this._navbarService.getNavbarLinkClicks().pipe(takeUntil(this._destroy$)).subscribe(navbarLinkClicks => {\n        this.closeNavbarOnClick(navbarLinkClicks);\n      });\n    }\n\n    closeNavbarOnClick(navbarLinkClicks) {\n      this.navbarLinkClicks = navbarLinkClicks;\n\n      if (this.showClass) {\n        this.hide();\n      }\n    }\n\n    addTogglerIconClasses() {\n      if (this.iconBackground) {\n        if (Array.isArray(this.iconBackground)) {\n          this.iconBackground.forEach(iconClass => {\n            this.renderer.addClass(this.toggler.nativeElement, iconClass);\n          });\n        } else {\n          this.renderer.addClass(this.toggler.nativeElement, this.iconBackground);\n        }\n      }\n    }\n\n    _listenToScroll() {\n      this._ngZone.runOutsideAngular(() => {\n        fromEvent(this._document, 'scroll').pipe(takeUntil(this._destroy$)).subscribe(() => {\n          if (window.pageYOffset > this.scrollSensitivity) {\n            this.renderer.addClass(this.navbar.nativeElement, 'top-nav-collapse');\n          } else {\n            this.renderer.removeClass(this.navbar.nativeElement, 'top-nav-collapse');\n          }\n        });\n      });\n    }\n\n    ngOnInit() {\n      const isDoubleNav = this.SideClass.split(' ');\n      this.doubleNav = isDoubleNav.indexOf('double-nav') !== -1;\n    }\n\n    ngAfterViewInit() {\n      if (!this.containerInside) {\n        const childrens = Array.from(this.container.nativeElement.children);\n        childrens.forEach(child => {\n          this.renderer.appendChild(this.navbar.nativeElement, child);\n          this.container.nativeElement.remove();\n        });\n      }\n\n      if (this.el.nativeElement.children.length === 0) {\n        this.el.nativeElement.remove();\n      }\n\n      this.addTogglerIconClasses();\n\n      if (this.scrollableNavbar) {\n        this.renderer.addClass(this.el.nativeElement, 'collapsed-navbar-scroll');\n      }\n\n      if (this.navbar.nativeElement.classList.contains('scrolling-navbar')) {\n        this._listenToScroll();\n      }\n    }\n\n    toggle() {\n      if (!this.collapsing) {\n        if (this.isShown) {\n          this.hide();\n        } else {\n          this.show();\n        }\n      }\n    }\n\n    show() {\n      this.isShown = true;\n      this.collapse = false;\n      this.collapsing = true;\n      this.ariaExpanded = true;\n      setTimeout(() => {\n        this.height = this.el.nativeElement.scrollHeight;\n        this.renderer.setStyle(this.el.nativeElement, 'height', this.height + 'px');\n      }, 0);\n      setTimeout(() => {\n        this.collapsing = false;\n        this.collapse = true;\n        this.showClass = true;\n        this.shown.emit();\n      }, this.duration);\n\n      this._cdRef.markForCheck();\n    }\n\n    hide() {\n      if (this.isShown) {\n        this.isShown = false;\n        this.collapse = false;\n        this.showClass = false;\n        this.collapsing = true;\n        this.ariaExpanded = false;\n        setTimeout(() => {\n          this.renderer.setStyle(this.el.nativeElement, 'height', '0px');\n        }, 0);\n        setTimeout(() => {\n          this.collapsing = false;\n          this.collapse = true;\n          this.hidden.emit();\n        }, this.duration);\n      }\n\n      this._cdRef.markForCheck();\n    }\n\n    get displayStyle() {\n      if (!this.containerInside) {\n        return 'flex';\n      } else {\n        return '';\n      }\n    }\n\n    onResize(event) {\n      let breakpoint = 0;\n\n      if (this.SideClass.includes('navbar-expand-xl')) {\n        breakpoint = 1200;\n      } else if (this.SideClass.includes('navbar-expand-lg')) {\n        breakpoint = 992;\n      } else if (this.SideClass.includes('navbar-expand-md')) {\n        breakpoint = 768;\n      } else if (this.SideClass.includes('navbar-expand-sm')) {\n        breakpoint = 576;\n      } else {\n        breakpoint = event.target.innerWidth + 1;\n      }\n\n      if (event.target.innerWidth < breakpoint) {\n        if (!this.isShown) {\n          this.collapse = false;\n          this.renderer.setStyle(this.el.nativeElement, 'height', '0px');\n          this.renderer.setStyle(this.el.nativeElement, 'opacity', '0');\n          setTimeout(() => {\n            this.height = this.el.nativeElement.scrollHeight;\n            this.collapse = true;\n            this.renderer.setStyle(this.el.nativeElement, 'opacity', '');\n          }, 4);\n        }\n      } else {\n        this.collapsing = false;\n        this.isShown = false;\n        this.showClass = false;\n        this.collapse = true;\n        this.ariaExpanded = false;\n        this.renderer.setStyle(this.el.nativeElement, 'height', '');\n      }\n    }\n\n    ngAfterContentChecked() {\n      if (this.el.nativeElement.firstElementChild) {\n        if (this._itemsLength !== this.el.nativeElement.firstElementChild.firstElementChild.children.length) {\n          this.height = this.el.nativeElement.firstElementChild.firstElementChild.clientHeight;\n          this.renderer.setStyle(this.el.nativeElement, 'height', this.height + 'px');\n        }\n\n        this._itemsLength = this.el.nativeElement.firstElementChild.firstElementChild.children.length;\n      }\n\n      this._cdRef.markForCheck();\n    }\n\n    ngOnDestroy() {\n      this._destroy$.next();\n\n      this._destroy$.complete();\n    }\n\n  }\n\n  NavbarComponent.ɵfac = function NavbarComponent_Factory(t) {\n    return new (t || NavbarComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(NavbarService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT));\n  };\n\n  NavbarComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NavbarComponent,\n    selectors: [[\"mdb-navbar\"]],\n    contentQueries: function NavbarComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, LinksComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.links = _t.first);\n      }\n    },\n    viewQuery: function NavbarComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c13, 7);\n        ɵngcc0.ɵɵviewQuery(_c14, 5);\n        ɵngcc0.ɵɵviewQuery(_c15, 7);\n        ɵngcc0.ɵɵviewQuery(_c16, 7);\n        ɵngcc0.ɵɵviewQuery(_c17, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.el = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.mobile = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.navbar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.container = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.toggler = _t.first);\n      }\n    },\n    hostBindings: function NavbarComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"resize\", function NavbarComponent_resize_HostBindingHandler($event) {\n          return ctx.onResize($event);\n        }, false, ɵngcc0.ɵɵresolveWindow);\n      }\n    },\n    inputs: {\n      containerInside: \"containerInside\",\n      collapseId: \"collapseId\",\n      scrollSensitivity: \"scrollSensitivity\",\n      scrollableNavbar: \"scrollableNavbar\",\n      iconBackground: \"iconBackground\",\n      SideClass: \"SideClass\"\n    },\n    outputs: {\n      shown: \"shown\",\n      hidden: \"hidden\"\n    },\n    ngContentSelectors: _c22,\n    decls: 12,\n    vars: 19,\n    consts: [[\"nav\", \"\"], [3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [4, \"ngIf\"], [1, \"navbar-collapse\", \"collapse\", 3, \"ngClass\"], [\"navbar\", \"\"], [\"class\", \"navbar-toggler\", \"type\", \"button\", \"aria-label\", \"Toggle navigation\", \"mdbWavesEffect\", \"\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Toggle navigation\", \"mdbWavesEffect\", \"\", 1, \"navbar-toggler\", 3, \"click\"], [\"toggler\", \"\"], [1, \"navbar-toggler-icon\"]],\n    template: function NavbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c18);\n        ɵngcc0.ɵɵelementStart(0, \"nav\", null, 0);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1, 2);\n        ɵngcc0.ɵɵprojection(4);\n        ɵngcc0.ɵɵprojection(5, 1);\n        ɵngcc0.ɵɵprojection(6, 2);\n        ɵngcc0.ɵɵtemplate(7, NavbarComponent_ng_content_7_Template, 1, 0, \"ng-content\", 3);\n        ɵngcc0.ɵɵtemplate(8, NavbarComponent_div_8_Template, 2, 1, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 4, 5);\n        ɵngcc0.ɵɵprojection(11, 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.SideClass);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(11, _c19, ctx.containerInside))(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(13, _c20, ctx.displayStyle));\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.doubleNav == true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.doubleNav == false);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵstyleProp(\"height\", ctx.height);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction3(15, _c21, ctx.collapse, ctx.showClass, ctx.collapsing));\n        ɵngcc0.ɵɵattribute(\"id\", ctx.collapseId);\n      }\n    },\n    directives: [ɵngcc1.NgClass, ɵngcc1.NgStyle, ɵngcc1.NgIf],\n    styles: [\".navbar{box-shadow:0 2px 5px #00000029,0 2px 10px #0000001f;font-weight:300}.navbar form .md-form input{margin:0 5px 1px 8px}.navbar .breadcrumb{margin:0;padding:.3rem 0 0 1rem;background-color:inherit;font-size:15px;font-weight:300}.navbar .breadcrumb .breadcrumb-item{color:#fff}.navbar .breadcrumb .breadcrumb-item.active{color:#ffffffa6}.navbar .breadcrumb .breadcrumb-item:before{color:#ffffffa6}.navbar .navbar-toggler{outline:0;border-width:0}.navbar .nav-flex-icons{flex-direction:row}@media (max-width: 992px){.navbar .container{width:100%}.navbar .container .navbar-toggler-right{right:0}}.navbar .nav-item .nav-link{display:block}.navbar .nav-item .nav-link.disabled:active{pointer-events:none}.navbar .nav-item .nav-link .fas,.navbar .nav-item .nav-link .fab,.navbar .nav-item .nav-link .far{padding-right:3px;padding-left:3px}@media (max-width: 992px){.navbar .nav-item .nav-link{padding-right:6px;padding-left:6px}}.navbar .dropdown-menu{position:absolute!important;margin-top:0}.navbar .dropdown-menu a{padding:10px;font-size:.9375rem;font-weight:300;color:#000}@media (max-width: 600px){.navbar .dropdown-menu form{width:17rem}}@media (min-width: 600px){.navbar .dropdown-menu form{width:22rem}}.navbar.navbar-light .navbar-nav .nav-item .nav-link.disbled{color:#00000080}.navbar.navbar-light .navbar-nav .nav-item .nav-link.disbled:hover{color:#00000080}.navbar.navbar-light .navbar-toggler-icon{background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='rgba(0, 0, 0, 0.9)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\\\");cursor:pointer}.navbar.navbar-light .breadcrumb .nav-item .nav-link,.navbar.navbar-light .navbar-nav .nav-item .nav-link{color:#000;transition:.35s}.navbar.navbar-light .breadcrumb .nav-item .nav-link:hover,.navbar.navbar-light .navbar-nav .nav-item .nav-link:hover{color:#000000bf}.navbar.navbar-light .breadcrumb .nav-item.active>.nav-link,.navbar.navbar-light .navbar-nav .nav-item.active>.nav-link{background-color:#0000001a}.navbar.navbar-light .breadcrumb .nav-item.active>.nav-link:hover,.navbar.navbar-light .navbar-nav .nav-item.active>.nav-link:hover{color:#000}.navbar.navbar-light .navbar-toggler{color:#000}.navbar.navbar-light form .md-form input{border-bottom:1px solid #000}.navbar.navbar-light form .md-form input:focus:not([readonly]){border-color:#4285f4}.navbar.navbar-light form .md-form .form-control{color:#000}.navbar.navbar-light form .md-form .form-control::-moz-placeholder{color:#000;font-weight:300}.navbar.navbar-light form .md-form .form-control:-ms-input-placeholder{color:#000;font-weight:300}.navbar.navbar-light form .md-form .form-control::placeholder{color:#000;font-weight:300}.navbar.navbar-dark .navbar-nav .nav-item .nav-link.disbled{color:#ffffff80}.navbar.navbar-dark .navbar-nav .nav-item .nav-link.disbled:hover{color:#ffffff80}.navbar.navbar-dark .navbar-toggler-icon{background-image:url(\\\"data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='rgba(255, 255, 255, 0.9)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 8h24M4 16h24M4 24h24'/%3E%3C/svg%3E\\\");cursor:pointer}.navbar.navbar-dark .breadcrumb .nav-item .nav-link,.navbar.navbar-dark .navbar-nav .nav-item .nav-link{color:#fff;transition:.35s}.navbar.navbar-dark .breadcrumb .nav-item .nav-link:hover,.navbar.navbar-dark .navbar-nav .nav-item .nav-link:hover{color:#ffffffbf}.navbar.navbar-dark .breadcrumb .nav-item.active>.nav-link,.navbar.navbar-dark .navbar-nav .nav-item.active>.nav-link{background-color:#ffffff1a}.navbar.navbar-dark .breadcrumb .nav-item.active>.nav-link:hover,.navbar.navbar-dark .navbar-nav .nav-item.active>.nav-link:hover{color:#fff}.navbar.navbar-dark .navbar-toggler{color:#fff}.navbar.navbar-dark form .md-form input{border-bottom:1px solid #fff}.navbar.navbar-dark form .md-form input:focus:not([readonly]){border-color:#4285f4}.navbar.navbar-dark form .md-form .form-control{color:#fff}.navbar.navbar-dark form .md-form .form-control::-moz-placeholder{color:#fff;font-weight:300}.navbar.navbar-dark form .md-form .form-control:-ms-input-placeholder{color:#fff;font-weight:300}.navbar.navbar-dark form .md-form .form-control::placeholder{color:#fff;font-weight:300}@media (min-width: 600px){.navbar.scrolling-navbar{transition:background .5s ease-in-out,padding .5s ease-in-out;padding-top:12px;padding-bottom:12px}.navbar.scrolling-navbar .navbar-nav>li{transition-duration:1s}.navbar.scrolling-navbar.top-nav-collapse{padding-top:5px;padding-bottom:5px}}@media (min-width: 1200px){.navbar.navbar-expand-xl links,.navbar.navbar-expand-xl navlinks{display:flex;flex-direction:row;align-items:center!important;align-self:center!important;width:100%}}@media (min-width: 992px){.navbar>logo>div>a img{margin-left:20px}.navbar.navbar-expand-lg links,.navbar.navbar-expand-lg navlinks{display:flex;flex-direction:row;align-items:center!important;align-self:center!important;width:100%}}@media (min-width: 768px){.navbar.navbar-expand-md links,.navbar.navbar-expand-md navlinks{display:flex;flex-direction:row;width:100%}}@media (min-width: 576px){.navbar.navbar-expand-sm links,.navbar.navbar-expand-sm navlinks{display:flex;flex-direction:row;width:100%}}@media all and (max-width: 992px){.collapsed-navbar-scroll{max-height:calc(100vh - 40px);overflow-y:scroll}}.navbar-container{order:-1;width:50px!important;padding-left:5px;padding-right:5px}.navbar-nav .dropdown-menu-right.dropdown-menu{left:unset}.navbar-nav .dropdown-menu{top:100%!important;transform:translate(0)!important}.breadcrumbs{display:flex;padding-left:5px;padding-right:5px;order:0;align-items:center}@media (min-width: 1441px){.breadcrumbs{margin-left:-.6rem}}@supports (-ms-ime-align: auto){@media all and (min-width: 992px){.ie-nav .navbar-nav.nav-flex-icons{position:absolute;top:30%;right:0}.ie-nav .navbar-nav{position:absolute;top:30%;margin-left:88px}.ie-nav .navbar-brand>img{margin-top:-2px;padding-right:16px}}.ie-nav .navbar-toggler{position:absolute;margin-top:-40px;right:0}@media all and (min-width: 992px){.intro-non-fixed-nav>links .navbar-collapse{display:inline-flex!important;align-items:center!important;justify-content:space-between!important}}@media all and (min-width: 992px){.intro-fixed-nav .navbar-nav.nav-flex-icons{position:absolute;top:30%;right:0}.intro-fixed-nav .navbar-nav{position:absolute;top:30%;margin-left:88px}.intro-fixed-nav .navbar-brand img{margin-top:-2px;padding-right:16px}}.intro-fixed-nav .navbar-toggler{position:absolute;margin-top:-40px;right:0}}@media all and (-ms-high-contrast: none) and (min-width: 992px),(-ms-high-contrast: active) and (min-width: 992px){.ie-nav .navbar-nav.nav-flex-icons{position:absolute;top:30%;right:0}.ie-nav .navbar-nav{position:absolute;top:30%;margin-left:88px}.ie-nav .navbar-brand>img{margin-top:-2px;padding-right:16px}}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.ie-nav .navbar-toggler{position:absolute;margin-top:-40px;right:0}}@media all and (-ms-high-contrast: none) and (min-width: 992px),(-ms-high-contrast: active) and (min-width: 992px){.intro-non-fixed-nav>links .navbar-collapse{display:inline-flex!important;align-items:center!important;justify-content:space-between!important}}@media all and (-ms-high-contrast: none) and (min-width: 992px),(-ms-high-contrast: active) and (min-width: 992px){.intro-fixed-nav .navbar-nav.nav-flex-icons{position:absolute;top:30%;right:0}.intro-fixed-nav .navbar-nav{position:absolute;top:30%;margin-left:88px}.intro-fixed-nav .navbar-brand img{margin-top:-2px;padding-right:16px}}@media all and (-ms-high-contrast: none),(-ms-high-contrast: active){.intro-fixed-nav .navbar-toggler{position:absolute;margin-top:-40px;right:0}}button,html [type=button],[type=reset],[type=submit]{-webkit-appearance:none}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NavbarComponent;\n})();\nlet LogoComponent = /*#__PURE__*/(() => {\n  class LogoComponent {}\n\n  LogoComponent.ɵfac = function LogoComponent_Factory(t) {\n    return new (t || LogoComponent)();\n  };\n\n  LogoComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: LogoComponent,\n    selectors: [[\"logo\"], [\"mdb-navbar-brand\"]],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function LogoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n  return LogoComponent;\n})();\nlet NavlinksComponent = /*#__PURE__*/(() => {\n  class NavlinksComponent {\n    constructor(_navbarService, renderer) {\n      this._navbarService = _navbarService;\n      this.renderer = renderer;\n      this.linkClick = new EventEmitter();\n    }\n\n    ngAfterContentInit() {\n      setTimeout(() => {\n        this.links.forEach(link => {\n          this.renderer.listen(link.nativeElement, 'click', () => {\n            this._navbarService.setNavbarLinkClicks();\n          });\n        });\n      }, 0);\n    }\n\n  }\n\n  NavlinksComponent.ɵfac = function NavlinksComponent_Factory(t) {\n    return new (t || NavlinksComponent)(ɵngcc0.ɵɵdirectiveInject(NavbarService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  NavlinksComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NavlinksComponent,\n    selectors: [[\"navlinks\"]],\n    contentQueries: function NavlinksComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, RouterLinkWithHref, 5, ElementRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.links = _t);\n      }\n    },\n    outputs: {\n      linkClick: \"linkClick\"\n    },\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function NavlinksComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n  return NavlinksComponent;\n})();\nlet NavbarModule = /*#__PURE__*/(() => {\n  class NavbarModule {}\n\n  NavbarModule.ɵfac = function NavbarModule_Factory(t) {\n    return new (t || NavbarModule)();\n  };\n\n  NavbarModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NavbarModule\n  });\n  NavbarModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [NavbarService],\n    imports: [[CommonModule]]\n  });\n  /**\r\n   * Configuration service for the Popover directive.\r\n   * You can inject this service, typically in your root component, and customize\r\n   * the values of its properties in order to provide default values for all the\r\n   * popovers used in the application.\r\n   */\n\n  return NavbarModule;\n})();\nlet PopoverConfig = /*#__PURE__*/(() => {\n  class PopoverConfig {\n    constructor() {\n      /**\r\n       * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\r\n       */\n      this.placement = 'top';\n      /**\r\n       * Specifies events that should trigger. Supports a space separated list of\r\n       * event names.\r\n       */\n\n      this.triggers = 'click';\n    }\n\n  }\n\n  PopoverConfig.ɵfac = function PopoverConfig_Factory(t) {\n    return new (t || PopoverConfig)();\n  };\n\n  PopoverConfig.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: PopoverConfig,\n    factory: PopoverConfig.ɵfac\n  });\n  return PopoverConfig;\n})();\nlet PopoverContainerComponent = /*#__PURE__*/(() => {\n  class PopoverContainerComponent {\n    constructor(config) {\n      this.show = '!isBs3';\n      this.role = 'tooltip';\n      Object.assign(this, config);\n    }\n\n    get isBs3() {\n      return isBs3$1();\n    }\n\n    ngOnInit() {\n      this.class = 'popover-fadeIn popover in popover-' + this.placement + ' ' + this.placement + ' bs-popover-' + this.placement + ' ' + this.containerClass;\n    }\n\n  }\n\n  PopoverContainerComponent.ɵfac = function PopoverContainerComponent_Factory(t) {\n    return new (t || PopoverContainerComponent)(ɵngcc0.ɵɵdirectiveInject(PopoverConfig));\n  };\n\n  PopoverContainerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: PopoverContainerComponent,\n    selectors: [[\"mdb-popover-container\"]],\n    hostVars: 5,\n    hostBindings: function PopoverContainerComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role);\n        ɵngcc0.ɵɵclassMap(ctx.class);\n        ɵngcc0.ɵɵclassProp(\"show\", ctx.show);\n      }\n    },\n    inputs: {\n      placement: \"placement\",\n      title: \"title\"\n    },\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 2,\n    consts: [[\"class\", \"popover-header\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"popover-body\", 3, \"ngClass\"], [1, \"popover-header\", 3, \"ngClass\"]],\n    template: function PopoverContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, PopoverContainerComponent_h3_0_Template, 2, 2, \"h3\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.title);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.bodyClass);\n      }\n    },\n    directives: [ɵngcc1.NgIf, ɵngcc1.NgClass],\n    styles: [\".popover.popover-top,.popover.bs-tether-element-attached-bottom{margin-top:-10px}.popover.popover-top:before,.popover.popover-top:after,.popover.bs-tether-element-attached-bottom:before,.popover.bs-tether-element-attached-bottom:after{left:50%;border-bottom-width:0}.popover.popover-top:before,.popover.bs-tether-element-attached-bottom:before{bottom:-11px;margin-left:-11px;border-top-color:#00000040}.popover.popover-top:after,.popover.bs-tether-element-attached-bottom:after{bottom:-10px;margin-left:-10px;border-top-color:#fff}.popover.popover-right,.popover.bs-tether-element-attached-left{margin-left:10px}.popover.popover-right:before,.popover.popover-right:after,.popover.bs-tether-element-attached-left:before,.popover.bs-tether-element-attached-left:after{top:50%;border-left-width:0}.popover.popover-right:before,.popover.bs-tether-element-attached-left:before{left:-11px;margin-top:-11px;border-right-color:#00000040}.popover.popover-right:after,.popover.bs-tether-element-attached-left:after{left:-10px;margin-top:-10px;border-right-color:#fff}.popover.popover-bottom,.popover.bs-tether-element-attached-top{margin-top:10px}.popover.popover-bottom:before,.popover.popover-bottom:after,.popover.bs-tether-element-attached-top:before,.popover.bs-tether-element-attached-top:after{left:50%;border-top-width:0}.popover.popover-bottom:before,.popover.bs-tether-element-attached-top:before{top:-11px;margin-left:-11px;border-bottom-color:#00000040}.popover.popover-bottom:after,.popover.bs-tether-element-attached-top:after{top:-10px;margin-left:-10px;border-bottom-color:#f7f7f7}.popover.popover-bottom .popover-title:before,.popover.bs-tether-element-attached-top .popover-title:before{position:absolute;top:0;left:50%;display:block;width:20px;margin-left:-10px;content:\\\"\\\";border-bottom:1px solid #f7f7f7}.popover.popover-left,.popover.bs-tether-element-attached-right{margin-left:-10px}.popover.popover-left:before,.popover.popover-left:after,.popover.bs-tether-element-attached-right:before,.popover.bs-tether-element-attached-right:after{top:50%;border-right-width:0}.popover.popover-left:before,.popover.bs-tether-element-attached-right:before{right:-11px;margin-top:-11px;border-left-color:#00000040}.popover.popover-left:after,.popover.bs-tether-element-attached-right:after{right:-10px;margin-top:-10px;border-left-color:#fff}.popover:before,.popover:after{position:absolute;display:block;width:0;height:0;border-color:transparent;border-style:solid}.popover:before{content:\\\"\\\";border-width:11px}.popover:after{content:\\\"\\\";border-width:10px}@-webkit-keyframes fadeInPopover{0%{opacity:0}to{opacity:1}}@keyframes fadeInPopover{0%{opacity:0}to{opacity:1}}.popover-fadeIn{-webkit-animation-name:fadeInPopover;animation-name:fadeInPopover;-webkit-animation-delay:.2s;animation-delay:.2s;-webkit-animation-duration:.2s;animation-duration:.2s;-webkit-animation-fill-mode:both;animation-fill-mode:both}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return PopoverContainerComponent;\n})();\n\n/**\r\n * A lightweight, extensible directive for fancy popover creation.\r\n */\nlet PopoverDirective = /*#__PURE__*/(() => {\n  class PopoverDirective {\n    constructor(_elementRef, _renderer, _viewContainerRef, _config, cis, _positionService) {\n      this._positionService = _positionService;\n      this.dynamicPosition = true;\n      this.outsideClick = false;\n      this.popoverDisabled = false;\n      this._popover = cis.createLoader(_elementRef, _viewContainerRef, _renderer).provide({\n        provide: PopoverConfig,\n        useValue: _config\n      });\n      Object.assign(this, _config);\n      this.onShown = this._popover.onShown;\n      this.shown = this._popover.onShown;\n      this.onHidden = this._popover.onHidden;\n      this.hidden = this._popover.onHidden;\n    }\n    /**\r\n     * Returns whether or not the popover is currently being shown\r\n     */\n\n\n    get isOpen() {\n      return this._popover.isShown;\n    }\n\n    set isOpen(value) {\n      if (value) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    }\n\n    get hasContent() {\n      if (typeof this.mdbPopover === 'string') {\n        return this.mdbPopover.length > 0;\n      }\n\n      return true;\n    }\n    /**\r\n     * Opens an element’s popover. This is considered a “manual” triggering of\r\n     * the popover.\r\n     */\n\n\n    show() {\n      if (this._popover.isShown || this.popoverDisabled || !this.hasContent) {\n        return;\n      }\n\n      this._positionService.setOptions({\n        modifiers: {\n          flip: {\n            enabled: this.dynamicPosition\n          },\n          preventOverflow: {\n            enabled: this.dynamicPosition\n          }\n        }\n      });\n\n      this._popover.attach(PopoverContainerComponent).to(this.container).position({\n        attachment: this.placement\n      }).show({\n        content: this.mdbPopover,\n        placement: this.placement,\n        title: this.mdbPopoverHeader || this.popoverTitle,\n        containerClass: this.containerClass ? this.containerClass : '',\n        bodyClass: this.bodyClass ? this.bodyClass : '',\n        headerClass: this.headerClass ? this.headerClass : ''\n      });\n\n      this.isOpen = true;\n\n      if (!this.dynamicPosition) {\n        this._positionService.calcPosition();\n\n        this._positionService.deletePositionElement(this._popover._componentRef.location);\n      }\n    }\n    /**\r\n     * Closes an element’s popover. This is considered a “manual” triggering of\r\n     * the popover.\r\n     */\n\n\n    hide() {\n      if (this.isOpen) {\n        this._popover.hide();\n\n        this.isOpen = false;\n      }\n    }\n    /**\r\n     * Toggles an element’s popover. This is considered a “manual” triggering of\r\n     * the popover.\r\n     */\n\n\n    toggle() {\n      if (this.isOpen) {\n        return this.hide();\n      }\n\n      this.show();\n    }\n\n    onclick(event) {\n      if (this.triggers.toString().includes('focus')) {\n        event.stopPropagation();\n        this.show();\n      }\n    }\n\n    onblur() {\n      if (this.triggers.toString().includes('focus') && this.isOpen) {\n        this.hide();\n      }\n    } // fix(popover): popover with outsideClick='true' will now close after clicking in document on iPad Safari\n\n\n    onTouchStart(event) {\n      if (this.outsideClick && !event.target.classList.contains('popover-body')) {\n        this.hide();\n      }\n    }\n\n    ngOnInit() {\n      this._popover.listen({\n        triggers: this.triggers,\n        outsideClick: this.outsideClick,\n        show: () => this.show()\n      });\n    }\n\n    dispose() {\n      this._popover.dispose();\n    }\n\n    ngOnDestroy() {\n      this._popover.dispose();\n    }\n\n  }\n\n  PopoverDirective.ɵfac = function PopoverDirective_Factory(t) {\n    return new (t || PopoverDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(PopoverConfig), ɵngcc0.ɵɵdirectiveInject(ComponentLoaderFactory), ɵngcc0.ɵɵdirectiveInject(PositioningService));\n  };\n\n  PopoverDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: PopoverDirective,\n    selectors: [[\"\", \"mdbPopover\", \"\"]],\n    hostBindings: function PopoverDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function PopoverDirective_click_HostBindingHandler($event) {\n          return ctx.onclick($event);\n        })(\"click\", function PopoverDirective_click_HostBindingHandler() {\n          return ctx.onblur();\n        }, false, ɵngcc0.ɵɵresolveWindow)(\"touchstart\", function PopoverDirective_touchstart_HostBindingHandler($event) {\n          return ctx.onTouchStart($event);\n        }, false, ɵngcc0.ɵɵresolveDocument);\n      }\n    },\n    inputs: {\n      dynamicPosition: \"dynamicPosition\",\n      outsideClick: \"outsideClick\",\n      popoverDisabled: \"popoverDisabled\",\n      isOpen: \"isOpen\",\n      containerClass: \"containerClass\",\n      bodyClass: \"bodyClass\",\n      headerClass: \"headerClass\",\n      mdbPopover: \"mdbPopover\",\n      mdbPopoverHeader: \"mdbPopoverHeader\",\n      popoverTitle: \"popoverTitle\",\n      placement: \"placement\",\n      triggers: \"triggers\",\n      container: \"container\"\n    },\n    outputs: {\n      onShown: \"onShown\",\n      shown: \"shown\",\n      onHidden: \"onHidden\",\n      hidden: \"hidden\"\n    },\n    exportAs: [\"bs-mdbPopover\"]\n  });\n  return PopoverDirective;\n})();\nlet PopoverModule = /*#__PURE__*/(() => {\n  class PopoverModule {\n    static forRoot() {\n      return {\n        ngModule: PopoverModule,\n        providers: [PopoverConfig, ComponentLoaderFactory, PositioningService]\n      };\n    }\n\n  }\n\n  PopoverModule.ɵfac = function PopoverModule_Factory(t) {\n    return new (t || PopoverModule)();\n  };\n\n  PopoverModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: PopoverModule\n  });\n  PopoverModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  }); // tslint:disable-next-line:component-class-suffix\n\n  return PopoverModule;\n})();\nlet MdbTableDirective = /*#__PURE__*/(() => {\n  class MdbTableDirective {\n    constructor(el, renderer) {\n      this.el = el;\n      this.renderer = renderer;\n      this.stickyHeader = false;\n      this.stickyHeaderBgColor = '#f2f2f2';\n      this.stickyHeaderTextColor = '#000000';\n      this.stickyFooter = false;\n      this.stickyFooterBgColor = '#f2f2f2';\n      this.stickyFooterTextColor = '#000000';\n      this._dataSource = [];\n      this._dataSourceChanged = new Subject();\n    }\n\n    addRow(newRow) {\n      this.getDataSource().push(newRow);\n    }\n\n    addRowAfter(index, row) {\n      this.getDataSource().splice(index, 0, row);\n    }\n\n    removeRow(index) {\n      this.getDataSource().splice(index, 1);\n    }\n\n    rowRemoved() {\n      return new Observable(observer => {\n        observer.next(true);\n      });\n    }\n\n    removeLastRow() {\n      this.getDataSource().pop();\n    }\n\n    getDataSource() {\n      return this._dataSource;\n    }\n\n    setDataSource(data) {\n      this._dataSource = data;\n\n      this._dataSourceChanged.next(this.getDataSource());\n    }\n\n    dataSourceChange() {\n      return this._dataSourceChanged;\n    }\n\n    filterLocalDataBy(searchKey) {\n      return this.getDataSource().filter(obj => {\n        return Object.keys(obj).some(key => {\n          if (obj[key]) {\n            // Fix(tableSearch): table search will now able to filter through nested data\n            return JSON.stringify(obj).toLowerCase().includes(searchKey);\n          }\n        });\n      });\n    }\n\n    filterLocalDataByFields(searchKey, keys) {\n      return this.getDataSource().filter(obj => {\n        return Object.keys(obj).some(key => {\n          if (obj[key]) {\n            if (keys.includes(key)) {\n              if (obj[key].toLowerCase().includes(searchKey)) {\n                return obj[key];\n              }\n            }\n          }\n        });\n      });\n    }\n\n    filterLocalDataByMultipleFields(searchKey, keys) {\n      const items = searchKey.split(' ').map(x => x.toLowerCase());\n      return this.getDataSource().filter(x => {\n        for (const item of items) {\n          let flag = false;\n\n          if (keys !== undefined) {\n            for (const prop in x) {\n              if (x[prop] && x.hasOwnProperty(prop)) {\n                if (keys.includes(prop)) {\n                  if (x[prop].toLowerCase().indexOf(item) !== -1) {\n                    flag = true;\n                    break;\n                  }\n                }\n              }\n            }\n          }\n\n          if (keys === undefined) {\n            for (const prop in x) {\n              if (x.hasOwnProperty(prop) && x[prop].toLowerCase().indexOf(item) !== -1) {\n                flag = true;\n                break;\n              }\n            }\n          }\n\n          if (!flag) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n\n    searchLocalDataBy(searchKey) {\n      if (!searchKey) {\n        return this.getDataSource();\n      }\n\n      if (searchKey) {\n        return this.filterLocalDataBy(searchKey.toLowerCase());\n      }\n    }\n\n    searchLocalDataByFields(searchKey, keys) {\n      if (!searchKey) {\n        return this.getDataSource();\n      }\n\n      if (searchKey && keys.length > 0) {\n        return this.filterLocalDataByFields(searchKey.toLowerCase(), keys);\n      }\n\n      if (!keys || keys.length === 0) {\n        return this.filterLocalDataBy(searchKey.toLowerCase());\n      }\n    }\n\n    searchLocalDataByMultipleFields(searchKey, keys) {\n      if (!searchKey) {\n        return this.getDataSource();\n      }\n\n      if (searchKey && keys !== undefined) {\n        return this.filterLocalDataByMultipleFields(searchKey.toLowerCase(), keys);\n      }\n    }\n\n    searchDataObservable(searchKey) {\n      return new Observable(observer => {\n        observer.next(this.searchLocalDataBy(searchKey));\n      });\n    }\n\n    ngOnInit() {\n      this.renderer.addClass(this.el.nativeElement, 'table');\n    }\n\n    ngAfterViewInit() {\n      // Fix(stickyHeader): resolved problem with not working stickyHeader=\"true\" on Chrome\n      if (this.stickyHeader) {\n        this.makeSticky('thead', 'sticky-top', this.stickyHeaderBgColor, this.stickyHeaderTextColor);\n      }\n\n      if (this.stickyFooter) {\n        this.makeSticky('tfoot', 'sticky-bottom', this.stickyFooterBgColor, this.stickyFooterTextColor);\n      }\n    }\n\n    makeSticky(query, elementClass, bgColor, color) {\n      const tableHead = this.el.nativeElement.querySelector(query);\n      Array.from(tableHead.firstElementChild.children).forEach(child => {\n        this.renderer.addClass(child, elementClass);\n\n        if (bgColor) {\n          this.renderer.setStyle(child, 'background-color', bgColor);\n        }\n\n        if (color) {\n          this.renderer.setStyle(child, 'color', color);\n        }\n      });\n    }\n\n  }\n\n  MdbTableDirective.ɵfac = function MdbTableDirective_Factory(t) {\n    return new (t || MdbTableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  MdbTableDirective.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdbTableDirective,\n    selectors: [[\"\", \"mdbTable\", \"\"]],\n    hostVars: 12,\n    hostBindings: function MdbTableDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"table-striped\", ctx.striped)(\"table-bordered\", ctx.bordered)(\"table-borderless\", ctx.borderless)(\"table-hover\", ctx.hover)(\"table-sm\", ctx.small)(\"table-responsive\", ctx.responsive);\n      }\n    },\n    inputs: {\n      stickyHeader: \"stickyHeader\",\n      stickyHeaderBgColor: \"stickyHeaderBgColor\",\n      stickyHeaderTextColor: \"stickyHeaderTextColor\",\n      stickyFooter: \"stickyFooter\",\n      stickyFooterBgColor: \"stickyFooterBgColor\",\n      stickyFooterTextColor: \"stickyFooterTextColor\",\n      striped: \"striped\",\n      bordered: \"bordered\",\n      borderless: \"borderless\",\n      hover: \"hover\",\n      small: \"small\",\n      responsive: \"responsive\"\n    },\n    exportAs: [\"mdbTable\"],\n    attrs: _c23,\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MdbTableDirective_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    styles: [\"table th{font-size:.9rem;font-weight:400}table td{font-size:.9rem;font-weight:300}table thead th svg.ascending,table thead th svg.descending,table thead td svg.ascending,table thead td svg.descending{display:none;max-height:.9rem;max-width:.9rem}table thead th[aria-sort=ascending] svg.ascending,table thead td[aria-sort=ascending] svg.ascending{display:unset}table thead th[aria-sort=descending] svg.descending,table thead td[aria-sort=descending] svg.descending{display:unset}table thead th:not([aria-sort]):hover svg.descending,table thead th[aria-sort=constant]:hover svg.descending,table thead td:not([aria-sort]):hover svg.descending,table thead td[aria-sort=constant]:hover svg.descending{display:unset;opacity:.5}table tfoot .sticky-bottom{position:sticky;bottom:0}table.table{margin-bottom:0}table.table thead th{border-top:none;border-bottom-width:1px}table.table th,table.table td{padding:1.1rem 16px 1rem}table.table .label-table{margin:0;padding:0;line-height:.94rem;height:.94rem}table.table.btn-table td{vertical-align:middle}table.table-hover tbody tr:hover{transition:.5s;background-color:#00000013}table .th-lg{min-width:9rem}table .th-sm{min-width:6rem}table.table-sm th,table.table-sm td{padding-top:.6rem;padding-bottom:.6rem}.table-scroll-vertical{max-height:300px;overflow-y:auto}.table-fixed{table-layout:fixed}.table-responsive>.table-bordered,.table-responsive-sm>.table-bordered,.table-responsive-md>.table-bordered,.table-responsive-lg>.table-bordered,.table-responsive-xl>.table-bordered{border-top:1px solid #dee2e6}\\n\"],\n    encapsulation: 2\n  });\n  return MdbTableDirective;\n})();\nvar SortDirection = /*#__PURE__*/(() => {\n  (function (SortDirection) {\n    SortDirection[\"ASC\"] = \"ascending\";\n    SortDirection[\"DESC\"] = \"descending\";\n    SortDirection[\"CONST\"] = \"constant\";\n  })(SortDirection || (SortDirection = {}));\n\n  return SortDirection;\n})();\nlet MdbTableSortDirective = /*#__PURE__*/(() => {\n  class MdbTableSortDirective {\n    constructor(el, renderer) {\n      this.el = el;\n      this.renderer = renderer;\n      this.data = [];\n      this.sortedInto = true;\n      this.order = SortDirection.CONST;\n      this.dataSource = [];\n      this.sortIcon = false;\n      this.resetSortDirection = false;\n      this.sortEnd = new EventEmitter();\n      this.sorted = new EventEmitter();\n    }\n\n    onclick() {\n      this.sortDataBy(this.trimWhiteSigns(this.sortBy.toString()));\n      this.sortEnd.emit(this.dataSource);\n      this.sorted.emit({\n        data: this.dataSource,\n        sortOrder: this.order,\n        sortBy: this.sortBy\n      });\n      this.removeSort();\n    }\n\n    trimWhiteSigns(headElement) {\n      return headElement.replace(/ /g, '');\n    }\n\n    moveArrayItem(arr, oldIndex, newIndex) {\n      while (oldIndex < 0) {\n        oldIndex += arr.length;\n      }\n\n      while (newIndex < 0) {\n        newIndex += arr.length;\n      }\n\n      if (newIndex >= arr.length) {\n        let k = newIndex - arr.length;\n\n        while (k-- + 1) {\n          arr.push(null);\n        }\n      }\n\n      arr.splice(newIndex, 0, arr.splice(oldIndex, 1)[0]);\n      return arr;\n    }\n\n    sortDataBy(key) {\n      let ariaPass = true;\n\n      const setAria = (sort, id) => {\n        if (ariaPass) {\n          let nextSortType = '';\n\n          if (this.resetSortDirection) {\n            if (sort === SortDirection.CONST) {\n              nextSortType = SortDirection.DESC;\n            } else if (sort === SortDirection.DESC) {\n              nextSortType = SortDirection.ASC;\n            } else if (sort === SortDirection.ASC) {\n              nextSortType = SortDirection.CONST;\n            }\n          } else {\n            if (sort === SortDirection.DESC) {\n              nextSortType = SortDirection.ASC;\n            } else if (sort === SortDirection.ASC) {\n              nextSortType = SortDirection.DESC;\n            }\n          }\n\n          this.renderer.setAttribute(this.el.nativeElement, 'aria-sort', sort);\n          this.renderer.setAttribute(this.el.nativeElement, 'aria-label', `${id}: activate to sort column ${nextSortType}`);\n          ariaPass = false;\n        }\n      };\n\n      key = key.split('.');\n\n      if (this.resetSortDirection) {\n        const sortFn = (a, b) => {\n          a = a[key];\n          b = b[key];\n          return a > b ? -1 : 1;\n        };\n\n        if (this.order === SortDirection.CONST) {\n          setAria(SortDirection.DESC, key);\n          this.order = SortDirection.DESC;\n          this.dataSource.sort(sortFn);\n        } else if (this.order === SortDirection.DESC) {\n          setAria(SortDirection.ASC, key);\n          this.order = SortDirection.ASC;\n          this.dataSource.sort(sortFn).reverse();\n        } else if (this.order === SortDirection.ASC) {\n          setAria(SortDirection.CONST, key);\n          this.order = SortDirection.CONST;\n          this.data.map((el, index) => {\n            this.dataSource[index] = el;\n          });\n        }\n      } else {\n        this.dataSource.sort((a, b) => {\n          let i = 0;\n\n          while (i < key.length) {\n            a = a[key[i]];\n            b = b[key[i]];\n            i++;\n          }\n\n          if (a < b) {\n            setAria(SortDirection.ASC, key);\n            this.order = SortDirection.ASC;\n            return this.sortedInto ? 1 : -1;\n          } else if (a > b) {\n            setAria(SortDirection.DESC, key);\n            this.order = SortDirection.DESC;\n            return this.sortedInto ? -1 : 1;\n          } else if (a == null || b == null) {\n            this.order = SortDirection.CONST;\n            return 1;\n          } else {\n            this.order = SortDirection.CONST;\n            return 0;\n          }\n        });\n        this.sortedInto = !this.sortedInto;\n      }\n    }\n\n    ngOnInit() {\n      const key = this.trimWhiteSigns(this.sortBy.toString()).split('.');\n      this.renderer.setAttribute(this.el.nativeElement, 'aria-label', `${key}: activate to sort column descending`);\n\n      if (this.data.length === 0) {\n        // this.dataSource.map((element: any) => {\n        //   this.data.push(element);\n        // })\n        this.data = Array.from(this.dataSource);\n      }\n    }\n\n    ngAfterViewInit() {\n      if (this.sortIcon) {\n        this.createIcon();\n      }\n    }\n\n    createIcon() {\n      // tslint:disable-next-line:max-line-length\n      const iconUp = `<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"arrow-up\" class=\"svg-inline--fa fa-arrow-up fa-w-14 ascending\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M34.9 289.5l-22.2-22.2c-9.4-9.4-9.4-24.6 0-33.9L207 39c9.4-9.4 24.6-9.4 33.9 0l194.3 194.3c9.4 9.4 9.4 24.6 0 33.9L413 289.4c-9.5 9.5-25 9.3-34.3-.4L264 168.6V456c0 13.3-10.7 24-24 24h-32c-13.3 0-24-10.7-24-24V168.6L69.2 289.1c-9.3 9.8-24.8 10-34.3.4z\"></path></svg>`; // tslint:disable-next-line:max-line-length\n\n      const iconDown = `<svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"arrow-down\" class=\"svg-inline--fa fa-arrow-down fa-w-14 descending\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M413.1 222.5l22.2 22.2c9.4 9.4 9.4 24.6 0 33.9L241 473c-9.4 9.4-24.6 9.4-33.9 0L12.7 278.6c-9.4-9.4-9.4-24.6 0-33.9l22.2-22.2c9.5-9.5 25-9.3 34.3.4L184 343.4V56c0-13.3 10.7-24 24-24h32c13.3 0 24 10.7 24 24v287.4l114.8-120.5c9.3-9.8 24.8-10 34.3-.4z\"></path></svg>`;\n      const title = this.el.nativeElement.innerHTML;\n      this.el.nativeElement.innerHTML = `${title} ${iconUp} ${iconDown}`;\n    }\n\n    removeSort() {\n      const nodes = this.el.nativeElement.parentElement.childNodes;\n\n      if (nodes) {\n        Array.from(nodes).map(node => {\n          if (node !== this.el.nativeElement && node.nodeName !== '#comment') {\n            this.renderer.removeAttribute(node, 'aria-sort');\n          }\n        });\n      }\n    }\n\n  }\n\n  MdbTableSortDirective.ɵfac = function MdbTableSortDirective_Factory(t) {\n    return new (t || MdbTableSortDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  MdbTableSortDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MdbTableSortDirective,\n    selectors: [[\"\", \"mdbTableSort\", \"\"]],\n    hostBindings: function MdbTableSortDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MdbTableSortDirective_click_HostBindingHandler() {\n          return ctx.onclick();\n        });\n      }\n    },\n    inputs: {\n      dataSource: [\"mdbTableSort\", \"dataSource\"],\n      sortIcon: \"sortIcon\",\n      resetSortDirection: \"resetSortDirection\",\n      sortBy: \"sortBy\"\n    },\n    outputs: {\n      sortEnd: \"sortEnd\",\n      sorted: \"sorted\"\n    }\n  });\n  return MdbTableSortDirective;\n})();\nlet MdbTableScrollDirective = /*#__PURE__*/(() => {\n  class MdbTableScrollDirective {\n    constructor(renderer, el) {\n      this.renderer = renderer;\n      this.el = el;\n      this.scrollY = false;\n      this.scrollX = false;\n    }\n\n    get maxHeight() {\n      return this._maxHeight;\n    }\n\n    set maxHeight(value) {\n      if (typeof value === 'number') {\n        this._maxHeight = `${value}px`;\n      } else {\n        this._maxHeight = value;\n      }\n    }\n\n    get maxWidth() {\n      return this._maxWidth;\n    }\n\n    set maxWidth(value) {\n      if (typeof value === 'number') {\n        this._maxWidth = `${value}px`;\n      } else {\n        this._maxWidth = value;\n      }\n    }\n\n    wrapTableWithVerticalScrollingWrapper(tableWrapper) {\n      this.renderer.setStyle(tableWrapper, 'max-height', this.maxHeight);\n      this.renderer.setStyle(tableWrapper, 'overflow-y', 'auto');\n      this.renderer.setStyle(tableWrapper, 'display', 'block');\n    }\n\n    wrapTableWithHorizontalScrollingWrapper(tableWrapper) {\n      this.renderer.setStyle(tableWrapper, 'max-width', this.maxWidth);\n      this.renderer.setStyle(tableWrapper, 'overflow-x', 'auto');\n      this.renderer.setStyle(tableWrapper, 'display', 'block');\n    }\n\n    wrapTableWithHorizontalAndVerticalScrollingWrapper(tableWrapper) {\n      this.renderer.setStyle(tableWrapper, 'max-height', this.maxHeight);\n      this.renderer.setStyle(tableWrapper, 'max-width', this.maxWidth);\n      this.renderer.setStyle(tableWrapper, 'overflow-x', 'auto');\n      this.renderer.setStyle(tableWrapper, 'display', 'block');\n    }\n\n    ngOnInit() {\n      const parent = this.el.nativeElement.parentNode;\n      const tableWrapper = this.renderer.createElement('div');\n\n      if (this.scrollY && this.scrollX && this.maxHeight && this.maxWidth) {\n        this.wrapTableWithHorizontalAndVerticalScrollingWrapper(tableWrapper);\n      }\n\n      if (this.scrollY && this.maxHeight) {\n        this.wrapTableWithVerticalScrollingWrapper(tableWrapper);\n      }\n\n      if (this.scrollX && this.maxWidth) {\n        this.wrapTableWithHorizontalScrollingWrapper(tableWrapper);\n      }\n\n      this.renderer.insertBefore(parent, tableWrapper, this.el.nativeElement);\n      this.renderer.removeChild(parent, this.el.nativeElement);\n      this.renderer.appendChild(tableWrapper, this.el.nativeElement);\n    }\n\n  }\n\n  MdbTableScrollDirective.ɵfac = function MdbTableScrollDirective_Factory(t) {\n    return new (t || MdbTableScrollDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  MdbTableScrollDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MdbTableScrollDirective,\n    selectors: [[\"\", \"mdbTableScroll\", \"\"]],\n    inputs: {\n      scrollY: \"scrollY\",\n      scrollX: \"scrollX\",\n      maxHeight: \"maxHeight\",\n      maxWidth: \"maxWidth\"\n    }\n  });\n  return MdbTableScrollDirective;\n})();\nlet MdbTableRowDirective = /*#__PURE__*/(() => {\n  class MdbTableRowDirective {\n    constructor(el) {\n      this.el = el;\n      this.rowCreated = new EventEmitter();\n      this.rowRemoved = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.rowCreated.emit({\n        created: true,\n        el: this.el.nativeElement\n      });\n    }\n\n    ngOnDestroy() {\n      this.rowRemoved.emit({\n        removed: true\n      });\n    }\n\n  }\n\n  MdbTableRowDirective.ɵfac = function MdbTableRowDirective_Factory(t) {\n    return new (t || MdbTableRowDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  MdbTableRowDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: MdbTableRowDirective,\n    selectors: [[\"\", \"mdbTableRow\", \"\"]],\n    outputs: {\n      rowCreated: \"rowCreated\",\n      rowRemoved: \"rowRemoved\"\n    }\n  });\n  return MdbTableRowDirective;\n})();\nlet MdbTableService = /*#__PURE__*/(() => {\n  class MdbTableService {\n    constructor() {\n      this._dataSource = [];\n      this._dataSourceChanged = new Subject();\n    }\n\n    addRow(newRow) {\n      this.getDataSource().push(newRow);\n    }\n\n    addRowAfter(index, row) {\n      this.getDataSource().splice(index, 0, row);\n    }\n\n    removeRow(index) {\n      this.getDataSource().splice(index, 1);\n    }\n\n    rowRemoved() {\n      const rowRemoved = new Observable(observer => {\n        observer.next(true);\n      });\n      return rowRemoved;\n    }\n\n    removeLastRow() {\n      this.getDataSource().pop();\n    }\n\n    getDataSource() {\n      return this._dataSource;\n    }\n\n    setDataSource(data) {\n      this._dataSource = data;\n\n      this._dataSourceChanged.next(this.getDataSource());\n    }\n\n    dataSourceChange() {\n      return this._dataSourceChanged;\n    }\n\n    filterLocalDataBy(searchKey) {\n      return this.getDataSource().filter(obj => {\n        return Object.keys(obj).some(key => {\n          if (obj[key]) {\n            return obj[key].toString().toLowerCase().includes(searchKey);\n          }\n        });\n      });\n    }\n\n    searchLocalDataBy(searchKey) {\n      if (!searchKey) {\n        return this.getDataSource();\n      }\n\n      if (searchKey) {\n        return this.filterLocalDataBy(searchKey.toLowerCase());\n      }\n    }\n\n    searchDataObservable(searchKey) {\n      const observable = new Observable(observer => {\n        observer.next(this.searchLocalDataBy(searchKey));\n      });\n      return observable;\n    }\n\n  }\n\n  MdbTableService.ɵfac = function MdbTableService_Factory(t) {\n    return new (t || MdbTableService)();\n  };\n\n  MdbTableService.ɵprov = i0.ɵɵdefineInjectable({\n    factory: function MdbTableService_Factory() {\n      return new MdbTableService();\n    },\n    token: MdbTableService,\n    providedIn: \"root\"\n  });\n  return MdbTableService;\n})();\nlet MdbTablePaginationComponent = /*#__PURE__*/(() => {\n  class MdbTablePaginationComponent {\n    constructor(cdRef) {\n      this.cdRef = cdRef;\n      this.searchPagination = false;\n      this.searchDataSource = null;\n      this.ofKeyword = 'of';\n      this.dashKeyword = '-';\n      this.paginationAlign = '';\n      this.hideDescription = false;\n      this._destroy$ = new Subject();\n      this.maxVisibleItems = 10;\n      this.firstItemIndex = 0;\n      this.lastItemIndex = this.maxVisibleItems;\n      this.lastVisibleItemIndex = 5;\n      this.activePageNumber = 1;\n      this.allItemsLength = 0;\n      this.nextShouldBeDisabled = false;\n      this.previousShouldBeDisabled = true;\n      this.searchText = '';\n      this.pagination = new Subject();\n      this.nextPageClick = new EventEmitter();\n      this.previousPageClick = new EventEmitter();\n      this.firstPageClick = new EventEmitter();\n      this.lastPageClick = new EventEmitter();\n    }\n\n    ngOnInit() {\n      if (this.tableEl) {\n        this.allItemsLength = this.tableEl.getDataSource().length;\n      }\n    }\n\n    ngAfterViewInit() {\n      if (this.tableEl) {\n        this.tableEl.dataSourceChange().pipe(takeUntil(this._destroy$)).subscribe(data => {\n          this.allItemsLength = data.length;\n          this.lastVisibleItemIndex = data.length;\n          this.calculateFirstItemIndex();\n          this.calculateLastItemIndex();\n          this.disableNextButton(data);\n\n          if (this.searchDataSource) {\n            setTimeout(() => {\n              if (this.searchDataSource.length !== data.length) {\n                this.activePageNumber = 1;\n                this.firstItemIndex = 1;\n              }\n            }, 0);\n          }\n        });\n      }\n\n      this.paginationChange().pipe(takeUntil(this._destroy$)).subscribe(data => {\n        this.firstItemIndex = data.first;\n        this.lastVisibleItemIndex = data.last;\n      });\n    }\n\n    ngOnChanges(changes) {\n      const searchDataSource = changes['searchDataSource'];\n\n      if (searchDataSource.currentValue.length !== 0) {\n        this.allItemsLength = searchDataSource.currentValue.length;\n      }\n\n      if (this.lastVisibleItemIndex > this.allItemsLength) {\n        this.lastVisibleItemIndex = this.allItemsLength;\n      }\n\n      if (searchDataSource.currentValue.length === 0) {\n        this.firstItemIndex = 0;\n        this.lastItemIndex = 0;\n        this.lastVisibleItemIndex = 0;\n        this.allItemsLength = 0;\n      }\n\n      if (!searchDataSource.isFirstChange() && searchDataSource.currentValue.length <= this.maxVisibleItems) {\n        this.nextShouldBeDisabled = true;\n        this.lastVisibleItemIndex = searchDataSource.currentValue.length;\n      } else {\n        this.nextShouldBeDisabled = false;\n      }\n    }\n\n    setMaxVisibleItemsNumberTo(value) {\n      this.lastItemIndex = value;\n      this.lastVisibleItemIndex = value;\n      this.maxVisibleItems = value;\n      this.cdRef.detectChanges();\n    }\n\n    searchTextObs() {\n      const observable = new Observable(observer => {\n        observer.next(this.searchText);\n      });\n      return observable;\n    }\n\n    disableNextButton(data) {\n      if (data.length <= this.maxVisibleItems) {\n        this.nextShouldBeDisabled = true;\n      } else {\n        this.nextShouldBeDisabled = false;\n      }\n    }\n\n    calculateFirstItemIndex() {\n      this.firstItemIndex = this.activePageNumber * this.maxVisibleItems - this.maxVisibleItems + 1;\n      this.pagination.next({\n        first: this.firstItemIndex,\n        last: this.lastItemIndex\n      });\n    }\n\n    calculateLastItemIndex() {\n      this.lastItemIndex = this.activePageNumber * this.maxVisibleItems;\n      this.lastVisibleItemIndex = this.lastItemIndex;\n\n      if (this.searchDataSource && this.lastItemIndex > this.searchDataSource.length) {\n        this.lastVisibleItemIndex = this.searchDataSource.length;\n      } else if (!this.searchDataSource) {\n        this.lastVisibleItemIndex = this.lastItemIndex;\n      }\n\n      if (this.lastItemIndex > this.tableEl.getDataSource().length) {\n        this.lastItemIndex = this.tableEl.getDataSource().length;\n        this.lastVisibleItemIndex = this.tableEl.getDataSource().length;\n      }\n\n      this.pagination.next({\n        first: this.firstItemIndex,\n        last: this.lastItemIndex\n      });\n    }\n\n    paginationChange() {\n      return this.pagination;\n    }\n\n    calculateHowManyPagesShouldBe() {\n      return Math.ceil(this.tableEl.getDataSource().length / this.maxVisibleItems);\n    }\n\n    previousPage() {\n      this.activePageNumber--;\n      this.calculateFirstItemIndex();\n      this.calculateLastItemIndex();\n      this.previousPageClick.emit({\n        first: this.firstItemIndex,\n        last: this.lastItemIndex\n      });\n    }\n\n    nextPage() {\n      this.activePageNumber++;\n      this.calculateFirstItemIndex();\n      this.calculateLastItemIndex();\n\n      if (this.lastItemIndex > this.tableEl.getDataSource().length) {\n        this.lastItemIndex = this.tableEl.getDataSource().length;\n      }\n\n      if (this.lastVisibleItemIndex > this.allItemsLength) {\n        this.lastVisibleItemIndex = this.allItemsLength;\n      }\n\n      this.nextPageClick.emit({\n        first: this.firstItemIndex,\n        last: this.lastItemIndex\n      });\n    }\n\n    firstPage() {\n      this.activePageNumber = 1;\n      this.calculateFirstItemIndex();\n      this.calculateLastItemIndex();\n      this.firstPageClick.emit({\n        first: this.firstItemIndex,\n        last: this.lastItemIndex\n      });\n    }\n\n    lastPage() {\n      const lastPage = Math.ceil(this.allItemsLength / this.maxVisibleItems);\n      this.activePageNumber = lastPage;\n      this.calculateFirstItemIndex();\n      this.calculateLastItemIndex();\n      this.lastPageClick.emit({\n        first: this.firstItemIndex,\n        last: this.lastItemIndex\n      });\n    }\n\n    nextPageObservable() {\n      const obs = new Observable(observer => {\n        observer.next(this.firstItemIndex);\n      });\n      return obs;\n    }\n\n    previousPageObservable() {\n      const obs = new Observable(observer => {\n        observer.next(this.lastVisibleItemIndex);\n      });\n      return obs;\n    }\n\n    checkIfNextShouldBeDisabled() {\n      if (this.searchDataSource && this.lastVisibleItemIndex === this.searchDataSource.length) {\n        return true;\n      }\n\n      if (this.activePageNumber >= this.calculateHowManyPagesShouldBe()) {\n        return true;\n      }\n\n      if (this.nextShouldBeDisabled) {\n        return this.nextShouldBeDisabled;\n      }\n    }\n\n    checkIfPreviousShouldBeDisabled() {\n      if (this.activePageNumber === 1) {\n        return true;\n      }\n    }\n\n    ngOnDestroy() {\n      this._destroy$.next();\n\n      this._destroy$.complete();\n    }\n\n  }\n\n  MdbTablePaginationComponent.ɵfac = function MdbTablePaginationComponent_Factory(t) {\n    return new (t || MdbTablePaginationComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n  };\n\n  MdbTablePaginationComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdbTablePaginationComponent,\n    selectors: [[\"mdb-table-pagination\"]],\n    inputs: {\n      searchPagination: \"searchPagination\",\n      searchDataSource: \"searchDataSource\",\n      ofKeyword: \"ofKeyword\",\n      dashKeyword: \"dashKeyword\",\n      paginationAlign: \"paginationAlign\",\n      hideDescription: \"hideDescription\",\n      tableEl: \"tableEl\"\n    },\n    outputs: {\n      nextPageClick: \"nextPageClick\",\n      previousPageClick: \"previousPageClick\",\n      firstPageClick: \"firstPageClick\",\n      lastPageClick: \"lastPageClick\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 19,\n    vars: 17,\n    consts: [[1, \"pagination\", \"pagination-circle\", \"pg-blue\", \"d-flex\", \"flex-center\", 3, \"ngClass\"], [4, \"ngIf\"], [1, \"page-item\", 3, \"ngClass\"], [\"mdbWavesEffect\", \"\", \"aria-label\", \"Previous\", 1, \"page-link\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"mdbWavesEffect\", \"\", \"aria-label\", \"Next\", 1, \"page-link\", 3, \"click\"]],\n    template: function MdbTablePaginationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"nav\");\n        ɵngcc0.ɵɵelementStart(1, \"ul\", 0);\n        ɵngcc0.ɵɵtemplate(2, MdbTablePaginationComponent_li_2_Template, 2, 5, \"li\", 1);\n        ɵngcc0.ɵɵelementStart(3, \"li\", 2);\n        ɵngcc0.ɵɵelementStart(4, \"a\", 3);\n        ɵngcc0.ɵɵlistener(\"click\", function MdbTablePaginationComponent_Template_a_click_4_listener() {\n          return ctx.firstPage();\n        });\n        ɵngcc0.ɵɵelementStart(5, \"span\", 4);\n        ɵngcc0.ɵɵtext(6, \"\\u00AB\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"li\", 2);\n        ɵngcc0.ɵɵelementStart(8, \"a\", 3);\n        ɵngcc0.ɵɵlistener(\"click\", function MdbTablePaginationComponent_Template_a_click_8_listener() {\n          return ctx.previousPage();\n        });\n        ɵngcc0.ɵɵelementStart(9, \"span\", 4);\n        ɵngcc0.ɵɵtext(10, \"\\u2039\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"li\", 2);\n        ɵngcc0.ɵɵelementStart(12, \"a\", 3);\n        ɵngcc0.ɵɵlistener(\"click\", function MdbTablePaginationComponent_Template_a_click_12_listener() {\n          return ctx.nextPage();\n        });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 4);\n        ɵngcc0.ɵɵtext(14, \"\\u203A\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(15, \"li\", 2);\n        ɵngcc0.ɵɵelementStart(16, \"a\", 5);\n        ɵngcc0.ɵɵlistener(\"click\", function MdbTablePaginationComponent_Template_a_click_16_listener() {\n          return ctx.lastPage();\n        });\n        ɵngcc0.ɵɵelementStart(17, \"span\", 4);\n        ɵngcc0.ɵɵtext(18, \"\\u00BB\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(6, _c24, ctx.paginationAlign == \"end\", ctx.paginationAlign == \"start\"));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hideDescription);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(9, _c25, ctx.checkIfPreviousShouldBeDisabled()));\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(11, _c25, ctx.checkIfPreviousShouldBeDisabled()));\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(13, _c25, ctx.checkIfNextShouldBeDisabled()));\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(15, _c25, ctx.checkIfNextShouldBeDisabled()));\n      }\n    },\n    directives: [ɵngcc1.NgClass, ɵngcc1.NgIf],\n    encapsulation: 2\n  });\n  return MdbTablePaginationComponent;\n})();\nlet TableModule = /*#__PURE__*/(() => {\n  class TableModule {}\n\n  TableModule.ɵfac = function TableModule_Factory(t) {\n    return new (t || TableModule)();\n  };\n\n  TableModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TableModule\n  });\n  TableModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [MdbTableService],\n    imports: [[CommonModule]]\n  });\n  /** Default values provider for tooltip */\n\n  return TableModule;\n})();\nlet TooltipConfig = /*#__PURE__*/(() => {\n  class TooltipConfig {\n    constructor() {\n      /** tooltip placement, supported positions: 'top', 'bottom', 'left', 'right' */\n      this.placement = 'top';\n      /** array of event names which triggers tooltip opening */\n\n      this.triggers = 'hover focus';\n    }\n\n  }\n\n  TooltipConfig.ɵfac = function TooltipConfig_Factory(t) {\n    return new (t || TooltipConfig)();\n  };\n\n  TooltipConfig.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: TooltipConfig,\n    factory: TooltipConfig.ɵfac\n  });\n  return TooltipConfig;\n})();\nlet TooltipContainerComponent = /*#__PURE__*/(() => {\n  class TooltipContainerComponent {\n    constructor(config, elem) {\n      this.elem = elem;\n      this.containerClass = '';\n      this.show = !this.isBs3;\n      Object.assign(this, config);\n    }\n\n    get tooltipClasses() {\n      return `tooltip-fadeIn tooltip in tooltip-${this.placement} bs-tooltip-${this.placement} ${this.placement} ${this.containerClass}`;\n    }\n\n    get isBs3() {\n      return isBs3$1();\n    }\n\n    ngAfterViewInit() {\n      this.classMap = {\n        in: false,\n        fade: false\n      };\n      this.classMap[this.placement] = true;\n      this.classMap['tooltip-' + this.placement] = true;\n      this.classMap.in = true;\n\n      if (this.animation) {\n        this.classMap.fade = true;\n      }\n\n      if (this.popupClass) {\n        this.classMap[this.popupClass] = true;\n      }\n    }\n\n  }\n\n  TooltipContainerComponent.ɵfac = function TooltipContainerComponent_Factory(t) {\n    return new (t || TooltipContainerComponent)(ɵngcc0.ɵɵdirectiveInject(TooltipConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  TooltipContainerComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TooltipContainerComponent,\n    selectors: [[\"mdb-tooltip-container\"]],\n    viewQuery: function TooltipContainerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c26, 7);\n        ɵngcc0.ɵɵviewQuery(_c27, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tooltipInner = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tooltipArrow = _t.first);\n      }\n    },\n    hostVars: 4,\n    hostBindings: function TooltipContainerComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.tooltipClasses);\n        ɵngcc0.ɵɵclassProp(\"show\", ctx.show);\n      }\n    },\n    inputs: {\n      containerClass: \"containerClass\"\n    },\n    ngContentSelectors: _c0,\n    decls: 5,\n    vars: 0,\n    consts: [[1, \"tooltip-arrow\", \"arrow\"], [\"tooltipArrow\", \"\"], [1, \"tooltip-inner\"], [\"tooltipInner\", \"\"]],\n    template: function TooltipContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelement(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵprojection(4);\n        ɵngcc0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"a .tooltip{position:absolute;z-index:1070;display:block;font-family:-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Helvetica Neue\\\",Arial,\\\"Noto Sans\\\",sans-serif,\\\"Apple Color Emoji\\\",\\\"Segoe UI Emoji\\\",\\\"Segoe UI Symbol\\\",\\\"Noto Color Emoji\\\";font-style:normal;font-weight:400;letter-spacing:normal;line-break:auto;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;white-space:normal;word-break:normal;word-spacing:normal;font-size:.875rem;word-wrap:break-word;opacity:0}a .tooltip.show{opacity:.9}a .tooltip.tooltip-top,a .tooltip.bs-tether-element-attached-bottom{padding:.8rem 0;margin-top:0}a .tooltip.tooltip-top .tooltip-inner:before,a .tooltip.bs-tether-element-attached-bottom .tooltip-inner:before{bottom:0;left:50%;margin-left:-.8rem;content:\\\"\\\";border-width:.8rem .8rem 0}a .tooltip.tooltip-right,a .tooltip.bs-tether-element-attached-left{padding:0 .8rem;margin-left:0}a .tooltip.tooltip-right .tooltip-inner:before,a .tooltip.bs-tether-element-attached-left .tooltip-inner:before{top:50%;left:0;margin-top:-.8rem;content:\\\"\\\";border-width:.8rem .8rem .8rem 0}a .tooltip.tooltip-bottom,a .tooltip.bs-tether-element-attached-top{padding:.8rem 0;margin-top:0}a .tooltip.tooltip-bottom .tooltip-inner:before,a .tooltip.bs-tether-element-attached-top .tooltip-inner:before{top:0;left:50%;margin-left:-.8rem;content:\\\"\\\";border-width:0 .8rem .8rem}a .tooltip.tooltip-left,a .tooltip.bs-tether-element-attached-right{padding:0 .8rem;margin-left:0}a .tooltip.tooltip-left .tooltip-inner:before,a .tooltip.bs-tether-element-attached-right .tooltip-inner:before{top:50%;right:0;margin-top:-.8rem;content:\\\"\\\";border-width:.8rem 0 .8rem .8rem}.tooltip-inner{max-width:200px;text-align:center;padding:.2rem .4rem;box-shadow:0 5px 11px #0000002e,0 4px 15px #00000026;border-radius:.25rem}.tooltip-inner:before{position:absolute;width:0;height:0;border-color:transparent;border-style:solid}@-webkit-keyframes fadeInTooltip{0%{opacity:0}to{opacity:1}}@keyframes fadeInTooltip{0%{opacity:0}to{opacity:1}}.tooltip-fadeIn{-webkit-animation-name:fadeInTooltip;animation-name:fadeInTooltip;-webkit-animation-delay:.2s;animation-delay:.2s;-webkit-animation-duration:.2s;animation-duration:.2s;-webkit-animation-fill-mode:both;animation-fill-mode:both}.single-tooltip{padding:.75rem 0 0}.single-tooltip a{padding:0!important}a[tooltip]{margin-left:0!important;padding:0 .5rem}.tooltip-arrow.left{position:relative;margin-right:-.6rem;transform:rotate(90deg)}.tooltip-arrow.right{position:relative;margin-left:-.6rem;transform:rotate(-90deg)}.tooltip-arrow.top{position:relative;transform:rotate(-180deg)}.tooltip-top{padding:.4rem 0}.tooltip-top .arrow{bottom:0}.tooltip-top .arrow:before{top:0;border-width:.4rem .4rem 0;border-top-color:#000}.tooltip-right{padding:0 .4rem}.tooltip-right .arrow{left:0}.tooltip-right .arrow:before{right:0;border-width:.4rem .4rem .4rem 0;border-right-color:#000}.tooltip-bottom{padding:.4rem 0}.tooltip-bottom .arrow{top:0}.tooltip-bottom .arrow:before{bottom:0;border-width:0 .4rem .4rem;border-bottom-color:#000}.tooltip-left{padding:0 .4rem}.tooltip-left .arrow{right:0}.tooltip-left .arrow:before{left:0;border-width:.4rem 0 .4rem .4rem;border-left-color:#000}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return TooltipContainerComponent;\n})();\nlet TooltipDirective = /*#__PURE__*/(() => {\n  class TooltipDirective {\n    constructor(_renderer, _elementRef, _positionService, _viewContainerRef, cis, config, platformId) {\n      this._elementRef = _elementRef;\n      this._positionService = _positionService;\n      this.platformId = platformId;\n      /** Fired when tooltip content changes */\n\n      this.tooltipChange = new EventEmitter();\n      this.dynamicPosition = true;\n      this.delay = 0;\n      this.fadeDuration = 150;\n      this._destroy$ = new Subject();\n      this.isBrowser = false;\n      this.isBrowser = isPlatformBrowser(this.platformId);\n      this._tooltip = cis.createLoader(this._elementRef, _viewContainerRef, _renderer).provide({\n        provide: TooltipConfig,\n        useValue: config\n      });\n      Object.assign(this, config);\n      this.onShown = this._tooltip.onShown;\n      this.shown = this._tooltip.onShown;\n      this.onHidden = this._tooltip.onHidden;\n      this.hidden = this._tooltip.onHidden;\n    }\n    /**\r\n     * Returns whether or not the tooltip is currently being shown\r\n     */\n\n\n    get isOpen() {\n      return this._tooltip.isShown;\n    }\n\n    set isOpen(value) {\n      if (value) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    }\n\n    ngOnInit() {\n      this._tooltip.listen({\n        triggers: this.triggers,\n        show: () => this.show()\n      });\n\n      this.tooltipChange.pipe(takeUntil(this._destroy$)).subscribe(value => {\n        if (!value) {\n          this._tooltip.hide();\n        }\n      });\n    }\n\n    ngOnChanges(changes) {\n      if (changes['mdbTooltip'] && !changes['mdbTooltip'].isFirstChange()) {\n        this.tooltipChange.emit(this.mdbTooltip);\n      }\n    }\n    /**\r\n     * Toggles an element’s tooltip. This is considered a “manual” triggering of\r\n     * the tooltip.\r\n     */\n\n\n    toggle() {\n      if (this.isOpen) {\n        return this.hide();\n      }\n\n      this.show();\n    }\n    /**\r\n     * Opens an element’s tooltip. This is considered a “manual” triggering of\r\n     * the tooltip.\r\n     */\n\n\n    show() {\n      if (this.isOpen || this.tooltipDisabled || this._delayTimeoutId || !this.mdbTooltip) {\n        return;\n      }\n\n      this._positionService.setOptions({\n        modifiers: {\n          flip: {\n            enabled: this.dynamicPosition\n          },\n          preventOverflow: {\n            enabled: this.dynamicPosition\n          }\n        }\n      });\n\n      const showTooltip = () => {\n        this._tooltip.attach(TooltipContainerComponent).to(this.container).position({\n          attachment: this.placement\n        }).show({\n          content: this.mdbTooltip,\n          placement: this.placement\n        });\n      };\n\n      this.showTooltip(showTooltip);\n    }\n\n    showTooltip(fn) {\n      if (this.delay) {\n        this._delayTimeoutId = setTimeout(() => {\n          fn();\n        }, this.delay);\n      } else {\n        fn();\n      }\n    }\n    /**\r\n     * Closes an element’s tooltip. This is considered a “manual” triggering of\r\n     * the tooltip.\r\n     */\n\n\n    hide() {\n      if (this._delayTimeoutId) {\n        clearTimeout(this._delayTimeoutId);\n        this._delayTimeoutId = undefined;\n      }\n\n      if (!this._tooltip.isShown) {\n        return;\n      }\n\n      this._tooltip.instance.classMap.in = false;\n      setTimeout(() => {\n        this._tooltip.hide();\n      }, this.fadeDuration);\n    }\n\n    dispose() {\n      this._tooltip.dispose();\n    }\n\n    ngOnDestroy() {\n      this._tooltip.dispose();\n\n      this._destroy$.next();\n\n      this._destroy$.complete();\n    }\n\n  }\n\n  TooltipDirective.ɵfac = function TooltipDirective_Factory(t) {\n    return new (t || TooltipDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(PositioningService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ComponentLoaderFactory), ɵngcc0.ɵɵdirectiveInject(TooltipConfig), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n\n  TooltipDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TooltipDirective,\n    selectors: [[\"\", \"mdbTooltip\", \"\"]],\n    inputs: {\n      dynamicPosition: \"dynamicPosition\",\n      delay: \"delay\",\n      fadeDuration: \"fadeDuration\",\n      isOpen: \"isOpen\",\n      mdbTooltip: \"mdbTooltip\",\n      placement: \"placement\",\n      triggers: \"triggers\",\n      container: \"container\",\n      tooltipDisabled: \"tooltipDisabled\",\n      customHeight: \"customHeight\"\n    },\n    outputs: {\n      tooltipChange: \"tooltipChange\",\n      onShown: \"onShown\",\n      shown: \"shown\",\n      onHidden: \"onHidden\",\n      hidden: \"hidden\"\n    },\n    exportAs: [\"mdb-tooltip\"],\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n\n  __decorate([OnChange()], TooltipDirective.prototype, \"mdbTooltip\", void 0);\n\n  return TooltipDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BadgeModule, {\n    declarations: [MDBBadgeComponent],\n    exports: [MDBBadgeComponent]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BreadcrumbModule, {\n    declarations: function () {\n      return [MdbBreadcrumbComponent, MdbBreadcrumbItemComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [MdbBreadcrumbComponent, MdbBreadcrumbItemComponent];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ButtonsModule, {\n    declarations: [ButtonCheckboxDirective, ButtonRadioDirective, MdbBtnDirective, FixedButtonCaptionDirective],\n    exports: [ButtonCheckboxDirective, ButtonRadioDirective, MdbBtnDirective, FixedButtonCaptionDirective]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CardsModule, {\n    declarations: function () {\n      return [MdbCardComponent, MdbCardBodyComponent, MdbCardImageComponent, MdbCardTextComponent, MdbCardTitleComponent, MdbCardFooterComponent, MdbCardHeaderComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [MdbCardComponent, MdbCardBodyComponent, MdbCardImageComponent, MdbCardTextComponent, MdbCardTitleComponent, MdbCardFooterComponent, MdbCardHeaderComponent];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CarouselModule, {\n    declarations: function () {\n      return [SlideComponent, CarouselComponent];\n    },\n    imports: function () {\n      return [CommonModule, ButtonsModule];\n    },\n    exports: function () {\n      return [SlideComponent, CarouselComponent];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ChartsModule, {\n    declarations: [BaseChartDirective],\n    exports: [BaseChartDirective]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CheckboxModule, {\n    declarations: function () {\n      return [CheckboxComponent];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule];\n    },\n    exports: function () {\n      return [CheckboxComponent];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CollapseModule, {\n    declarations: [CollapseComponent],\n    exports: [CollapseComponent]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DropdownModule, {\n    declarations: [BsDropdownMenuDirective, BsDropdownToggleDirective, BsDropdownContainerComponent, BsDropdownDirective],\n    exports: [BsDropdownMenuDirective, BsDropdownToggleDirective, BsDropdownDirective]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IconsModule, {\n    declarations: function () {\n      return [MdbIconComponent, FabDirective, FarDirective, FasDirective, FalDirective, FadDirective];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [MdbIconComponent, FabDirective, FarDirective, FasDirective, FalDirective, FadDirective];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(InputUtilitiesModule, {\n    declarations: function () {\n      return [MdbErrorDirective, MdbSuccessDirective, MdbValidateDirective];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [MdbErrorDirective, MdbSuccessDirective, MdbValidateDirective];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(InputsModule, {\n    declarations: [MdbInput, MdbInputDirective, EqualValidatorDirective],\n    exports: [MdbInput, MdbInputDirective, EqualValidatorDirective]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ModalModule, {\n    declarations: function () {\n      return [ModalBackdropComponent, ModalDirective, ModalContainerComponent];\n    },\n    imports: function () {\n      return [A11yModule];\n    },\n    exports: function () {\n      return [ModalBackdropComponent, ModalDirective];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NavbarModule, {\n    declarations: function () {\n      return [NavbarComponent, LinksComponent, LogoComponent, NavlinksComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [NavbarComponent, LinksComponent, LogoComponent, NavlinksComponent];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PopoverModule, {\n    declarations: function () {\n      return [PopoverDirective, PopoverContainerComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [PopoverDirective];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TableModule, {\n    declarations: function () {\n      return [MdbTablePaginationComponent, MdbTableRowDirective, MdbTableScrollDirective, MdbTableSortDirective, MdbTableDirective];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [MdbTablePaginationComponent, MdbTableRowDirective, MdbTableScrollDirective, MdbTableSortDirective, MdbTableDirective];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TooltipModule = /*#__PURE__*/(() => {\n  class TooltipModule {\n    static forRoot() {\n      return {\n        ngModule: TooltipModule,\n        providers: [TooltipConfig, ComponentLoaderFactory, PositioningService]\n      };\n    }\n\n  }\n\n  TooltipModule.ɵfac = function TooltipModule_Factory(t) {\n    return new (t || TooltipModule)();\n  };\n\n  TooltipModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TooltipModule\n  });\n  TooltipModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return TooltipModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TooltipModule, {\n    declarations: function () {\n      return [TooltipDirective, TooltipContainerComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [TooltipDirective];\n    }\n  });\n})();\n\nlet WavesDirective = /*#__PURE__*/(() => {\n  class WavesDirective {\n    constructor(el) {\n      this.el = el;\n    }\n\n    click(event) {\n      if (!this.el.nativeElement.classList.contains('disabled')) {\n        const button = this.el.nativeElement;\n\n        if (!button.classList.contains('waves-effect')) {\n          button.className += ' waves-effect';\n        }\n\n        const xPos = event.clientX - button.getBoundingClientRect().left;\n        const yPos = event.clientY - button.getBoundingClientRect().top;\n        const tmp = document.createElement('div');\n        tmp.className += 'waves-ripple waves-rippling';\n        const ripple = button.appendChild(tmp);\n        const top = yPos + 'px';\n        const left = xPos + 'px';\n        tmp.style.top = top;\n        tmp.style.left = left;\n        const scale = 'scale(' + button.clientWidth / 100 * 3 + ') translate(0,0)'; // tslint:disable-next-line: deprecation\n\n        tmp.style.webkitTransform = scale;\n        tmp.style.transform = scale;\n        tmp.style.opacity = '1';\n        const duration = 750; // tslint:disable-next-line: deprecation\n\n        tmp.style.webkitTransitionDuration = duration + 'ms';\n        tmp.style.transitionDuration = duration + 'ms';\n        this.removeRipple(button, ripple);\n      }\n    }\n\n    removeRipple(button, ripple) {\n      ripple.classList.remove('waves-rippling');\n      setTimeout(() => {\n        ripple.style.opacity = '0';\n        setTimeout(() => {\n          button.removeChild(ripple);\n        }, 750);\n      }, 200);\n    }\n\n  }\n\n  WavesDirective.ɵfac = function WavesDirective_Factory(t) {\n    return new (t || WavesDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  WavesDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: WavesDirective,\n    selectors: [[\"\", \"mdbWavesEffect\", \"\"]],\n    hostBindings: function WavesDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function WavesDirective_click_HostBindingHandler($event) {\n          return ctx.click($event);\n        });\n      }\n    }\n  });\n  return WavesDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet WavesModule = /*#__PURE__*/(() => {\n  class WavesModule {\n    static forRoot() {\n      return {\n        ngModule: WavesModule,\n        providers: []\n      };\n    }\n\n  }\n\n  WavesModule.ɵfac = function WavesModule_Factory(t) {\n    return new (t || WavesModule)();\n  };\n\n  WavesModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: WavesModule\n  });\n  WavesModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return WavesModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(WavesModule, {\n    declarations: [WavesDirective],\n    exports: [WavesDirective]\n  });\n})();\n\nvar Direction = /*#__PURE__*/(() => {\n  (function (Direction) {\n    Direction[\"Up\"] = \"Up\";\n    Direction[\"Down\"] = \"Down\";\n  })(Direction || (Direction = {}));\n\n  return Direction;\n})();\nlet StickyHeaderDirective = /*#__PURE__*/(() => {\n  class StickyHeaderDirective {\n    constructor(_renderer, _el) {\n      this._renderer = _renderer;\n      this._el = _el;\n      this.animationDuration = 200;\n      this.transitionEnd = new EventEmitter();\n      this._destroy$ = new Subject();\n    }\n\n    ngAfterViewInit() {\n      const scroll$ = fromEvent(win$1, 'scroll').pipe(throttleTime(10), map(() => win$1.pageYOffset), pairwise(), map(([y1, y2]) => y2 < y1 ? Direction.Up : Direction.Down), distinctUntilChanged(), share());\n      this.scrollUp$ = scroll$.pipe(filter(direction => direction === Direction.Up));\n      this.scrollDown$ = scroll$.pipe(filter(direction => direction === Direction.Down));\n\n      this._renderer.setStyle(this._el.nativeElement, 'position', 'fixed');\n\n      this._renderer.setStyle(this._el.nativeElement, 'top', '0');\n\n      this._renderer.setStyle(this._el.nativeElement, 'width', '100%');\n\n      this._renderer.setStyle(this._el.nativeElement, 'z-index', '1030');\n\n      setTimeout(() => {\n        this.scrollUp$.pipe(skip(0), takeUntil(this._destroy$)).subscribe(() => {\n          this._renderer.setStyle(this._el.nativeElement, 'transition', `all ${this.animationDuration}ms ease-in`);\n\n          this._renderer.setStyle(this._el.nativeElement, 'transform', 'translateY(0%)');\n\n          this.transitionEnd.emit({\n            state: 'Visible'\n          });\n        });\n        this.scrollDown$.pipe(skip(0), takeUntil(this._destroy$)).subscribe(() => {\n          this._renderer.setStyle(this._el.nativeElement, 'transition', `all ${this.animationDuration}ms ease-in`);\n\n          this._renderer.setStyle(this._el.nativeElement, 'transform', 'translateY(-100%)');\n\n          this.transitionEnd.emit({\n            state: 'Hidden'\n          });\n        });\n      }, 0);\n    }\n\n    ngOnDestroy() {\n      this._destroy$.next();\n\n      this._destroy$.complete();\n    }\n\n  }\n\n  StickyHeaderDirective.ɵfac = function StickyHeaderDirective_Factory(t) {\n    return new (t || StickyHeaderDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  StickyHeaderDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: StickyHeaderDirective,\n    selectors: [[\"\", \"mdbStickyHeader\", \"\"]],\n    inputs: {\n      animationDuration: \"animationDuration\"\n    },\n    outputs: {\n      transitionEnd: \"transitionEnd\"\n    },\n    exportAs: [\"mdbStickyHeader\"]\n  });\n  return StickyHeaderDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet StickyHeaderModule = /*#__PURE__*/(() => {\n  class StickyHeaderModule {}\n\n  StickyHeaderModule.ɵfac = function StickyHeaderModule_Factory(t) {\n    return new (t || StickyHeaderModule)();\n  };\n\n  StickyHeaderModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: StickyHeaderModule\n  });\n  StickyHeaderModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return StickyHeaderModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(StickyHeaderModule, {\n    declarations: function () {\n      return [StickyHeaderDirective];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [StickyHeaderDirective];\n    }\n  });\n})(); // free\n\n\nconst MODULES = [ButtonsModule, CardsModule, WavesModule, InputsModule, NavbarModule, DropdownModule, CarouselModule, ChartsModule, CollapseModule, ModalModule, TooltipModule, PopoverModule, IconsModule, CheckboxModule, TableModule, BadgeModule, BreadcrumbModule, InputUtilitiesModule, StickyHeaderModule];\nlet MDBRootModule = /*#__PURE__*/(() => {\n  class MDBRootModule {}\n\n  MDBRootModule.ɵfac = function MDBRootModule_Factory(t) {\n    return new (t || MDBRootModule)();\n  };\n\n  MDBRootModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MDBRootModule\n  });\n  MDBRootModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[ButtonsModule, WavesModule.forRoot(), InputsModule.forRoot(), NavbarModule, DropdownModule.forRoot(), CarouselModule.forRoot(), ChartsModule, CollapseModule.forRoot(), ModalModule.forRoot(), TooltipModule.forRoot(), PopoverModule.forRoot(), IconsModule, CardsModule.forRoot(), CheckboxModule, TableModule, BadgeModule, BreadcrumbModule, InputUtilitiesModule, StickyHeaderModule], ButtonsModule, CardsModule, WavesModule, InputsModule, NavbarModule, DropdownModule, CarouselModule, ChartsModule, CollapseModule, ModalModule, TooltipModule, PopoverModule, IconsModule, CheckboxModule, TableModule, BadgeModule, BreadcrumbModule, InputUtilitiesModule, StickyHeaderModule]\n  });\n  return MDBRootModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MDBRootModule, {\n    imports: [ButtonsModule, WavesModule, InputsModule, NavbarModule, DropdownModule, CarouselModule, ChartsModule, CollapseModule, ModalModule, TooltipModule, PopoverModule, IconsModule, CardsModule, CheckboxModule, TableModule, BadgeModule, BreadcrumbModule, InputUtilitiesModule, StickyHeaderModule],\n    exports: [ButtonsModule, CardsModule, WavesModule, InputsModule, NavbarModule, DropdownModule, CarouselModule, ChartsModule, CollapseModule, ModalModule, TooltipModule, PopoverModule, IconsModule, CheckboxModule, TableModule, BadgeModule, BreadcrumbModule, InputUtilitiesModule, StickyHeaderModule]\n  });\n})();\n\nlet MDBBootstrapModule = /*#__PURE__*/(() => {\n  class MDBBootstrapModule {\n    static forRoot() {\n      return {\n        ngModule: MDBRootModule\n      };\n    }\n\n  }\n\n  MDBBootstrapModule.ɵfac = function MDBBootstrapModule_Factory(t) {\n    return new (t || MDBBootstrapModule)();\n  };\n\n  MDBBootstrapModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MDBBootstrapModule\n  });\n  MDBBootstrapModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [ButtonsModule, CardsModule, WavesModule, InputsModule, NavbarModule, DropdownModule, CarouselModule, ChartsModule, CollapseModule, ModalModule, TooltipModule, PopoverModule, IconsModule, CheckboxModule, TableModule, BadgeModule, BreadcrumbModule, InputUtilitiesModule, StickyHeaderModule]\n  });\n  return MDBBootstrapModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MDBBootstrapModule, {\n    exports: [ButtonsModule, CardsModule, WavesModule, InputsModule, NavbarModule, DropdownModule, CarouselModule, ChartsModule, CollapseModule, ModalModule, TooltipModule, PopoverModule, IconsModule, CheckboxModule, TableModule, BadgeModule, BreadcrumbModule, InputUtilitiesModule, StickyHeaderModule]\n  });\n})();\n/*\r\n * Public API Surface of ng-uikit-pro-standard-compile\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { BadgeModule, BaseChartDirective, BreadcrumbModule, BsDropdownConfig, BsDropdownContainerComponent, BsDropdownDirective, BsDropdownMenuDirective, BsDropdownState, BsDropdownToggleDirective, ButtonCheckboxDirective, ButtonRadioDirective, ButtonsModule, CHECKBOX_VALUE_ACCESSOR, CardsModule, CarouselComponent, CarouselConfig, CarouselModule, ChartsModule, CheckboxComponent, CheckboxModule, CollapseComponent, CollapseModule, DropdownModule, EqualValidatorDirective, FabDirective, FadDirective, FalDirective, FarDirective, FasDirective, FixedButtonCaptionDirective, IconsModule, InputUtilitiesModule, InputsModule, LinksComponent, LogoComponent, MDBBadgeComponent, MDBBootstrapModule, MDBModalRef, MDBModalService, MDBRootModule, MdbBreadcrumbComponent, MdbBreadcrumbItemComponent, MdbBtnDirective, MdbCardBodyComponent, MdbCardComponent, MdbCardFooterComponent, MdbCardHeaderComponent, MdbCardImageComponent, MdbCardTextComponent, MdbCardTitleComponent, MdbCheckboxChange, MdbErrorDirective, MdbIconComponent, MdbInput, MdbInputDirective, MdbSuccessDirective, MdbTableDirective, MdbTablePaginationComponent, MdbTableRowDirective, MdbTableScrollDirective, MdbTableService, MdbTableSortDirective, MdbValidateDirective, ModalBackdropComponent, ModalBackdropOptions, ModalContainerComponent, ModalDirective, ModalModule, ModalOptions, NavbarComponent, NavbarModule, NavbarService, NavlinksComponent, PopoverConfig, PopoverContainerComponent, PopoverDirective, PopoverModule, SlideComponent, StickyHeaderDirective, StickyHeaderModule, TableModule, TooltipConfig, TooltipContainerComponent, TooltipDirective, TooltipModule, WavesDirective, WavesModule, RADIO_CONTROL_VALUE_ACCESSOR as ɵa, CHECKBOX_CONTROL_VALUE_ACCESSOR as ɵb, CHECKBOX_VALUE_ACCESSOR as ɵc, CheckboxComponent as ɵd, ComponentLoaderFactory as ɵe, PositioningService as ɵf, OnChange as ɵg }; //# sourceMappingURL=angular-bootstrap-md.js.map","map":null,"metadata":{},"sourceType":"module"}